
AVR_NTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000050a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000534  00000000  00000000  00000560  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000003f0  00000000  00000000  00000a94  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 62 02 	call	0x4c4	; 0x4c4 <main>
  64:	0c 94 83 02 	jmp	0x506	; 0x506 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <PinMode>:
 */

#include"DIO.h"

void PinMode(u8 Local_u8_Num,u8 Local_u8_Mode)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	2a 97       	sbiw	r28, 0x0a	; 10
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	8b 83       	std	Y+3, r24	; 0x03
  82:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8_Pin = Local_u8_Num % 10;
  84:	8b 81       	ldd	r24, Y+3	; 0x03
  86:	9a e0       	ldi	r25, 0x0A	; 10
  88:	69 2f       	mov	r22, r25
  8a:	0e 94 77 02 	call	0x4ee	; 0x4ee <__udivmodqi4>
  8e:	89 2f       	mov	r24, r25
  90:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Port = Local_u8_Num / 10;
  92:	8b 81       	ldd	r24, Y+3	; 0x03
  94:	9a e0       	ldi	r25, 0x0A	; 10
  96:	69 2f       	mov	r22, r25
  98:	0e 94 77 02 	call	0x4ee	; 0x4ee <__udivmodqi4>
  9c:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_Mode)
  9e:	8c 81       	ldd	r24, Y+4	; 0x04
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3a 87       	std	Y+10, r19	; 0x0a
  a6:	29 87       	std	Y+9, r18	; 0x09
  a8:	89 85       	ldd	r24, Y+9	; 0x09
  aa:	9a 85       	ldd	r25, Y+10	; 0x0a
  ac:	00 97       	sbiw	r24, 0x00	; 0
  ae:	39 f0       	breq	.+14     	; 0xbe <PinMode+0x52>
  b0:	29 85       	ldd	r18, Y+9	; 0x09
  b2:	3a 85       	ldd	r19, Y+10	; 0x0a
  b4:	21 30       	cpi	r18, 0x01	; 1
  b6:	31 05       	cpc	r19, r1
  b8:	09 f4       	brne	.+2      	; 0xbc <PinMode+0x50>
  ba:	76 c0       	rjmp	.+236    	; 0x1a8 <PinMode+0x13c>
  bc:	e4 c0       	rjmp	.+456    	; 0x286 <PinMode+0x21a>
	{
	case INPUT:
		switch(Local_u8_Port)
  be:	89 81       	ldd	r24, Y+1	; 0x01
  c0:	28 2f       	mov	r18, r24
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	38 87       	std	Y+8, r19	; 0x08
  c6:	2f 83       	std	Y+7, r18	; 0x07
  c8:	8f 81       	ldd	r24, Y+7	; 0x07
  ca:	98 85       	ldd	r25, Y+8	; 0x08
  cc:	82 30       	cpi	r24, 0x02	; 2
  ce:	91 05       	cpc	r25, r1
  d0:	61 f1       	breq	.+88     	; 0x12a <PinMode+0xbe>
  d2:	2f 81       	ldd	r18, Y+7	; 0x07
  d4:	38 85       	ldd	r19, Y+8	; 0x08
  d6:	23 30       	cpi	r18, 0x03	; 3
  d8:	31 05       	cpc	r19, r1
  da:	34 f4       	brge	.+12     	; 0xe8 <PinMode+0x7c>
  dc:	8f 81       	ldd	r24, Y+7	; 0x07
  de:	98 85       	ldd	r25, Y+8	; 0x08
  e0:	81 30       	cpi	r24, 0x01	; 1
  e2:	91 05       	cpc	r25, r1
  e4:	69 f0       	breq	.+26     	; 0x100 <PinMode+0x94>
  e6:	cf c0       	rjmp	.+414    	; 0x286 <PinMode+0x21a>
  e8:	2f 81       	ldd	r18, Y+7	; 0x07
  ea:	38 85       	ldd	r19, Y+8	; 0x08
  ec:	23 30       	cpi	r18, 0x03	; 3
  ee:	31 05       	cpc	r19, r1
  f0:	89 f1       	breq	.+98     	; 0x154 <PinMode+0xe8>
  f2:	8f 81       	ldd	r24, Y+7	; 0x07
  f4:	98 85       	ldd	r25, Y+8	; 0x08
  f6:	84 30       	cpi	r24, 0x04	; 4
  f8:	91 05       	cpc	r25, r1
  fa:	09 f4       	brne	.+2      	; 0xfe <PinMode+0x92>
  fc:	40 c0       	rjmp	.+128    	; 0x17e <PinMode+0x112>
  fe:	c3 c0       	rjmp	.+390    	; 0x286 <PinMode+0x21a>
		{
			case 1:ClrBit(DDRA,Local_u8_Pin); break;
 100:	aa e3       	ldi	r26, 0x3A	; 58
 102:	b0 e0       	ldi	r27, 0x00	; 0
 104:	ea e3       	ldi	r30, 0x3A	; 58
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	48 2f       	mov	r20, r24
 10c:	8a 81       	ldd	r24, Y+2	; 0x02
 10e:	28 2f       	mov	r18, r24
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 2e       	mov	r0, r18
 118:	02 c0       	rjmp	.+4      	; 0x11e <PinMode+0xb2>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	0a 94       	dec	r0
 120:	e2 f7       	brpl	.-8      	; 0x11a <PinMode+0xae>
 122:	80 95       	com	r24
 124:	84 23       	and	r24, r20
 126:	8c 93       	st	X, r24
 128:	ae c0       	rjmp	.+348    	; 0x286 <PinMode+0x21a>
			case 2:ClrBit(DDRB,Local_u8_Pin); break;
 12a:	a7 e3       	ldi	r26, 0x37	; 55
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	e7 e3       	ldi	r30, 0x37	; 55
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	48 2f       	mov	r20, r24
 136:	8a 81       	ldd	r24, Y+2	; 0x02
 138:	28 2f       	mov	r18, r24
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 2e       	mov	r0, r18
 142:	02 c0       	rjmp	.+4      	; 0x148 <PinMode+0xdc>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	0a 94       	dec	r0
 14a:	e2 f7       	brpl	.-8      	; 0x144 <PinMode+0xd8>
 14c:	80 95       	com	r24
 14e:	84 23       	and	r24, r20
 150:	8c 93       	st	X, r24
 152:	99 c0       	rjmp	.+306    	; 0x286 <PinMode+0x21a>
			case 3:ClrBit(DDRC,Local_u8_Pin); break;
 154:	a4 e3       	ldi	r26, 0x34	; 52
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e4 e3       	ldi	r30, 0x34	; 52
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <PinMode+0x106>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <PinMode+0x102>
 176:	80 95       	com	r24
 178:	84 23       	and	r24, r20
 17a:	8c 93       	st	X, r24
 17c:	84 c0       	rjmp	.+264    	; 0x286 <PinMode+0x21a>
			case 4:ClrBit(DDRD,Local_u8_Pin); break;
 17e:	a0 e3       	ldi	r26, 0x30	; 48
 180:	b0 e0       	ldi	r27, 0x00	; 0
 182:	e0 e3       	ldi	r30, 0x30	; 48
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	48 2f       	mov	r20, r24
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	28 2f       	mov	r18, r24
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 2e       	mov	r0, r18
 196:	02 c0       	rjmp	.+4      	; 0x19c <PinMode+0x130>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	0a 94       	dec	r0
 19e:	e2 f7       	brpl	.-8      	; 0x198 <PinMode+0x12c>
 1a0:	80 95       	com	r24
 1a2:	84 23       	and	r24, r20
 1a4:	8c 93       	st	X, r24
 1a6:	6f c0       	rjmp	.+222    	; 0x286 <PinMode+0x21a>
			default:						  break;
		}
		break;
	case OUTPUT:
		switch(Local_u8_Port)
 1a8:	89 81       	ldd	r24, Y+1	; 0x01
 1aa:	28 2f       	mov	r18, r24
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	3e 83       	std	Y+6, r19	; 0x06
 1b0:	2d 83       	std	Y+5, r18	; 0x05
 1b2:	8d 81       	ldd	r24, Y+5	; 0x05
 1b4:	9e 81       	ldd	r25, Y+6	; 0x06
 1b6:	82 30       	cpi	r24, 0x02	; 2
 1b8:	91 05       	cpc	r25, r1
 1ba:	51 f1       	breq	.+84     	; 0x210 <PinMode+0x1a4>
 1bc:	2d 81       	ldd	r18, Y+5	; 0x05
 1be:	3e 81       	ldd	r19, Y+6	; 0x06
 1c0:	23 30       	cpi	r18, 0x03	; 3
 1c2:	31 05       	cpc	r19, r1
 1c4:	34 f4       	brge	.+12     	; 0x1d2 <PinMode+0x166>
 1c6:	8d 81       	ldd	r24, Y+5	; 0x05
 1c8:	9e 81       	ldd	r25, Y+6	; 0x06
 1ca:	81 30       	cpi	r24, 0x01	; 1
 1cc:	91 05       	cpc	r25, r1
 1ce:	61 f0       	breq	.+24     	; 0x1e8 <PinMode+0x17c>
 1d0:	5a c0       	rjmp	.+180    	; 0x286 <PinMode+0x21a>
 1d2:	2d 81       	ldd	r18, Y+5	; 0x05
 1d4:	3e 81       	ldd	r19, Y+6	; 0x06
 1d6:	23 30       	cpi	r18, 0x03	; 3
 1d8:	31 05       	cpc	r19, r1
 1da:	71 f1       	breq	.+92     	; 0x238 <PinMode+0x1cc>
 1dc:	8d 81       	ldd	r24, Y+5	; 0x05
 1de:	9e 81       	ldd	r25, Y+6	; 0x06
 1e0:	84 30       	cpi	r24, 0x04	; 4
 1e2:	91 05       	cpc	r25, r1
 1e4:	e9 f1       	breq	.+122    	; 0x260 <PinMode+0x1f4>
 1e6:	4f c0       	rjmp	.+158    	; 0x286 <PinMode+0x21a>
		{
			case 1:SetBit(DDRA,Local_u8_Pin); break;
 1e8:	aa e3       	ldi	r26, 0x3A	; 58
 1ea:	b0 e0       	ldi	r27, 0x00	; 0
 1ec:	ea e3       	ldi	r30, 0x3A	; 58
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	48 2f       	mov	r20, r24
 1f4:	8a 81       	ldd	r24, Y+2	; 0x02
 1f6:	28 2f       	mov	r18, r24
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 2e       	mov	r0, r18
 200:	02 c0       	rjmp	.+4      	; 0x206 <PinMode+0x19a>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	0a 94       	dec	r0
 208:	e2 f7       	brpl	.-8      	; 0x202 <PinMode+0x196>
 20a:	84 2b       	or	r24, r20
 20c:	8c 93       	st	X, r24
 20e:	3b c0       	rjmp	.+118    	; 0x286 <PinMode+0x21a>
			case 2:SetBit(DDRB,Local_u8_Pin); break;
 210:	a7 e3       	ldi	r26, 0x37	; 55
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	e7 e3       	ldi	r30, 0x37	; 55
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	48 2f       	mov	r20, r24
 21c:	8a 81       	ldd	r24, Y+2	; 0x02
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 2e       	mov	r0, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <PinMode+0x1c2>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <PinMode+0x1be>
 232:	84 2b       	or	r24, r20
 234:	8c 93       	st	X, r24
 236:	27 c0       	rjmp	.+78     	; 0x286 <PinMode+0x21a>
			case 3:SetBit(DDRC,Local_u8_Pin); break;
 238:	a4 e3       	ldi	r26, 0x34	; 52
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	e4 e3       	ldi	r30, 0x34	; 52
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	80 81       	ld	r24, Z
 242:	48 2f       	mov	r20, r24
 244:	8a 81       	ldd	r24, Y+2	; 0x02
 246:	28 2f       	mov	r18, r24
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 2e       	mov	r0, r18
 250:	02 c0       	rjmp	.+4      	; 0x256 <PinMode+0x1ea>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	0a 94       	dec	r0
 258:	e2 f7       	brpl	.-8      	; 0x252 <PinMode+0x1e6>
 25a:	84 2b       	or	r24, r20
 25c:	8c 93       	st	X, r24
 25e:	13 c0       	rjmp	.+38     	; 0x286 <PinMode+0x21a>
			case 4:SetBit(DDRD,Local_u8_Pin); break;
 260:	a0 e3       	ldi	r26, 0x30	; 48
 262:	b0 e0       	ldi	r27, 0x00	; 0
 264:	e0 e3       	ldi	r30, 0x30	; 48
 266:	f0 e0       	ldi	r31, 0x00	; 0
 268:	80 81       	ld	r24, Z
 26a:	48 2f       	mov	r20, r24
 26c:	8a 81       	ldd	r24, Y+2	; 0x02
 26e:	28 2f       	mov	r18, r24
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	02 2e       	mov	r0, r18
 278:	02 c0       	rjmp	.+4      	; 0x27e <PinMode+0x212>
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	0a 94       	dec	r0
 280:	e2 f7       	brpl	.-8      	; 0x27a <PinMode+0x20e>
 282:	84 2b       	or	r24, r20
 284:	8c 93       	st	X, r24
			default:						  break;
		}
		break;
	}
}
 286:	2a 96       	adiw	r28, 0x0a	; 10
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	cf 91       	pop	r28
 294:	df 91       	pop	r29
 296:	08 95       	ret

00000298 <PinWrite>:

void PinWrite(u8 Local_u8_Num,u8 Local_u8_Mode)
{
 298:	df 93       	push	r29
 29a:	cf 93       	push	r28
 29c:	cd b7       	in	r28, 0x3d	; 61
 29e:	de b7       	in	r29, 0x3e	; 62
 2a0:	2a 97       	sbiw	r28, 0x0a	; 10
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	f8 94       	cli
 2a6:	de bf       	out	0x3e, r29	; 62
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	cd bf       	out	0x3d, r28	; 61
 2ac:	8b 83       	std	Y+3, r24	; 0x03
 2ae:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8_Pin = Local_u8_Num % 10;
 2b0:	8b 81       	ldd	r24, Y+3	; 0x03
 2b2:	9a e0       	ldi	r25, 0x0A	; 10
 2b4:	69 2f       	mov	r22, r25
 2b6:	0e 94 77 02 	call	0x4ee	; 0x4ee <__udivmodqi4>
 2ba:	89 2f       	mov	r24, r25
 2bc:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Port = Local_u8_Num / 10;
 2be:	8b 81       	ldd	r24, Y+3	; 0x03
 2c0:	9a e0       	ldi	r25, 0x0A	; 10
 2c2:	69 2f       	mov	r22, r25
 2c4:	0e 94 77 02 	call	0x4ee	; 0x4ee <__udivmodqi4>
 2c8:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_Mode)
 2ca:	8c 81       	ldd	r24, Y+4	; 0x04
 2cc:	28 2f       	mov	r18, r24
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	3a 87       	std	Y+10, r19	; 0x0a
 2d2:	29 87       	std	Y+9, r18	; 0x09
 2d4:	89 85       	ldd	r24, Y+9	; 0x09
 2d6:	9a 85       	ldd	r25, Y+10	; 0x0a
 2d8:	00 97       	sbiw	r24, 0x00	; 0
 2da:	39 f0       	breq	.+14     	; 0x2ea <PinWrite+0x52>
 2dc:	29 85       	ldd	r18, Y+9	; 0x09
 2de:	3a 85       	ldd	r19, Y+10	; 0x0a
 2e0:	21 30       	cpi	r18, 0x01	; 1
 2e2:	31 05       	cpc	r19, r1
 2e4:	09 f4       	brne	.+2      	; 0x2e8 <PinWrite+0x50>
 2e6:	76 c0       	rjmp	.+236    	; 0x3d4 <PinWrite+0x13c>
 2e8:	e4 c0       	rjmp	.+456    	; 0x4b2 <PinWrite+0x21a>
	{
	case LOW:
		switch(Local_u8_Port)
 2ea:	89 81       	ldd	r24, Y+1	; 0x01
 2ec:	28 2f       	mov	r18, r24
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	38 87       	std	Y+8, r19	; 0x08
 2f2:	2f 83       	std	Y+7, r18	; 0x07
 2f4:	8f 81       	ldd	r24, Y+7	; 0x07
 2f6:	98 85       	ldd	r25, Y+8	; 0x08
 2f8:	82 30       	cpi	r24, 0x02	; 2
 2fa:	91 05       	cpc	r25, r1
 2fc:	61 f1       	breq	.+88     	; 0x356 <PinWrite+0xbe>
 2fe:	2f 81       	ldd	r18, Y+7	; 0x07
 300:	38 85       	ldd	r19, Y+8	; 0x08
 302:	23 30       	cpi	r18, 0x03	; 3
 304:	31 05       	cpc	r19, r1
 306:	34 f4       	brge	.+12     	; 0x314 <PinWrite+0x7c>
 308:	8f 81       	ldd	r24, Y+7	; 0x07
 30a:	98 85       	ldd	r25, Y+8	; 0x08
 30c:	81 30       	cpi	r24, 0x01	; 1
 30e:	91 05       	cpc	r25, r1
 310:	69 f0       	breq	.+26     	; 0x32c <PinWrite+0x94>
 312:	cf c0       	rjmp	.+414    	; 0x4b2 <PinWrite+0x21a>
 314:	2f 81       	ldd	r18, Y+7	; 0x07
 316:	38 85       	ldd	r19, Y+8	; 0x08
 318:	23 30       	cpi	r18, 0x03	; 3
 31a:	31 05       	cpc	r19, r1
 31c:	89 f1       	breq	.+98     	; 0x380 <PinWrite+0xe8>
 31e:	8f 81       	ldd	r24, Y+7	; 0x07
 320:	98 85       	ldd	r25, Y+8	; 0x08
 322:	84 30       	cpi	r24, 0x04	; 4
 324:	91 05       	cpc	r25, r1
 326:	09 f4       	brne	.+2      	; 0x32a <PinWrite+0x92>
 328:	40 c0       	rjmp	.+128    	; 0x3aa <PinWrite+0x112>
 32a:	c3 c0       	rjmp	.+390    	; 0x4b2 <PinWrite+0x21a>
		{
			case 1:ClrBit(PORTA,Local_u8_Pin); break;
 32c:	ab e3       	ldi	r26, 0x3B	; 59
 32e:	b0 e0       	ldi	r27, 0x00	; 0
 330:	eb e3       	ldi	r30, 0x3B	; 59
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	80 81       	ld	r24, Z
 336:	48 2f       	mov	r20, r24
 338:	8a 81       	ldd	r24, Y+2	; 0x02
 33a:	28 2f       	mov	r18, r24
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 2e       	mov	r0, r18
 344:	02 c0       	rjmp	.+4      	; 0x34a <PinWrite+0xb2>
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	0a 94       	dec	r0
 34c:	e2 f7       	brpl	.-8      	; 0x346 <PinWrite+0xae>
 34e:	80 95       	com	r24
 350:	84 23       	and	r24, r20
 352:	8c 93       	st	X, r24
 354:	ae c0       	rjmp	.+348    	; 0x4b2 <PinWrite+0x21a>
			case 2:ClrBit(PORTB,Local_u8_Pin); break;
 356:	a8 e3       	ldi	r26, 0x38	; 56
 358:	b0 e0       	ldi	r27, 0x00	; 0
 35a:	e8 e3       	ldi	r30, 0x38	; 56
 35c:	f0 e0       	ldi	r31, 0x00	; 0
 35e:	80 81       	ld	r24, Z
 360:	48 2f       	mov	r20, r24
 362:	8a 81       	ldd	r24, Y+2	; 0x02
 364:	28 2f       	mov	r18, r24
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	02 2e       	mov	r0, r18
 36e:	02 c0       	rjmp	.+4      	; 0x374 <PinWrite+0xdc>
 370:	88 0f       	add	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	0a 94       	dec	r0
 376:	e2 f7       	brpl	.-8      	; 0x370 <PinWrite+0xd8>
 378:	80 95       	com	r24
 37a:	84 23       	and	r24, r20
 37c:	8c 93       	st	X, r24
 37e:	99 c0       	rjmp	.+306    	; 0x4b2 <PinWrite+0x21a>
			case 3:ClrBit(PORTC,Local_u8_Pin); break;
 380:	a5 e3       	ldi	r26, 0x35	; 53
 382:	b0 e0       	ldi	r27, 0x00	; 0
 384:	e5 e3       	ldi	r30, 0x35	; 53
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	48 2f       	mov	r20, r24
 38c:	8a 81       	ldd	r24, Y+2	; 0x02
 38e:	28 2f       	mov	r18, r24
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	02 2e       	mov	r0, r18
 398:	02 c0       	rjmp	.+4      	; 0x39e <PinWrite+0x106>
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	0a 94       	dec	r0
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <PinWrite+0x102>
 3a2:	80 95       	com	r24
 3a4:	84 23       	and	r24, r20
 3a6:	8c 93       	st	X, r24
 3a8:	84 c0       	rjmp	.+264    	; 0x4b2 <PinWrite+0x21a>
			case 4:ClrBit(PORTD,Local_u8_Pin); break;
 3aa:	a1 e3       	ldi	r26, 0x31	; 49
 3ac:	b0 e0       	ldi	r27, 0x00	; 0
 3ae:	e1 e3       	ldi	r30, 0x31	; 49
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	80 81       	ld	r24, Z
 3b4:	48 2f       	mov	r20, r24
 3b6:	8a 81       	ldd	r24, Y+2	; 0x02
 3b8:	28 2f       	mov	r18, r24
 3ba:	30 e0       	ldi	r19, 0x00	; 0
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	02 2e       	mov	r0, r18
 3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <PinWrite+0x130>
 3c4:	88 0f       	add	r24, r24
 3c6:	99 1f       	adc	r25, r25
 3c8:	0a 94       	dec	r0
 3ca:	e2 f7       	brpl	.-8      	; 0x3c4 <PinWrite+0x12c>
 3cc:	80 95       	com	r24
 3ce:	84 23       	and	r24, r20
 3d0:	8c 93       	st	X, r24
 3d2:	6f c0       	rjmp	.+222    	; 0x4b2 <PinWrite+0x21a>
			default:						   break;
		}
		break;
	case HIGH:
		switch(Local_u8_Port)
 3d4:	89 81       	ldd	r24, Y+1	; 0x01
 3d6:	28 2f       	mov	r18, r24
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	3e 83       	std	Y+6, r19	; 0x06
 3dc:	2d 83       	std	Y+5, r18	; 0x05
 3de:	8d 81       	ldd	r24, Y+5	; 0x05
 3e0:	9e 81       	ldd	r25, Y+6	; 0x06
 3e2:	82 30       	cpi	r24, 0x02	; 2
 3e4:	91 05       	cpc	r25, r1
 3e6:	51 f1       	breq	.+84     	; 0x43c <PinWrite+0x1a4>
 3e8:	2d 81       	ldd	r18, Y+5	; 0x05
 3ea:	3e 81       	ldd	r19, Y+6	; 0x06
 3ec:	23 30       	cpi	r18, 0x03	; 3
 3ee:	31 05       	cpc	r19, r1
 3f0:	34 f4       	brge	.+12     	; 0x3fe <PinWrite+0x166>
 3f2:	8d 81       	ldd	r24, Y+5	; 0x05
 3f4:	9e 81       	ldd	r25, Y+6	; 0x06
 3f6:	81 30       	cpi	r24, 0x01	; 1
 3f8:	91 05       	cpc	r25, r1
 3fa:	61 f0       	breq	.+24     	; 0x414 <PinWrite+0x17c>
 3fc:	5a c0       	rjmp	.+180    	; 0x4b2 <PinWrite+0x21a>
 3fe:	2d 81       	ldd	r18, Y+5	; 0x05
 400:	3e 81       	ldd	r19, Y+6	; 0x06
 402:	23 30       	cpi	r18, 0x03	; 3
 404:	31 05       	cpc	r19, r1
 406:	71 f1       	breq	.+92     	; 0x464 <PinWrite+0x1cc>
 408:	8d 81       	ldd	r24, Y+5	; 0x05
 40a:	9e 81       	ldd	r25, Y+6	; 0x06
 40c:	84 30       	cpi	r24, 0x04	; 4
 40e:	91 05       	cpc	r25, r1
 410:	e9 f1       	breq	.+122    	; 0x48c <PinWrite+0x1f4>
 412:	4f c0       	rjmp	.+158    	; 0x4b2 <PinWrite+0x21a>
		{
			case 1:SetBit(PORTA,Local_u8_Pin); break;
 414:	ab e3       	ldi	r26, 0x3B	; 59
 416:	b0 e0       	ldi	r27, 0x00	; 0
 418:	eb e3       	ldi	r30, 0x3B	; 59
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	80 81       	ld	r24, Z
 41e:	48 2f       	mov	r20, r24
 420:	8a 81       	ldd	r24, Y+2	; 0x02
 422:	28 2f       	mov	r18, r24
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	02 2e       	mov	r0, r18
 42c:	02 c0       	rjmp	.+4      	; 0x432 <PinWrite+0x19a>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	0a 94       	dec	r0
 434:	e2 f7       	brpl	.-8      	; 0x42e <PinWrite+0x196>
 436:	84 2b       	or	r24, r20
 438:	8c 93       	st	X, r24
 43a:	3b c0       	rjmp	.+118    	; 0x4b2 <PinWrite+0x21a>
			case 2:SetBit(PORTB,Local_u8_Pin); break;
 43c:	a8 e3       	ldi	r26, 0x38	; 56
 43e:	b0 e0       	ldi	r27, 0x00	; 0
 440:	e8 e3       	ldi	r30, 0x38	; 56
 442:	f0 e0       	ldi	r31, 0x00	; 0
 444:	80 81       	ld	r24, Z
 446:	48 2f       	mov	r20, r24
 448:	8a 81       	ldd	r24, Y+2	; 0x02
 44a:	28 2f       	mov	r18, r24
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	02 2e       	mov	r0, r18
 454:	02 c0       	rjmp	.+4      	; 0x45a <PinWrite+0x1c2>
 456:	88 0f       	add	r24, r24
 458:	99 1f       	adc	r25, r25
 45a:	0a 94       	dec	r0
 45c:	e2 f7       	brpl	.-8      	; 0x456 <PinWrite+0x1be>
 45e:	84 2b       	or	r24, r20
 460:	8c 93       	st	X, r24
 462:	27 c0       	rjmp	.+78     	; 0x4b2 <PinWrite+0x21a>
			case 3:SetBit(PORTC,Local_u8_Pin); break;
 464:	a5 e3       	ldi	r26, 0x35	; 53
 466:	b0 e0       	ldi	r27, 0x00	; 0
 468:	e5 e3       	ldi	r30, 0x35	; 53
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	80 81       	ld	r24, Z
 46e:	48 2f       	mov	r20, r24
 470:	8a 81       	ldd	r24, Y+2	; 0x02
 472:	28 2f       	mov	r18, r24
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	02 2e       	mov	r0, r18
 47c:	02 c0       	rjmp	.+4      	; 0x482 <PinWrite+0x1ea>
 47e:	88 0f       	add	r24, r24
 480:	99 1f       	adc	r25, r25
 482:	0a 94       	dec	r0
 484:	e2 f7       	brpl	.-8      	; 0x47e <PinWrite+0x1e6>
 486:	84 2b       	or	r24, r20
 488:	8c 93       	st	X, r24
 48a:	13 c0       	rjmp	.+38     	; 0x4b2 <PinWrite+0x21a>
			case 4:SetBit(PORTD,Local_u8_Pin); break;
 48c:	a1 e3       	ldi	r26, 0x31	; 49
 48e:	b0 e0       	ldi	r27, 0x00	; 0
 490:	e1 e3       	ldi	r30, 0x31	; 49
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	80 81       	ld	r24, Z
 496:	48 2f       	mov	r20, r24
 498:	8a 81       	ldd	r24, Y+2	; 0x02
 49a:	28 2f       	mov	r18, r24
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	02 2e       	mov	r0, r18
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <PinWrite+0x212>
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	0a 94       	dec	r0
 4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <PinWrite+0x20e>
 4ae:	84 2b       	or	r24, r20
 4b0:	8c 93       	st	X, r24
			default:						   break;
		}
		break;
	}
}
 4b2:	2a 96       	adiw	r28, 0x0a	; 10
 4b4:	0f b6       	in	r0, 0x3f	; 63
 4b6:	f8 94       	cli
 4b8:	de bf       	out	0x3e, r29	; 62
 4ba:	0f be       	out	0x3f, r0	; 63
 4bc:	cd bf       	out	0x3d, r28	; 61
 4be:	cf 91       	pop	r28
 4c0:	df 91       	pop	r29
 4c2:	08 95       	ret

000004c4 <main>:
#include"DIO/DIO.h"



int main()
{
 4c4:	df 93       	push	r29
 4c6:	cf 93       	push	r28
 4c8:	00 d0       	rcall	.+0      	; 0x4ca <main+0x6>
 4ca:	cd b7       	in	r28, 0x3d	; 61
 4cc:	de b7       	in	r29, 0x3e	; 62
	while(1)
	{
	PinMode(PC2,OUTPUT);
 4ce:	80 e2       	ldi	r24, 0x20	; 32
 4d0:	61 e0       	ldi	r22, 0x01	; 1
 4d2:	0e 94 36 00 	call	0x6c	; 0x6c <PinMode>
	PinWrite(PC2,HIGH);
 4d6:	80 e2       	ldi	r24, 0x20	; 32
 4d8:	61 e0       	ldi	r22, 0x01	; 1
 4da:	0e 94 4c 01 	call	0x298	; 0x298 <PinWrite>
	for(int i=0;i<100000;i++);
 4de:	1a 82       	std	Y+2, r1	; 0x02
 4e0:	19 82       	std	Y+1, r1	; 0x01
 4e2:	89 81       	ldd	r24, Y+1	; 0x01
 4e4:	9a 81       	ldd	r25, Y+2	; 0x02
 4e6:	01 96       	adiw	r24, 0x01	; 1
 4e8:	9a 83       	std	Y+2, r25	; 0x02
 4ea:	89 83       	std	Y+1, r24	; 0x01
 4ec:	fa cf       	rjmp	.-12     	; 0x4e2 <main+0x1e>

000004ee <__udivmodqi4>:
 4ee:	99 1b       	sub	r25, r25
 4f0:	79 e0       	ldi	r23, 0x09	; 9
 4f2:	04 c0       	rjmp	.+8      	; 0x4fc <__udivmodqi4_ep>

000004f4 <__udivmodqi4_loop>:
 4f4:	99 1f       	adc	r25, r25
 4f6:	96 17       	cp	r25, r22
 4f8:	08 f0       	brcs	.+2      	; 0x4fc <__udivmodqi4_ep>
 4fa:	96 1b       	sub	r25, r22

000004fc <__udivmodqi4_ep>:
 4fc:	88 1f       	adc	r24, r24
 4fe:	7a 95       	dec	r23
 500:	c9 f7       	brne	.-14     	; 0x4f4 <__udivmodqi4_loop>
 502:	80 95       	com	r24
 504:	08 95       	ret

00000506 <_exit>:
 506:	f8 94       	cli

00000508 <__stop_program>:
 508:	ff cf       	rjmp	.-2      	; 0x508 <__stop_program>
