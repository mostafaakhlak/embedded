
AVRNti.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000029f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000029f2  00002a66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000024c0  00000000  00000000  00002a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000be3  00000000  00000000  00004f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00005b13  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00005c53  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00005dc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00007a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000088f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  000096a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00009804  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00009a91  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a25f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ef       	ldi	r30, 0xF2	; 242
      68:	f9 e2       	ldi	r31, 0x29	; 41
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 31 14 	call	0x2862	; 0x2862 <main>
      7a:	0c 94 f7 14 	jmp	0x29ee	; 0x29ee <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 c0 14 	jmp	0x2980	; 0x2980 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 dc 14 	jmp	0x29b8	; 0x29b8 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 e8 14 	jmp	0x29d0	; 0x29d0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 e8 14 	jmp	0x29d0	; 0x29d0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 c0 14 	jmp	0x2980	; 0x2980 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 dc 14 	jmp	0x29b8	; 0x29b8 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 e8 14 	jmp	0x29d0	; 0x29d0 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 e8 14 	jmp	0x29d0	; 0x29d0 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 e8 14 	jmp	0x29d0	; 0x29d0 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 d0 14 	jmp	0x29a0	; 0x29a0 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 ec 14 	jmp	0x29d8	; 0x29d8 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <M_Dio_Void_PinMode>:
 */

#include"DIO.h"

void M_Dio_Void_PinMode(u8 Local_u8_Num,u8 Local_u8_Mode)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	2a 97       	sbiw	r28, 0x0a	; 10
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8b 83       	std	Y+3, r24	; 0x03
     b4c:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8_Pin = Local_u8_Num % 10;
     b4e:	8b 81       	ldd	r24, Y+3	; 0x03
     b50:	9a e0       	ldi	r25, 0x0A	; 10
     b52:	69 2f       	mov	r22, r25
     b54:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
     b58:	89 2f       	mov	r24, r25
     b5a:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Port = Local_u8_Num / 10;
     b5c:	8b 81       	ldd	r24, Y+3	; 0x03
     b5e:	9a e0       	ldi	r25, 0x0A	; 10
     b60:	69 2f       	mov	r22, r25
     b62:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
     b66:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_Mode)
     b68:	8c 81       	ldd	r24, Y+4	; 0x04
     b6a:	28 2f       	mov	r18, r24
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	3a 87       	std	Y+10, r19	; 0x0a
     b70:	29 87       	std	Y+9, r18	; 0x09
     b72:	89 85       	ldd	r24, Y+9	; 0x09
     b74:	9a 85       	ldd	r25, Y+10	; 0x0a
     b76:	00 97       	sbiw	r24, 0x00	; 0
     b78:	39 f0       	breq	.+14     	; 0xb88 <M_Dio_Void_PinMode+0x52>
     b7a:	29 85       	ldd	r18, Y+9	; 0x09
     b7c:	3a 85       	ldd	r19, Y+10	; 0x0a
     b7e:	21 30       	cpi	r18, 0x01	; 1
     b80:	31 05       	cpc	r19, r1
     b82:	09 f4       	brne	.+2      	; 0xb86 <M_Dio_Void_PinMode+0x50>
     b84:	76 c0       	rjmp	.+236    	; 0xc72 <M_Dio_Void_PinMode+0x13c>
     b86:	e4 c0       	rjmp	.+456    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
	{
	case INPUT:
		switch(Local_u8_Port)
     b88:	89 81       	ldd	r24, Y+1	; 0x01
     b8a:	28 2f       	mov	r18, r24
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	38 87       	std	Y+8, r19	; 0x08
     b90:	2f 83       	std	Y+7, r18	; 0x07
     b92:	8f 81       	ldd	r24, Y+7	; 0x07
     b94:	98 85       	ldd	r25, Y+8	; 0x08
     b96:	82 30       	cpi	r24, 0x02	; 2
     b98:	91 05       	cpc	r25, r1
     b9a:	61 f1       	breq	.+88     	; 0xbf4 <M_Dio_Void_PinMode+0xbe>
     b9c:	2f 81       	ldd	r18, Y+7	; 0x07
     b9e:	38 85       	ldd	r19, Y+8	; 0x08
     ba0:	23 30       	cpi	r18, 0x03	; 3
     ba2:	31 05       	cpc	r19, r1
     ba4:	34 f4       	brge	.+12     	; 0xbb2 <M_Dio_Void_PinMode+0x7c>
     ba6:	8f 81       	ldd	r24, Y+7	; 0x07
     ba8:	98 85       	ldd	r25, Y+8	; 0x08
     baa:	81 30       	cpi	r24, 0x01	; 1
     bac:	91 05       	cpc	r25, r1
     bae:	69 f0       	breq	.+26     	; 0xbca <M_Dio_Void_PinMode+0x94>
     bb0:	cf c0       	rjmp	.+414    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
     bb2:	2f 81       	ldd	r18, Y+7	; 0x07
     bb4:	38 85       	ldd	r19, Y+8	; 0x08
     bb6:	23 30       	cpi	r18, 0x03	; 3
     bb8:	31 05       	cpc	r19, r1
     bba:	89 f1       	breq	.+98     	; 0xc1e <M_Dio_Void_PinMode+0xe8>
     bbc:	8f 81       	ldd	r24, Y+7	; 0x07
     bbe:	98 85       	ldd	r25, Y+8	; 0x08
     bc0:	84 30       	cpi	r24, 0x04	; 4
     bc2:	91 05       	cpc	r25, r1
     bc4:	09 f4       	brne	.+2      	; 0xbc8 <M_Dio_Void_PinMode+0x92>
     bc6:	40 c0       	rjmp	.+128    	; 0xc48 <M_Dio_Void_PinMode+0x112>
     bc8:	c3 c0       	rjmp	.+390    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
		{
			case 1:ClrBit(DDRA,Local_u8_Pin); break;
     bca:	aa e3       	ldi	r26, 0x3A	; 58
     bcc:	b0 e0       	ldi	r27, 0x00	; 0
     bce:	ea e3       	ldi	r30, 0x3A	; 58
     bd0:	f0 e0       	ldi	r31, 0x00	; 0
     bd2:	80 81       	ld	r24, Z
     bd4:	48 2f       	mov	r20, r24
     bd6:	8a 81       	ldd	r24, Y+2	; 0x02
     bd8:	28 2f       	mov	r18, r24
     bda:	30 e0       	ldi	r19, 0x00	; 0
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	02 2e       	mov	r0, r18
     be2:	02 c0       	rjmp	.+4      	; 0xbe8 <M_Dio_Void_PinMode+0xb2>
     be4:	88 0f       	add	r24, r24
     be6:	99 1f       	adc	r25, r25
     be8:	0a 94       	dec	r0
     bea:	e2 f7       	brpl	.-8      	; 0xbe4 <M_Dio_Void_PinMode+0xae>
     bec:	80 95       	com	r24
     bee:	84 23       	and	r24, r20
     bf0:	8c 93       	st	X, r24
     bf2:	ae c0       	rjmp	.+348    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
			case 2:ClrBit(DDRB,Local_u8_Pin); break;
     bf4:	a7 e3       	ldi	r26, 0x37	; 55
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	e7 e3       	ldi	r30, 0x37	; 55
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	80 81       	ld	r24, Z
     bfe:	48 2f       	mov	r20, r24
     c00:	8a 81       	ldd	r24, Y+2	; 0x02
     c02:	28 2f       	mov	r18, r24
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	02 2e       	mov	r0, r18
     c0c:	02 c0       	rjmp	.+4      	; 0xc12 <M_Dio_Void_PinMode+0xdc>
     c0e:	88 0f       	add	r24, r24
     c10:	99 1f       	adc	r25, r25
     c12:	0a 94       	dec	r0
     c14:	e2 f7       	brpl	.-8      	; 0xc0e <M_Dio_Void_PinMode+0xd8>
     c16:	80 95       	com	r24
     c18:	84 23       	and	r24, r20
     c1a:	8c 93       	st	X, r24
     c1c:	99 c0       	rjmp	.+306    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
			case 3:ClrBit(DDRC,Local_u8_Pin); break;
     c1e:	a4 e3       	ldi	r26, 0x34	; 52
     c20:	b0 e0       	ldi	r27, 0x00	; 0
     c22:	e4 e3       	ldi	r30, 0x34	; 52
     c24:	f0 e0       	ldi	r31, 0x00	; 0
     c26:	80 81       	ld	r24, Z
     c28:	48 2f       	mov	r20, r24
     c2a:	8a 81       	ldd	r24, Y+2	; 0x02
     c2c:	28 2f       	mov	r18, r24
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	02 2e       	mov	r0, r18
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <M_Dio_Void_PinMode+0x106>
     c38:	88 0f       	add	r24, r24
     c3a:	99 1f       	adc	r25, r25
     c3c:	0a 94       	dec	r0
     c3e:	e2 f7       	brpl	.-8      	; 0xc38 <M_Dio_Void_PinMode+0x102>
     c40:	80 95       	com	r24
     c42:	84 23       	and	r24, r20
     c44:	8c 93       	st	X, r24
     c46:	84 c0       	rjmp	.+264    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
			case 4:ClrBit(DDRD,Local_u8_Pin); break;
     c48:	a0 e3       	ldi	r26, 0x30	; 48
     c4a:	b0 e0       	ldi	r27, 0x00	; 0
     c4c:	e0 e3       	ldi	r30, 0x30	; 48
     c4e:	f0 e0       	ldi	r31, 0x00	; 0
     c50:	80 81       	ld	r24, Z
     c52:	48 2f       	mov	r20, r24
     c54:	8a 81       	ldd	r24, Y+2	; 0x02
     c56:	28 2f       	mov	r18, r24
     c58:	30 e0       	ldi	r19, 0x00	; 0
     c5a:	81 e0       	ldi	r24, 0x01	; 1
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	02 2e       	mov	r0, r18
     c60:	02 c0       	rjmp	.+4      	; 0xc66 <M_Dio_Void_PinMode+0x130>
     c62:	88 0f       	add	r24, r24
     c64:	99 1f       	adc	r25, r25
     c66:	0a 94       	dec	r0
     c68:	e2 f7       	brpl	.-8      	; 0xc62 <M_Dio_Void_PinMode+0x12c>
     c6a:	80 95       	com	r24
     c6c:	84 23       	and	r24, r20
     c6e:	8c 93       	st	X, r24
     c70:	6f c0       	rjmp	.+222    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
			default:						  break;
		}
		break;
	case OUTPUT:
		switch(Local_u8_Port)
     c72:	89 81       	ldd	r24, Y+1	; 0x01
     c74:	28 2f       	mov	r18, r24
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	3e 83       	std	Y+6, r19	; 0x06
     c7a:	2d 83       	std	Y+5, r18	; 0x05
     c7c:	8d 81       	ldd	r24, Y+5	; 0x05
     c7e:	9e 81       	ldd	r25, Y+6	; 0x06
     c80:	82 30       	cpi	r24, 0x02	; 2
     c82:	91 05       	cpc	r25, r1
     c84:	51 f1       	breq	.+84     	; 0xcda <M_Dio_Void_PinMode+0x1a4>
     c86:	2d 81       	ldd	r18, Y+5	; 0x05
     c88:	3e 81       	ldd	r19, Y+6	; 0x06
     c8a:	23 30       	cpi	r18, 0x03	; 3
     c8c:	31 05       	cpc	r19, r1
     c8e:	34 f4       	brge	.+12     	; 0xc9c <M_Dio_Void_PinMode+0x166>
     c90:	8d 81       	ldd	r24, Y+5	; 0x05
     c92:	9e 81       	ldd	r25, Y+6	; 0x06
     c94:	81 30       	cpi	r24, 0x01	; 1
     c96:	91 05       	cpc	r25, r1
     c98:	61 f0       	breq	.+24     	; 0xcb2 <M_Dio_Void_PinMode+0x17c>
     c9a:	5a c0       	rjmp	.+180    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
     c9c:	2d 81       	ldd	r18, Y+5	; 0x05
     c9e:	3e 81       	ldd	r19, Y+6	; 0x06
     ca0:	23 30       	cpi	r18, 0x03	; 3
     ca2:	31 05       	cpc	r19, r1
     ca4:	71 f1       	breq	.+92     	; 0xd02 <M_Dio_Void_PinMode+0x1cc>
     ca6:	8d 81       	ldd	r24, Y+5	; 0x05
     ca8:	9e 81       	ldd	r25, Y+6	; 0x06
     caa:	84 30       	cpi	r24, 0x04	; 4
     cac:	91 05       	cpc	r25, r1
     cae:	e9 f1       	breq	.+122    	; 0xd2a <M_Dio_Void_PinMode+0x1f4>
     cb0:	4f c0       	rjmp	.+158    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
		{
			case 1:SetBit(DDRA,Local_u8_Pin); break;
     cb2:	aa e3       	ldi	r26, 0x3A	; 58
     cb4:	b0 e0       	ldi	r27, 0x00	; 0
     cb6:	ea e3       	ldi	r30, 0x3A	; 58
     cb8:	f0 e0       	ldi	r31, 0x00	; 0
     cba:	80 81       	ld	r24, Z
     cbc:	48 2f       	mov	r20, r24
     cbe:	8a 81       	ldd	r24, Y+2	; 0x02
     cc0:	28 2f       	mov	r18, r24
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	02 2e       	mov	r0, r18
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <M_Dio_Void_PinMode+0x19a>
     ccc:	88 0f       	add	r24, r24
     cce:	99 1f       	adc	r25, r25
     cd0:	0a 94       	dec	r0
     cd2:	e2 f7       	brpl	.-8      	; 0xccc <M_Dio_Void_PinMode+0x196>
     cd4:	84 2b       	or	r24, r20
     cd6:	8c 93       	st	X, r24
     cd8:	3b c0       	rjmp	.+118    	; 0xd50 <M_Dio_Void_PinMode+0x21a>
			case 2:SetBit(DDRB,Local_u8_Pin); break;
     cda:	a7 e3       	ldi	r26, 0x37	; 55
     cdc:	b0 e0       	ldi	r27, 0x00	; 0
     cde:	e7 e3       	ldi	r30, 0x37	; 55
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	80 81       	ld	r24, Z
     ce4:	48 2f       	mov	r20, r24
     ce6:	8a 81       	ldd	r24, Y+2	; 0x02
     ce8:	28 2f       	mov	r18, r24
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	81 e0       	ldi	r24, 0x01	; 1
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	02 2e       	mov	r0, r18
     cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <M_Dio_Void_PinMode+0x1c2>
     cf4:	88 0f       	add	r24, r24
     cf6:	99 1f       	adc	r25, r25
     cf8:	0a 94       	dec	r0
     cfa:	e2 f7       	brpl	.-8      	; 0xcf4 <M_Dio_Void_PinMode+0x1be>
     cfc:	84 2b       	or	r24, r20
     cfe:	8c 93       	st	X, r24
     d00:	27 c0       	rjmp	.+78     	; 0xd50 <M_Dio_Void_PinMode+0x21a>
			case 3:SetBit(DDRC,Local_u8_Pin); break;
     d02:	a4 e3       	ldi	r26, 0x34	; 52
     d04:	b0 e0       	ldi	r27, 0x00	; 0
     d06:	e4 e3       	ldi	r30, 0x34	; 52
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	80 81       	ld	r24, Z
     d0c:	48 2f       	mov	r20, r24
     d0e:	8a 81       	ldd	r24, Y+2	; 0x02
     d10:	28 2f       	mov	r18, r24
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	02 2e       	mov	r0, r18
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <M_Dio_Void_PinMode+0x1ea>
     d1c:	88 0f       	add	r24, r24
     d1e:	99 1f       	adc	r25, r25
     d20:	0a 94       	dec	r0
     d22:	e2 f7       	brpl	.-8      	; 0xd1c <M_Dio_Void_PinMode+0x1e6>
     d24:	84 2b       	or	r24, r20
     d26:	8c 93       	st	X, r24
     d28:	13 c0       	rjmp	.+38     	; 0xd50 <M_Dio_Void_PinMode+0x21a>
			case 4:SetBit(DDRD,Local_u8_Pin); break;
     d2a:	a0 e3       	ldi	r26, 0x30	; 48
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	e0 e3       	ldi	r30, 0x30	; 48
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	80 81       	ld	r24, Z
     d34:	48 2f       	mov	r20, r24
     d36:	8a 81       	ldd	r24, Y+2	; 0x02
     d38:	28 2f       	mov	r18, r24
     d3a:	30 e0       	ldi	r19, 0x00	; 0
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	02 2e       	mov	r0, r18
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <M_Dio_Void_PinMode+0x212>
     d44:	88 0f       	add	r24, r24
     d46:	99 1f       	adc	r25, r25
     d48:	0a 94       	dec	r0
     d4a:	e2 f7       	brpl	.-8      	; 0xd44 <M_Dio_Void_PinMode+0x20e>
     d4c:	84 2b       	or	r24, r20
     d4e:	8c 93       	st	X, r24
			default:						  break;
		}
		break;
	}
}
     d50:	2a 96       	adiw	r28, 0x0a	; 10
     d52:	0f b6       	in	r0, 0x3f	; 63
     d54:	f8 94       	cli
     d56:	de bf       	out	0x3e, r29	; 62
     d58:	0f be       	out	0x3f, r0	; 63
     d5a:	cd bf       	out	0x3d, r28	; 61
     d5c:	cf 91       	pop	r28
     d5e:	df 91       	pop	r29
     d60:	08 95       	ret

00000d62 <M_Dio_Void_PinWrite>:

void M_Dio_Void_PinWrite(u8 Local_u8_Num,u8 Local_u8_Mode)
{
     d62:	df 93       	push	r29
     d64:	cf 93       	push	r28
     d66:	cd b7       	in	r28, 0x3d	; 61
     d68:	de b7       	in	r29, 0x3e	; 62
     d6a:	2a 97       	sbiw	r28, 0x0a	; 10
     d6c:	0f b6       	in	r0, 0x3f	; 63
     d6e:	f8 94       	cli
     d70:	de bf       	out	0x3e, r29	; 62
     d72:	0f be       	out	0x3f, r0	; 63
     d74:	cd bf       	out	0x3d, r28	; 61
     d76:	8b 83       	std	Y+3, r24	; 0x03
     d78:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8_Pin = Local_u8_Num % 10;
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	9a e0       	ldi	r25, 0x0A	; 10
     d7e:	69 2f       	mov	r22, r25
     d80:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
     d84:	89 2f       	mov	r24, r25
     d86:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Port = Local_u8_Num / 10;
     d88:	8b 81       	ldd	r24, Y+3	; 0x03
     d8a:	9a e0       	ldi	r25, 0x0A	; 10
     d8c:	69 2f       	mov	r22, r25
     d8e:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
     d92:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_Mode)
     d94:	8c 81       	ldd	r24, Y+4	; 0x04
     d96:	28 2f       	mov	r18, r24
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	3a 87       	std	Y+10, r19	; 0x0a
     d9c:	29 87       	std	Y+9, r18	; 0x09
     d9e:	89 85       	ldd	r24, Y+9	; 0x09
     da0:	9a 85       	ldd	r25, Y+10	; 0x0a
     da2:	00 97       	sbiw	r24, 0x00	; 0
     da4:	39 f0       	breq	.+14     	; 0xdb4 <M_Dio_Void_PinWrite+0x52>
     da6:	29 85       	ldd	r18, Y+9	; 0x09
     da8:	3a 85       	ldd	r19, Y+10	; 0x0a
     daa:	21 30       	cpi	r18, 0x01	; 1
     dac:	31 05       	cpc	r19, r1
     dae:	09 f4       	brne	.+2      	; 0xdb2 <M_Dio_Void_PinWrite+0x50>
     db0:	76 c0       	rjmp	.+236    	; 0xe9e <M_Dio_Void_PinWrite+0x13c>
     db2:	e4 c0       	rjmp	.+456    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
	{
	case LOW:
		switch(Local_u8_Port)
     db4:	89 81       	ldd	r24, Y+1	; 0x01
     db6:	28 2f       	mov	r18, r24
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	38 87       	std	Y+8, r19	; 0x08
     dbc:	2f 83       	std	Y+7, r18	; 0x07
     dbe:	8f 81       	ldd	r24, Y+7	; 0x07
     dc0:	98 85       	ldd	r25, Y+8	; 0x08
     dc2:	82 30       	cpi	r24, 0x02	; 2
     dc4:	91 05       	cpc	r25, r1
     dc6:	61 f1       	breq	.+88     	; 0xe20 <M_Dio_Void_PinWrite+0xbe>
     dc8:	2f 81       	ldd	r18, Y+7	; 0x07
     dca:	38 85       	ldd	r19, Y+8	; 0x08
     dcc:	23 30       	cpi	r18, 0x03	; 3
     dce:	31 05       	cpc	r19, r1
     dd0:	34 f4       	brge	.+12     	; 0xdde <M_Dio_Void_PinWrite+0x7c>
     dd2:	8f 81       	ldd	r24, Y+7	; 0x07
     dd4:	98 85       	ldd	r25, Y+8	; 0x08
     dd6:	81 30       	cpi	r24, 0x01	; 1
     dd8:	91 05       	cpc	r25, r1
     dda:	69 f0       	breq	.+26     	; 0xdf6 <M_Dio_Void_PinWrite+0x94>
     ddc:	cf c0       	rjmp	.+414    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
     dde:	2f 81       	ldd	r18, Y+7	; 0x07
     de0:	38 85       	ldd	r19, Y+8	; 0x08
     de2:	23 30       	cpi	r18, 0x03	; 3
     de4:	31 05       	cpc	r19, r1
     de6:	89 f1       	breq	.+98     	; 0xe4a <M_Dio_Void_PinWrite+0xe8>
     de8:	8f 81       	ldd	r24, Y+7	; 0x07
     dea:	98 85       	ldd	r25, Y+8	; 0x08
     dec:	84 30       	cpi	r24, 0x04	; 4
     dee:	91 05       	cpc	r25, r1
     df0:	09 f4       	brne	.+2      	; 0xdf4 <M_Dio_Void_PinWrite+0x92>
     df2:	40 c0       	rjmp	.+128    	; 0xe74 <M_Dio_Void_PinWrite+0x112>
     df4:	c3 c0       	rjmp	.+390    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
		{
			case 1:ClrBit(PORTA,Local_u8_Pin); break;
     df6:	ab e3       	ldi	r26, 0x3B	; 59
     df8:	b0 e0       	ldi	r27, 0x00	; 0
     dfa:	eb e3       	ldi	r30, 0x3B	; 59
     dfc:	f0 e0       	ldi	r31, 0x00	; 0
     dfe:	80 81       	ld	r24, Z
     e00:	48 2f       	mov	r20, r24
     e02:	8a 81       	ldd	r24, Y+2	; 0x02
     e04:	28 2f       	mov	r18, r24
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	02 2e       	mov	r0, r18
     e0e:	02 c0       	rjmp	.+4      	; 0xe14 <M_Dio_Void_PinWrite+0xb2>
     e10:	88 0f       	add	r24, r24
     e12:	99 1f       	adc	r25, r25
     e14:	0a 94       	dec	r0
     e16:	e2 f7       	brpl	.-8      	; 0xe10 <M_Dio_Void_PinWrite+0xae>
     e18:	80 95       	com	r24
     e1a:	84 23       	and	r24, r20
     e1c:	8c 93       	st	X, r24
     e1e:	ae c0       	rjmp	.+348    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
			case 2:ClrBit(PORTB,Local_u8_Pin); break;
     e20:	a8 e3       	ldi	r26, 0x38	; 56
     e22:	b0 e0       	ldi	r27, 0x00	; 0
     e24:	e8 e3       	ldi	r30, 0x38	; 56
     e26:	f0 e0       	ldi	r31, 0x00	; 0
     e28:	80 81       	ld	r24, Z
     e2a:	48 2f       	mov	r20, r24
     e2c:	8a 81       	ldd	r24, Y+2	; 0x02
     e2e:	28 2f       	mov	r18, r24
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	02 2e       	mov	r0, r18
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <M_Dio_Void_PinWrite+0xdc>
     e3a:	88 0f       	add	r24, r24
     e3c:	99 1f       	adc	r25, r25
     e3e:	0a 94       	dec	r0
     e40:	e2 f7       	brpl	.-8      	; 0xe3a <M_Dio_Void_PinWrite+0xd8>
     e42:	80 95       	com	r24
     e44:	84 23       	and	r24, r20
     e46:	8c 93       	st	X, r24
     e48:	99 c0       	rjmp	.+306    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
			case 3:ClrBit(PORTC,Local_u8_Pin); break;
     e4a:	a5 e3       	ldi	r26, 0x35	; 53
     e4c:	b0 e0       	ldi	r27, 0x00	; 0
     e4e:	e5 e3       	ldi	r30, 0x35	; 53
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	80 81       	ld	r24, Z
     e54:	48 2f       	mov	r20, r24
     e56:	8a 81       	ldd	r24, Y+2	; 0x02
     e58:	28 2f       	mov	r18, r24
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	02 2e       	mov	r0, r18
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <M_Dio_Void_PinWrite+0x106>
     e64:	88 0f       	add	r24, r24
     e66:	99 1f       	adc	r25, r25
     e68:	0a 94       	dec	r0
     e6a:	e2 f7       	brpl	.-8      	; 0xe64 <M_Dio_Void_PinWrite+0x102>
     e6c:	80 95       	com	r24
     e6e:	84 23       	and	r24, r20
     e70:	8c 93       	st	X, r24
     e72:	84 c0       	rjmp	.+264    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
			case 4:ClrBit(PORTD,Local_u8_Pin); break;
     e74:	a1 e3       	ldi	r26, 0x31	; 49
     e76:	b0 e0       	ldi	r27, 0x00	; 0
     e78:	e1 e3       	ldi	r30, 0x31	; 49
     e7a:	f0 e0       	ldi	r31, 0x00	; 0
     e7c:	80 81       	ld	r24, Z
     e7e:	48 2f       	mov	r20, r24
     e80:	8a 81       	ldd	r24, Y+2	; 0x02
     e82:	28 2f       	mov	r18, r24
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	02 2e       	mov	r0, r18
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <M_Dio_Void_PinWrite+0x130>
     e8e:	88 0f       	add	r24, r24
     e90:	99 1f       	adc	r25, r25
     e92:	0a 94       	dec	r0
     e94:	e2 f7       	brpl	.-8      	; 0xe8e <M_Dio_Void_PinWrite+0x12c>
     e96:	80 95       	com	r24
     e98:	84 23       	and	r24, r20
     e9a:	8c 93       	st	X, r24
     e9c:	6f c0       	rjmp	.+222    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
			default:						   break;
		}
		break;
	case HIGH:
		switch(Local_u8_Port)
     e9e:	89 81       	ldd	r24, Y+1	; 0x01
     ea0:	28 2f       	mov	r18, r24
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	3e 83       	std	Y+6, r19	; 0x06
     ea6:	2d 83       	std	Y+5, r18	; 0x05
     ea8:	8d 81       	ldd	r24, Y+5	; 0x05
     eaa:	9e 81       	ldd	r25, Y+6	; 0x06
     eac:	82 30       	cpi	r24, 0x02	; 2
     eae:	91 05       	cpc	r25, r1
     eb0:	51 f1       	breq	.+84     	; 0xf06 <M_Dio_Void_PinWrite+0x1a4>
     eb2:	2d 81       	ldd	r18, Y+5	; 0x05
     eb4:	3e 81       	ldd	r19, Y+6	; 0x06
     eb6:	23 30       	cpi	r18, 0x03	; 3
     eb8:	31 05       	cpc	r19, r1
     eba:	34 f4       	brge	.+12     	; 0xec8 <M_Dio_Void_PinWrite+0x166>
     ebc:	8d 81       	ldd	r24, Y+5	; 0x05
     ebe:	9e 81       	ldd	r25, Y+6	; 0x06
     ec0:	81 30       	cpi	r24, 0x01	; 1
     ec2:	91 05       	cpc	r25, r1
     ec4:	61 f0       	breq	.+24     	; 0xede <M_Dio_Void_PinWrite+0x17c>
     ec6:	5a c0       	rjmp	.+180    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
     ec8:	2d 81       	ldd	r18, Y+5	; 0x05
     eca:	3e 81       	ldd	r19, Y+6	; 0x06
     ecc:	23 30       	cpi	r18, 0x03	; 3
     ece:	31 05       	cpc	r19, r1
     ed0:	71 f1       	breq	.+92     	; 0xf2e <M_Dio_Void_PinWrite+0x1cc>
     ed2:	8d 81       	ldd	r24, Y+5	; 0x05
     ed4:	9e 81       	ldd	r25, Y+6	; 0x06
     ed6:	84 30       	cpi	r24, 0x04	; 4
     ed8:	91 05       	cpc	r25, r1
     eda:	e9 f1       	breq	.+122    	; 0xf56 <M_Dio_Void_PinWrite+0x1f4>
     edc:	4f c0       	rjmp	.+158    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
		{
			case 1:SetBit(PORTA,Local_u8_Pin); break;
     ede:	ab e3       	ldi	r26, 0x3B	; 59
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	eb e3       	ldi	r30, 0x3B	; 59
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	80 81       	ld	r24, Z
     ee8:	48 2f       	mov	r20, r24
     eea:	8a 81       	ldd	r24, Y+2	; 0x02
     eec:	28 2f       	mov	r18, r24
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	02 2e       	mov	r0, r18
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <M_Dio_Void_PinWrite+0x19a>
     ef8:	88 0f       	add	r24, r24
     efa:	99 1f       	adc	r25, r25
     efc:	0a 94       	dec	r0
     efe:	e2 f7       	brpl	.-8      	; 0xef8 <M_Dio_Void_PinWrite+0x196>
     f00:	84 2b       	or	r24, r20
     f02:	8c 93       	st	X, r24
     f04:	3b c0       	rjmp	.+118    	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
			case 2:SetBit(PORTB,Local_u8_Pin); break;
     f06:	a8 e3       	ldi	r26, 0x38	; 56
     f08:	b0 e0       	ldi	r27, 0x00	; 0
     f0a:	e8 e3       	ldi	r30, 0x38	; 56
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	80 81       	ld	r24, Z
     f10:	48 2f       	mov	r20, r24
     f12:	8a 81       	ldd	r24, Y+2	; 0x02
     f14:	28 2f       	mov	r18, r24
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	81 e0       	ldi	r24, 0x01	; 1
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	02 2e       	mov	r0, r18
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <M_Dio_Void_PinWrite+0x1c2>
     f20:	88 0f       	add	r24, r24
     f22:	99 1f       	adc	r25, r25
     f24:	0a 94       	dec	r0
     f26:	e2 f7       	brpl	.-8      	; 0xf20 <M_Dio_Void_PinWrite+0x1be>
     f28:	84 2b       	or	r24, r20
     f2a:	8c 93       	st	X, r24
     f2c:	27 c0       	rjmp	.+78     	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
			case 3:SetBit(PORTC,Local_u8_Pin); break;
     f2e:	a5 e3       	ldi	r26, 0x35	; 53
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	e5 e3       	ldi	r30, 0x35	; 53
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	80 81       	ld	r24, Z
     f38:	48 2f       	mov	r20, r24
     f3a:	8a 81       	ldd	r24, Y+2	; 0x02
     f3c:	28 2f       	mov	r18, r24
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	02 2e       	mov	r0, r18
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <M_Dio_Void_PinWrite+0x1ea>
     f48:	88 0f       	add	r24, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	0a 94       	dec	r0
     f4e:	e2 f7       	brpl	.-8      	; 0xf48 <M_Dio_Void_PinWrite+0x1e6>
     f50:	84 2b       	or	r24, r20
     f52:	8c 93       	st	X, r24
     f54:	13 c0       	rjmp	.+38     	; 0xf7c <M_Dio_Void_PinWrite+0x21a>
			case 4:SetBit(PORTD,Local_u8_Pin); break;
     f56:	a1 e3       	ldi	r26, 0x31	; 49
     f58:	b0 e0       	ldi	r27, 0x00	; 0
     f5a:	e1 e3       	ldi	r30, 0x31	; 49
     f5c:	f0 e0       	ldi	r31, 0x00	; 0
     f5e:	80 81       	ld	r24, Z
     f60:	48 2f       	mov	r20, r24
     f62:	8a 81       	ldd	r24, Y+2	; 0x02
     f64:	28 2f       	mov	r18, r24
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	02 2e       	mov	r0, r18
     f6e:	02 c0       	rjmp	.+4      	; 0xf74 <M_Dio_Void_PinWrite+0x212>
     f70:	88 0f       	add	r24, r24
     f72:	99 1f       	adc	r25, r25
     f74:	0a 94       	dec	r0
     f76:	e2 f7       	brpl	.-8      	; 0xf70 <M_Dio_Void_PinWrite+0x20e>
     f78:	84 2b       	or	r24, r20
     f7a:	8c 93       	st	X, r24
			default:						   break;
		}
		break;
	}
}
     f7c:	2a 96       	adiw	r28, 0x0a	; 10
     f7e:	0f b6       	in	r0, 0x3f	; 63
     f80:	f8 94       	cli
     f82:	de bf       	out	0x3e, r29	; 62
     f84:	0f be       	out	0x3f, r0	; 63
     f86:	cd bf       	out	0x3d, r28	; 61
     f88:	cf 91       	pop	r28
     f8a:	df 91       	pop	r29
     f8c:	08 95       	ret

00000f8e <M_Dio_Void_PinTog>:


void M_Dio_Void_PinTog(u8 Local_u8_Num)
{
     f8e:	df 93       	push	r29
     f90:	cf 93       	push	r28
     f92:	00 d0       	rcall	.+0      	; 0xf94 <M_Dio_Void_PinTog+0x6>
     f94:	00 d0       	rcall	.+0      	; 0xf96 <M_Dio_Void_PinTog+0x8>
     f96:	0f 92       	push	r0
     f98:	cd b7       	in	r28, 0x3d	; 61
     f9a:	de b7       	in	r29, 0x3e	; 62
     f9c:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8_Pin = Local_u8_Num % 10;
     f9e:	8b 81       	ldd	r24, Y+3	; 0x03
     fa0:	9a e0       	ldi	r25, 0x0A	; 10
     fa2:	69 2f       	mov	r22, r25
     fa4:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
     fa8:	89 2f       	mov	r24, r25
     faa:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Port = Local_u8_Num / 10;
     fac:	8b 81       	ldd	r24, Y+3	; 0x03
     fae:	9a e0       	ldi	r25, 0x0A	; 10
     fb0:	69 2f       	mov	r22, r25
     fb2:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
     fb6:	89 83       	std	Y+1, r24	; 0x01
		switch(Local_u8_Port)
     fb8:	89 81       	ldd	r24, Y+1	; 0x01
     fba:	28 2f       	mov	r18, r24
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	3d 83       	std	Y+5, r19	; 0x05
     fc0:	2c 83       	std	Y+4, r18	; 0x04
     fc2:	8c 81       	ldd	r24, Y+4	; 0x04
     fc4:	9d 81       	ldd	r25, Y+5	; 0x05
     fc6:	82 30       	cpi	r24, 0x02	; 2
     fc8:	91 05       	cpc	r25, r1
     fca:	51 f1       	breq	.+84     	; 0x1020 <M_Dio_Void_PinTog+0x92>
     fcc:	2c 81       	ldd	r18, Y+4	; 0x04
     fce:	3d 81       	ldd	r19, Y+5	; 0x05
     fd0:	23 30       	cpi	r18, 0x03	; 3
     fd2:	31 05       	cpc	r19, r1
     fd4:	34 f4       	brge	.+12     	; 0xfe2 <M_Dio_Void_PinTog+0x54>
     fd6:	8c 81       	ldd	r24, Y+4	; 0x04
     fd8:	9d 81       	ldd	r25, Y+5	; 0x05
     fda:	81 30       	cpi	r24, 0x01	; 1
     fdc:	91 05       	cpc	r25, r1
     fde:	61 f0       	breq	.+24     	; 0xff8 <M_Dio_Void_PinTog+0x6a>
     fe0:	5a c0       	rjmp	.+180    	; 0x1096 <M_Dio_Void_PinTog+0x108>
     fe2:	2c 81       	ldd	r18, Y+4	; 0x04
     fe4:	3d 81       	ldd	r19, Y+5	; 0x05
     fe6:	23 30       	cpi	r18, 0x03	; 3
     fe8:	31 05       	cpc	r19, r1
     fea:	71 f1       	breq	.+92     	; 0x1048 <M_Dio_Void_PinTog+0xba>
     fec:	8c 81       	ldd	r24, Y+4	; 0x04
     fee:	9d 81       	ldd	r25, Y+5	; 0x05
     ff0:	84 30       	cpi	r24, 0x04	; 4
     ff2:	91 05       	cpc	r25, r1
     ff4:	e9 f1       	breq	.+122    	; 0x1070 <M_Dio_Void_PinTog+0xe2>
     ff6:	4f c0       	rjmp	.+158    	; 0x1096 <M_Dio_Void_PinTog+0x108>
		{
			case 1:TogBit(PORTA,Local_u8_Pin); break;
     ff8:	ab e3       	ldi	r26, 0x3B	; 59
     ffa:	b0 e0       	ldi	r27, 0x00	; 0
     ffc:	eb e3       	ldi	r30, 0x3B	; 59
     ffe:	f0 e0       	ldi	r31, 0x00	; 0
    1000:	80 81       	ld	r24, Z
    1002:	48 2f       	mov	r20, r24
    1004:	8a 81       	ldd	r24, Y+2	; 0x02
    1006:	28 2f       	mov	r18, r24
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	02 2e       	mov	r0, r18
    1010:	02 c0       	rjmp	.+4      	; 0x1016 <M_Dio_Void_PinTog+0x88>
    1012:	88 0f       	add	r24, r24
    1014:	99 1f       	adc	r25, r25
    1016:	0a 94       	dec	r0
    1018:	e2 f7       	brpl	.-8      	; 0x1012 <M_Dio_Void_PinTog+0x84>
    101a:	84 27       	eor	r24, r20
    101c:	8c 93       	st	X, r24
    101e:	3b c0       	rjmp	.+118    	; 0x1096 <M_Dio_Void_PinTog+0x108>
			case 2:TogBit(PORTB,Local_u8_Pin); break;
    1020:	a8 e3       	ldi	r26, 0x38	; 56
    1022:	b0 e0       	ldi	r27, 0x00	; 0
    1024:	e8 e3       	ldi	r30, 0x38	; 56
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	80 81       	ld	r24, Z
    102a:	48 2f       	mov	r20, r24
    102c:	8a 81       	ldd	r24, Y+2	; 0x02
    102e:	28 2f       	mov	r18, r24
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	81 e0       	ldi	r24, 0x01	; 1
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	02 2e       	mov	r0, r18
    1038:	02 c0       	rjmp	.+4      	; 0x103e <M_Dio_Void_PinTog+0xb0>
    103a:	88 0f       	add	r24, r24
    103c:	99 1f       	adc	r25, r25
    103e:	0a 94       	dec	r0
    1040:	e2 f7       	brpl	.-8      	; 0x103a <M_Dio_Void_PinTog+0xac>
    1042:	84 27       	eor	r24, r20
    1044:	8c 93       	st	X, r24
    1046:	27 c0       	rjmp	.+78     	; 0x1096 <M_Dio_Void_PinTog+0x108>
			case 3:TogBit(PORTC,Local_u8_Pin); break;
    1048:	a5 e3       	ldi	r26, 0x35	; 53
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	e5 e3       	ldi	r30, 0x35	; 53
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	80 81       	ld	r24, Z
    1052:	48 2f       	mov	r20, r24
    1054:	8a 81       	ldd	r24, Y+2	; 0x02
    1056:	28 2f       	mov	r18, r24
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	81 e0       	ldi	r24, 0x01	; 1
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	02 2e       	mov	r0, r18
    1060:	02 c0       	rjmp	.+4      	; 0x1066 <M_Dio_Void_PinTog+0xd8>
    1062:	88 0f       	add	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	0a 94       	dec	r0
    1068:	e2 f7       	brpl	.-8      	; 0x1062 <M_Dio_Void_PinTog+0xd4>
    106a:	84 27       	eor	r24, r20
    106c:	8c 93       	st	X, r24
    106e:	13 c0       	rjmp	.+38     	; 0x1096 <M_Dio_Void_PinTog+0x108>
			case 4:TogBit(PORTD,Local_u8_Pin); break;
    1070:	a1 e3       	ldi	r26, 0x31	; 49
    1072:	b0 e0       	ldi	r27, 0x00	; 0
    1074:	e1 e3       	ldi	r30, 0x31	; 49
    1076:	f0 e0       	ldi	r31, 0x00	; 0
    1078:	80 81       	ld	r24, Z
    107a:	48 2f       	mov	r20, r24
    107c:	8a 81       	ldd	r24, Y+2	; 0x02
    107e:	28 2f       	mov	r18, r24
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	02 2e       	mov	r0, r18
    1088:	02 c0       	rjmp	.+4      	; 0x108e <M_Dio_Void_PinTog+0x100>
    108a:	88 0f       	add	r24, r24
    108c:	99 1f       	adc	r25, r25
    108e:	0a 94       	dec	r0
    1090:	e2 f7       	brpl	.-8      	; 0x108a <M_Dio_Void_PinTog+0xfc>
    1092:	84 27       	eor	r24, r20
    1094:	8c 93       	st	X, r24
			default:						   break;
		}
}
    1096:	0f 90       	pop	r0
    1098:	0f 90       	pop	r0
    109a:	0f 90       	pop	r0
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	cf 91       	pop	r28
    10a2:	df 91       	pop	r29
    10a4:	08 95       	ret

000010a6 <H_SSD_Void_SSDInit>:
 *      Author: musta
 */
#include"SSd.h"

void H_SSD_Void_SSDInit(void)
{
    10a6:	df 93       	push	r29
    10a8:	cf 93       	push	r28
    10aa:	cd b7       	in	r28, 0x3d	; 61
    10ac:	de b7       	in	r29, 0x3e	; 62
	M_Dio_Void_PinMode(SSD_LED_A,OUTPUT);
    10ae:	8b e0       	ldi	r24, 0x0B	; 11
    10b0:	61 e0       	ldi	r22, 0x01	; 1
    10b2:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_LED_B,OUTPUT);
    10b6:	8c e0       	ldi	r24, 0x0C	; 12
    10b8:	61 e0       	ldi	r22, 0x01	; 1
    10ba:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_LED_C,OUTPUT);
    10be:	8d e0       	ldi	r24, 0x0D	; 13
    10c0:	61 e0       	ldi	r22, 0x01	; 1
    10c2:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_LED_D,OUTPUT);
    10c6:	8e e0       	ldi	r24, 0x0E	; 14
    10c8:	61 e0       	ldi	r22, 0x01	; 1
    10ca:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_LED_E,OUTPUT);
    10ce:	8f e0       	ldi	r24, 0x0F	; 15
    10d0:	61 e0       	ldi	r22, 0x01	; 1
    10d2:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_LED_F,OUTPUT);
    10d6:	80 e1       	ldi	r24, 0x10	; 16
    10d8:	61 e0       	ldi	r22, 0x01	; 1
    10da:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_LED_G,OUTPUT);
    10de:	81 e1       	ldi	r24, 0x11	; 17
    10e0:	61 e0       	ldi	r22, 0x01	; 1
    10e2:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_LED_DOT,OUTPUT);
    10e6:	84 e1       	ldi	r24, 0x14	; 20
    10e8:	61 e0       	ldi	r22, 0x01	; 1
    10ea:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_EN_1,OUTPUT);
    10ee:	84 e2       	ldi	r24, 0x24	; 36
    10f0:	61 e0       	ldi	r22, 0x01	; 1
    10f2:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	M_Dio_Void_PinMode(SSD_EN_2,OUTPUT);
    10f6:	85 e2       	ldi	r24, 0x25	; 37
    10f8:	61 e0       	ldi	r22, 0x01	; 1
    10fa:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
}
    10fe:	cf 91       	pop	r28
    1100:	df 91       	pop	r29
    1102:	08 95       	ret

00001104 <H_SSD_Void_SSDDisplay>:
void H_SSD_Void_SSDDisplay(u8 Local_u8_Num)
{
    1104:	df 93       	push	r29
    1106:	cf 93       	push	r28
    1108:	cd b7       	in	r28, 0x3d	; 61
    110a:	de b7       	in	r29, 0x3e	; 62
    110c:	a5 97       	sbiw	r28, 0x25	; 37
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	f8 94       	cli
    1112:	de bf       	out	0x3e, r29	; 62
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	cd bf       	out	0x3d, r28	; 61
    1118:	89 a3       	std	Y+33, r24	; 0x21
	u8 Local_u8_Units = Local_u8_Num % 10;
    111a:	89 a1       	ldd	r24, Y+33	; 0x21
    111c:	9a e0       	ldi	r25, 0x0A	; 10
    111e:	69 2f       	mov	r22, r25
    1120:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
    1124:	89 2f       	mov	r24, r25
    1126:	88 a3       	std	Y+32, r24	; 0x20
	u8 Local_u8_Tens = Local_u8_Num / 10;
    1128:	89 a1       	ldd	r24, Y+33	; 0x21
    112a:	9a e0       	ldi	r25, 0x0A	; 10
    112c:	69 2f       	mov	r22, r25
    112e:	0e 94 b4 14 	call	0x2968	; 0x2968 <__udivmodqi4>
    1132:	8f 8f       	std	Y+31, r24	; 0x1f
	u16 Local_u16_Counter=0;
    1134:	1e 8e       	std	Y+30, r1	; 0x1e
    1136:	1d 8e       	std	Y+29, r1	; 0x1d
	M_Dio_Void_PinWrite(SSD_EN_1,LOW);
    1138:	84 e2       	ldi	r24, 0x24	; 36
    113a:	60 e0       	ldi	r22, 0x00	; 0
    113c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
	M_Dio_Void_PinWrite(SSD_EN_2,LOW);
    1140:	85 e2       	ldi	r24, 0x25	; 37
    1142:	60 e0       	ldi	r22, 0x00	; 0
    1144:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>


	for(Local_u16_Counter=0;Local_u16_Counter < DISPLAY_TIME_INTERNAL;Local_u16_Counter++)
    1148:	1e 8e       	std	Y+30, r1	; 0x1e
    114a:	1d 8e       	std	Y+29, r1	; 0x1d
    114c:	e7 c3       	rjmp	.+1998   	; 0x191c <H_SSD_Void_SSDDisplay+0x818>
	{
		switch(Local_u8_Units)
    114e:	88 a1       	ldd	r24, Y+32	; 0x20
    1150:	28 2f       	mov	r18, r24
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	3d a3       	std	Y+37, r19	; 0x25
    1156:	2c a3       	std	Y+36, r18	; 0x24
    1158:	8c a1       	ldd	r24, Y+36	; 0x24
    115a:	9d a1       	ldd	r25, Y+37	; 0x25
    115c:	84 30       	cpi	r24, 0x04	; 4
    115e:	91 05       	cpc	r25, r1
    1160:	09 f4       	brne	.+2      	; 0x1164 <H_SSD_Void_SSDDisplay+0x60>
    1162:	bb c0       	rjmp	.+374    	; 0x12da <H_SSD_Void_SSDDisplay+0x1d6>
    1164:	2c a1       	ldd	r18, Y+36	; 0x24
    1166:	3d a1       	ldd	r19, Y+37	; 0x25
    1168:	25 30       	cpi	r18, 0x05	; 5
    116a:	31 05       	cpc	r19, r1
    116c:	ec f4       	brge	.+58     	; 0x11a8 <H_SSD_Void_SSDDisplay+0xa4>
    116e:	8c a1       	ldd	r24, Y+36	; 0x24
    1170:	9d a1       	ldd	r25, Y+37	; 0x25
    1172:	81 30       	cpi	r24, 0x01	; 1
    1174:	91 05       	cpc	r25, r1
    1176:	09 f4       	brne	.+2      	; 0x117a <H_SSD_Void_SSDDisplay+0x76>
    1178:	59 c0       	rjmp	.+178    	; 0x122c <H_SSD_Void_SSDDisplay+0x128>
    117a:	2c a1       	ldd	r18, Y+36	; 0x24
    117c:	3d a1       	ldd	r19, Y+37	; 0x25
    117e:	22 30       	cpi	r18, 0x02	; 2
    1180:	31 05       	cpc	r19, r1
    1182:	2c f4       	brge	.+10     	; 0x118e <H_SSD_Void_SSDDisplay+0x8a>
    1184:	8c a1       	ldd	r24, Y+36	; 0x24
    1186:	9d a1       	ldd	r25, Y+37	; 0x25
    1188:	00 97       	sbiw	r24, 0x00	; 0
    118a:	99 f1       	breq	.+102    	; 0x11f2 <H_SSD_Void_SSDDisplay+0xee>
    118c:	53 c1       	rjmp	.+678    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
    118e:	2c a1       	ldd	r18, Y+36	; 0x24
    1190:	3d a1       	ldd	r19, Y+37	; 0x25
    1192:	22 30       	cpi	r18, 0x02	; 2
    1194:	31 05       	cpc	r19, r1
    1196:	09 f4       	brne	.+2      	; 0x119a <H_SSD_Void_SSDDisplay+0x96>
    1198:	66 c0       	rjmp	.+204    	; 0x1266 <H_SSD_Void_SSDDisplay+0x162>
    119a:	8c a1       	ldd	r24, Y+36	; 0x24
    119c:	9d a1       	ldd	r25, Y+37	; 0x25
    119e:	83 30       	cpi	r24, 0x03	; 3
    11a0:	91 05       	cpc	r25, r1
    11a2:	09 f4       	brne	.+2      	; 0x11a6 <H_SSD_Void_SSDDisplay+0xa2>
    11a4:	7d c0       	rjmp	.+250    	; 0x12a0 <H_SSD_Void_SSDDisplay+0x19c>
    11a6:	46 c1       	rjmp	.+652    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
    11a8:	2c a1       	ldd	r18, Y+36	; 0x24
    11aa:	3d a1       	ldd	r19, Y+37	; 0x25
    11ac:	27 30       	cpi	r18, 0x07	; 7
    11ae:	31 05       	cpc	r19, r1
    11b0:	09 f4       	brne	.+2      	; 0x11b4 <H_SSD_Void_SSDDisplay+0xb0>
    11b2:	ea c0       	rjmp	.+468    	; 0x1388 <H_SSD_Void_SSDDisplay+0x284>
    11b4:	8c a1       	ldd	r24, Y+36	; 0x24
    11b6:	9d a1       	ldd	r25, Y+37	; 0x25
    11b8:	88 30       	cpi	r24, 0x08	; 8
    11ba:	91 05       	cpc	r25, r1
    11bc:	6c f4       	brge	.+26     	; 0x11d8 <H_SSD_Void_SSDDisplay+0xd4>
    11be:	2c a1       	ldd	r18, Y+36	; 0x24
    11c0:	3d a1       	ldd	r19, Y+37	; 0x25
    11c2:	25 30       	cpi	r18, 0x05	; 5
    11c4:	31 05       	cpc	r19, r1
    11c6:	09 f4       	brne	.+2      	; 0x11ca <H_SSD_Void_SSDDisplay+0xc6>
    11c8:	a5 c0       	rjmp	.+330    	; 0x1314 <H_SSD_Void_SSDDisplay+0x210>
    11ca:	8c a1       	ldd	r24, Y+36	; 0x24
    11cc:	9d a1       	ldd	r25, Y+37	; 0x25
    11ce:	86 30       	cpi	r24, 0x06	; 6
    11d0:	91 05       	cpc	r25, r1
    11d2:	09 f4       	brne	.+2      	; 0x11d6 <H_SSD_Void_SSDDisplay+0xd2>
    11d4:	bc c0       	rjmp	.+376    	; 0x134e <H_SSD_Void_SSDDisplay+0x24a>
    11d6:	2e c1       	rjmp	.+604    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
    11d8:	2c a1       	ldd	r18, Y+36	; 0x24
    11da:	3d a1       	ldd	r19, Y+37	; 0x25
    11dc:	28 30       	cpi	r18, 0x08	; 8
    11de:	31 05       	cpc	r19, r1
    11e0:	09 f4       	brne	.+2      	; 0x11e4 <H_SSD_Void_SSDDisplay+0xe0>
    11e2:	ef c0       	rjmp	.+478    	; 0x13c2 <H_SSD_Void_SSDDisplay+0x2be>
    11e4:	8c a1       	ldd	r24, Y+36	; 0x24
    11e6:	9d a1       	ldd	r25, Y+37	; 0x25
    11e8:	89 30       	cpi	r24, 0x09	; 9
    11ea:	91 05       	cpc	r25, r1
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <H_SSD_Void_SSDDisplay+0xec>
    11ee:	06 c1       	rjmp	.+524    	; 0x13fc <H_SSD_Void_SSDDisplay+0x2f8>
    11f0:	21 c1       	rjmp	.+578    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
		{
		case 0:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    11f2:	8b e0       	ldi	r24, 0x0B	; 11
    11f4:	61 e0       	ldi	r22, 0x01	; 1
    11f6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    11fa:	8c e0       	ldi	r24, 0x0C	; 12
    11fc:	61 e0       	ldi	r22, 0x01	; 1
    11fe:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    1202:	8d e0       	ldi	r24, 0x0D	; 13
    1204:	61 e0       	ldi	r22, 0x01	; 1
    1206:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    120a:	8e e0       	ldi	r24, 0x0E	; 14
    120c:	61 e0       	ldi	r22, 0x01	; 1
    120e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    1212:	8f e0       	ldi	r24, 0x0F	; 15
    1214:	61 e0       	ldi	r22, 0x01	; 1
    1216:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    121a:	80 e1       	ldi	r24, 0x10	; 16
    121c:	61 e0       	ldi	r22, 0x01	; 1
    121e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,LOW);
    1222:	81 e1       	ldi	r24, 0x11	; 17
    1224:	60 e0       	ldi	r22, 0x00	; 0
    1226:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    122a:	04 c1       	rjmp	.+520    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 1:
			M_Dio_Void_PinWrite(SSD_LED_A,LOW);
    122c:	8b e0       	ldi	r24, 0x0B	; 11
    122e:	60 e0       	ldi	r22, 0x00	; 0
    1230:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    1234:	8c e0       	ldi	r24, 0x0C	; 12
    1236:	61 e0       	ldi	r22, 0x01	; 1
    1238:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    123c:	8d e0       	ldi	r24, 0x0D	; 13
    123e:	61 e0       	ldi	r22, 0x01	; 1
    1240:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,LOW);
    1244:	8e e0       	ldi	r24, 0x0E	; 14
    1246:	60 e0       	ldi	r22, 0x00	; 0
    1248:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    124c:	80 e1       	ldi	r24, 0x10	; 16
    124e:	60 e0       	ldi	r22, 0x00	; 0
    1250:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    1254:	8f e0       	ldi	r24, 0x0F	; 15
    1256:	60 e0       	ldi	r22, 0x00	; 0
    1258:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,LOW);
    125c:	81 e1       	ldi	r24, 0x11	; 17
    125e:	60 e0       	ldi	r22, 0x00	; 0
    1260:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1264:	e7 c0       	rjmp	.+462    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 2:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    1266:	8b e0       	ldi	r24, 0x0B	; 11
    1268:	61 e0       	ldi	r22, 0x01	; 1
    126a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    126e:	8c e0       	ldi	r24, 0x0C	; 12
    1270:	61 e0       	ldi	r22, 0x01	; 1
    1272:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,LOW);
    1276:	8d e0       	ldi	r24, 0x0D	; 13
    1278:	60 e0       	ldi	r22, 0x00	; 0
    127a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    127e:	8e e0       	ldi	r24, 0x0E	; 14
    1280:	61 e0       	ldi	r22, 0x01	; 1
    1282:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    1286:	8f e0       	ldi	r24, 0x0F	; 15
    1288:	61 e0       	ldi	r22, 0x01	; 1
    128a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    128e:	80 e1       	ldi	r24, 0x10	; 16
    1290:	60 e0       	ldi	r22, 0x00	; 0
    1292:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    1296:	81 e1       	ldi	r24, 0x11	; 17
    1298:	61 e0       	ldi	r22, 0x01	; 1
    129a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    129e:	ca c0       	rjmp	.+404    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 3:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    12a0:	8b e0       	ldi	r24, 0x0B	; 11
    12a2:	61 e0       	ldi	r22, 0x01	; 1
    12a4:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    12a8:	8c e0       	ldi	r24, 0x0C	; 12
    12aa:	61 e0       	ldi	r22, 0x01	; 1
    12ac:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    12b0:	8d e0       	ldi	r24, 0x0D	; 13
    12b2:	61 e0       	ldi	r22, 0x01	; 1
    12b4:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    12b8:	8e e0       	ldi	r24, 0x0E	; 14
    12ba:	61 e0       	ldi	r22, 0x01	; 1
    12bc:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    12c0:	8f e0       	ldi	r24, 0x0F	; 15
    12c2:	60 e0       	ldi	r22, 0x00	; 0
    12c4:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    12c8:	80 e1       	ldi	r24, 0x10	; 16
    12ca:	60 e0       	ldi	r22, 0x00	; 0
    12cc:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    12d0:	81 e1       	ldi	r24, 0x11	; 17
    12d2:	61 e0       	ldi	r22, 0x01	; 1
    12d4:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    12d8:	ad c0       	rjmp	.+346    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 4:
			M_Dio_Void_PinWrite(SSD_LED_A,LOW);
    12da:	8b e0       	ldi	r24, 0x0B	; 11
    12dc:	60 e0       	ldi	r22, 0x00	; 0
    12de:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    12e2:	8c e0       	ldi	r24, 0x0C	; 12
    12e4:	61 e0       	ldi	r22, 0x01	; 1
    12e6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    12ea:	8d e0       	ldi	r24, 0x0D	; 13
    12ec:	61 e0       	ldi	r22, 0x01	; 1
    12ee:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,LOW);
    12f2:	8e e0       	ldi	r24, 0x0E	; 14
    12f4:	60 e0       	ldi	r22, 0x00	; 0
    12f6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    12fa:	8f e0       	ldi	r24, 0x0F	; 15
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    1302:	80 e1       	ldi	r24, 0x10	; 16
    1304:	61 e0       	ldi	r22, 0x01	; 1
    1306:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    130a:	81 e1       	ldi	r24, 0x11	; 17
    130c:	61 e0       	ldi	r22, 0x01	; 1
    130e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1312:	90 c0       	rjmp	.+288    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 5:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    1314:	8b e0       	ldi	r24, 0x0B	; 11
    1316:	61 e0       	ldi	r22, 0x01	; 1
    1318:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,LOW);
    131c:	8c e0       	ldi	r24, 0x0C	; 12
    131e:	60 e0       	ldi	r22, 0x00	; 0
    1320:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    1324:	8d e0       	ldi	r24, 0x0D	; 13
    1326:	61 e0       	ldi	r22, 0x01	; 1
    1328:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    132c:	8e e0       	ldi	r24, 0x0E	; 14
    132e:	61 e0       	ldi	r22, 0x01	; 1
    1330:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    1334:	8f e0       	ldi	r24, 0x0F	; 15
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    133c:	80 e1       	ldi	r24, 0x10	; 16
    133e:	61 e0       	ldi	r22, 0x01	; 1
    1340:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    1344:	81 e1       	ldi	r24, 0x11	; 17
    1346:	61 e0       	ldi	r22, 0x01	; 1
    1348:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    134c:	73 c0       	rjmp	.+230    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 6:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    134e:	8b e0       	ldi	r24, 0x0B	; 11
    1350:	61 e0       	ldi	r22, 0x01	; 1
    1352:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,LOW);
    1356:	8c e0       	ldi	r24, 0x0C	; 12
    1358:	60 e0       	ldi	r22, 0x00	; 0
    135a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    135e:	8d e0       	ldi	r24, 0x0D	; 13
    1360:	61 e0       	ldi	r22, 0x01	; 1
    1362:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    1366:	8e e0       	ldi	r24, 0x0E	; 14
    1368:	61 e0       	ldi	r22, 0x01	; 1
    136a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    136e:	8f e0       	ldi	r24, 0x0F	; 15
    1370:	61 e0       	ldi	r22, 0x01	; 1
    1372:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    1376:	80 e1       	ldi	r24, 0x10	; 16
    1378:	61 e0       	ldi	r22, 0x01	; 1
    137a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    137e:	81 e1       	ldi	r24, 0x11	; 17
    1380:	61 e0       	ldi	r22, 0x01	; 1
    1382:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1386:	56 c0       	rjmp	.+172    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 7:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    1388:	8b e0       	ldi	r24, 0x0B	; 11
    138a:	61 e0       	ldi	r22, 0x01	; 1
    138c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    1390:	8c e0       	ldi	r24, 0x0C	; 12
    1392:	61 e0       	ldi	r22, 0x01	; 1
    1394:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    1398:	8d e0       	ldi	r24, 0x0D	; 13
    139a:	61 e0       	ldi	r22, 0x01	; 1
    139c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,LOW);
    13a0:	8e e0       	ldi	r24, 0x0E	; 14
    13a2:	60 e0       	ldi	r22, 0x00	; 0
    13a4:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    13a8:	8f e0       	ldi	r24, 0x0F	; 15
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    13b0:	80 e1       	ldi	r24, 0x10	; 16
    13b2:	60 e0       	ldi	r22, 0x00	; 0
    13b4:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,LOW);
    13b8:	81 e1       	ldi	r24, 0x11	; 17
    13ba:	60 e0       	ldi	r22, 0x00	; 0
    13bc:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    13c0:	39 c0       	rjmp	.+114    	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 8:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    13c2:	8b e0       	ldi	r24, 0x0B	; 11
    13c4:	61 e0       	ldi	r22, 0x01	; 1
    13c6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    13ca:	8c e0       	ldi	r24, 0x0C	; 12
    13cc:	61 e0       	ldi	r22, 0x01	; 1
    13ce:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    13d2:	8d e0       	ldi	r24, 0x0D	; 13
    13d4:	61 e0       	ldi	r22, 0x01	; 1
    13d6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    13da:	8e e0       	ldi	r24, 0x0E	; 14
    13dc:	61 e0       	ldi	r22, 0x01	; 1
    13de:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    13e2:	8f e0       	ldi	r24, 0x0F	; 15
    13e4:	61 e0       	ldi	r22, 0x01	; 1
    13e6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    13ea:	80 e1       	ldi	r24, 0x10	; 16
    13ec:	61 e0       	ldi	r22, 0x01	; 1
    13ee:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    13f2:	81 e1       	ldi	r24, 0x11	; 17
    13f4:	61 e0       	ldi	r22, 0x01	; 1
    13f6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    13fa:	1c c0       	rjmp	.+56     	; 0x1434 <H_SSD_Void_SSDDisplay+0x330>
			break;
		case 9:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    13fc:	8b e0       	ldi	r24, 0x0B	; 11
    13fe:	61 e0       	ldi	r22, 0x01	; 1
    1400:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    1404:	8c e0       	ldi	r24, 0x0C	; 12
    1406:	61 e0       	ldi	r22, 0x01	; 1
    1408:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    140c:	8d e0       	ldi	r24, 0x0D	; 13
    140e:	61 e0       	ldi	r22, 0x01	; 1
    1410:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    1414:	8e e0       	ldi	r24, 0x0E	; 14
    1416:	61 e0       	ldi	r22, 0x01	; 1
    1418:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    141c:	8f e0       	ldi	r24, 0x0F	; 15
    141e:	60 e0       	ldi	r22, 0x00	; 0
    1420:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    1424:	80 e1       	ldi	r24, 0x10	; 16
    1426:	61 e0       	ldi	r22, 0x01	; 1
    1428:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    142c:	81 e1       	ldi	r24, 0x11	; 17
    142e:	61 e0       	ldi	r22, 0x01	; 1
    1430:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			break;
		default: break;
		}
		M_Dio_Void_PinWrite(SSD_EN_1,HIGH);
    1434:	84 e2       	ldi	r24, 0x24	; 36
    1436:	61 e0       	ldi	r22, 0x01	; 1
    1438:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
		M_Dio_Void_PinWrite(SSD_EN_2,LOW);
    143c:	85 e2       	ldi	r24, 0x25	; 37
    143e:	60 e0       	ldi	r22, 0x00	; 0
    1440:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	a0 e8       	ldi	r26, 0x80	; 128
    144a:	bf e3       	ldi	r27, 0x3F	; 63
    144c:	89 8f       	std	Y+25, r24	; 0x19
    144e:	9a 8f       	std	Y+26, r25	; 0x1a
    1450:	ab 8f       	std	Y+27, r26	; 0x1b
    1452:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1454:	69 8d       	ldd	r22, Y+25	; 0x19
    1456:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1458:	8b 8d       	ldd	r24, Y+27	; 0x1b
    145a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    145c:	20 e0       	ldi	r18, 0x00	; 0
    145e:	30 e0       	ldi	r19, 0x00	; 0
    1460:	4a e7       	ldi	r20, 0x7A	; 122
    1462:	55 e4       	ldi	r21, 0x45	; 69
    1464:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1468:	dc 01       	movw	r26, r24
    146a:	cb 01       	movw	r24, r22
    146c:	8d 8b       	std	Y+21, r24	; 0x15
    146e:	9e 8b       	std	Y+22, r25	; 0x16
    1470:	af 8b       	std	Y+23, r26	; 0x17
    1472:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1474:	6d 89       	ldd	r22, Y+21	; 0x15
    1476:	7e 89       	ldd	r23, Y+22	; 0x16
    1478:	8f 89       	ldd	r24, Y+23	; 0x17
    147a:	98 8d       	ldd	r25, Y+24	; 0x18
    147c:	20 e0       	ldi	r18, 0x00	; 0
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	40 e8       	ldi	r20, 0x80	; 128
    1482:	5f e3       	ldi	r21, 0x3F	; 63
    1484:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1488:	88 23       	and	r24, r24
    148a:	2c f4       	brge	.+10     	; 0x1496 <H_SSD_Void_SSDDisplay+0x392>
		__ticks = 1;
    148c:	81 e0       	ldi	r24, 0x01	; 1
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	9c 8b       	std	Y+20, r25	; 0x14
    1492:	8b 8b       	std	Y+19, r24	; 0x13
    1494:	3f c0       	rjmp	.+126    	; 0x1514 <H_SSD_Void_SSDDisplay+0x410>
	else if (__tmp > 65535)
    1496:	6d 89       	ldd	r22, Y+21	; 0x15
    1498:	7e 89       	ldd	r23, Y+22	; 0x16
    149a:	8f 89       	ldd	r24, Y+23	; 0x17
    149c:	98 8d       	ldd	r25, Y+24	; 0x18
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	3f ef       	ldi	r19, 0xFF	; 255
    14a2:	4f e7       	ldi	r20, 0x7F	; 127
    14a4:	57 e4       	ldi	r21, 0x47	; 71
    14a6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14aa:	18 16       	cp	r1, r24
    14ac:	4c f5       	brge	.+82     	; 0x1500 <H_SSD_Void_SSDDisplay+0x3fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14ae:	69 8d       	ldd	r22, Y+25	; 0x19
    14b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	40 e2       	ldi	r20, 0x20	; 32
    14bc:	51 e4       	ldi	r21, 0x41	; 65
    14be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14c2:	dc 01       	movw	r26, r24
    14c4:	cb 01       	movw	r24, r22
    14c6:	bc 01       	movw	r22, r24
    14c8:	cd 01       	movw	r24, r26
    14ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14ce:	dc 01       	movw	r26, r24
    14d0:	cb 01       	movw	r24, r22
    14d2:	9c 8b       	std	Y+20, r25	; 0x14
    14d4:	8b 8b       	std	Y+19, r24	; 0x13
    14d6:	0f c0       	rjmp	.+30     	; 0x14f6 <H_SSD_Void_SSDDisplay+0x3f2>
    14d8:	80 e9       	ldi	r24, 0x90	; 144
    14da:	91 e0       	ldi	r25, 0x01	; 1
    14dc:	9a 8b       	std	Y+18, r25	; 0x12
    14de:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    14e0:	89 89       	ldd	r24, Y+17	; 0x11
    14e2:	9a 89       	ldd	r25, Y+18	; 0x12
    14e4:	01 97       	sbiw	r24, 0x01	; 1
    14e6:	f1 f7       	brne	.-4      	; 0x14e4 <H_SSD_Void_SSDDisplay+0x3e0>
    14e8:	9a 8b       	std	Y+18, r25	; 0x12
    14ea:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14ec:	8b 89       	ldd	r24, Y+19	; 0x13
    14ee:	9c 89       	ldd	r25, Y+20	; 0x14
    14f0:	01 97       	sbiw	r24, 0x01	; 1
    14f2:	9c 8b       	std	Y+20, r25	; 0x14
    14f4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14f6:	8b 89       	ldd	r24, Y+19	; 0x13
    14f8:	9c 89       	ldd	r25, Y+20	; 0x14
    14fa:	00 97       	sbiw	r24, 0x00	; 0
    14fc:	69 f7       	brne	.-38     	; 0x14d8 <H_SSD_Void_SSDDisplay+0x3d4>
    14fe:	14 c0       	rjmp	.+40     	; 0x1528 <H_SSD_Void_SSDDisplay+0x424>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1500:	6d 89       	ldd	r22, Y+21	; 0x15
    1502:	7e 89       	ldd	r23, Y+22	; 0x16
    1504:	8f 89       	ldd	r24, Y+23	; 0x17
    1506:	98 8d       	ldd	r25, Y+24	; 0x18
    1508:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    150c:	dc 01       	movw	r26, r24
    150e:	cb 01       	movw	r24, r22
    1510:	9c 8b       	std	Y+20, r25	; 0x14
    1512:	8b 8b       	std	Y+19, r24	; 0x13
    1514:	8b 89       	ldd	r24, Y+19	; 0x13
    1516:	9c 89       	ldd	r25, Y+20	; 0x14
    1518:	98 8b       	std	Y+16, r25	; 0x10
    151a:	8f 87       	std	Y+15, r24	; 0x0f
    151c:	8f 85       	ldd	r24, Y+15	; 0x0f
    151e:	98 89       	ldd	r25, Y+16	; 0x10
    1520:	01 97       	sbiw	r24, 0x01	; 1
    1522:	f1 f7       	brne	.-4      	; 0x1520 <H_SSD_Void_SSDDisplay+0x41c>
    1524:	98 8b       	std	Y+16, r25	; 0x10
    1526:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		M_Dio_Void_PinWrite(SSD_EN_1,LOW);
    1528:	84 e2       	ldi	r24, 0x24	; 36
    152a:	60 e0       	ldi	r22, 0x00	; 0
    152c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
		switch(Local_u8_Tens)
    1530:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1532:	28 2f       	mov	r18, r24
    1534:	30 e0       	ldi	r19, 0x00	; 0
    1536:	3b a3       	std	Y+35, r19	; 0x23
    1538:	2a a3       	std	Y+34, r18	; 0x22
    153a:	8a a1       	ldd	r24, Y+34	; 0x22
    153c:	9b a1       	ldd	r25, Y+35	; 0x23
    153e:	84 30       	cpi	r24, 0x04	; 4
    1540:	91 05       	cpc	r25, r1
    1542:	09 f4       	brne	.+2      	; 0x1546 <H_SSD_Void_SSDDisplay+0x442>
    1544:	bb c0       	rjmp	.+374    	; 0x16bc <H_SSD_Void_SSDDisplay+0x5b8>
    1546:	2a a1       	ldd	r18, Y+34	; 0x22
    1548:	3b a1       	ldd	r19, Y+35	; 0x23
    154a:	25 30       	cpi	r18, 0x05	; 5
    154c:	31 05       	cpc	r19, r1
    154e:	ec f4       	brge	.+58     	; 0x158a <H_SSD_Void_SSDDisplay+0x486>
    1550:	8a a1       	ldd	r24, Y+34	; 0x22
    1552:	9b a1       	ldd	r25, Y+35	; 0x23
    1554:	81 30       	cpi	r24, 0x01	; 1
    1556:	91 05       	cpc	r25, r1
    1558:	09 f4       	brne	.+2      	; 0x155c <H_SSD_Void_SSDDisplay+0x458>
    155a:	59 c0       	rjmp	.+178    	; 0x160e <H_SSD_Void_SSDDisplay+0x50a>
    155c:	2a a1       	ldd	r18, Y+34	; 0x22
    155e:	3b a1       	ldd	r19, Y+35	; 0x23
    1560:	22 30       	cpi	r18, 0x02	; 2
    1562:	31 05       	cpc	r19, r1
    1564:	2c f4       	brge	.+10     	; 0x1570 <H_SSD_Void_SSDDisplay+0x46c>
    1566:	8a a1       	ldd	r24, Y+34	; 0x22
    1568:	9b a1       	ldd	r25, Y+35	; 0x23
    156a:	00 97       	sbiw	r24, 0x00	; 0
    156c:	99 f1       	breq	.+102    	; 0x15d4 <H_SSD_Void_SSDDisplay+0x4d0>
    156e:	53 c1       	rjmp	.+678    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
    1570:	2a a1       	ldd	r18, Y+34	; 0x22
    1572:	3b a1       	ldd	r19, Y+35	; 0x23
    1574:	22 30       	cpi	r18, 0x02	; 2
    1576:	31 05       	cpc	r19, r1
    1578:	09 f4       	brne	.+2      	; 0x157c <H_SSD_Void_SSDDisplay+0x478>
    157a:	66 c0       	rjmp	.+204    	; 0x1648 <H_SSD_Void_SSDDisplay+0x544>
    157c:	8a a1       	ldd	r24, Y+34	; 0x22
    157e:	9b a1       	ldd	r25, Y+35	; 0x23
    1580:	83 30       	cpi	r24, 0x03	; 3
    1582:	91 05       	cpc	r25, r1
    1584:	09 f4       	brne	.+2      	; 0x1588 <H_SSD_Void_SSDDisplay+0x484>
    1586:	7d c0       	rjmp	.+250    	; 0x1682 <H_SSD_Void_SSDDisplay+0x57e>
    1588:	46 c1       	rjmp	.+652    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
    158a:	2a a1       	ldd	r18, Y+34	; 0x22
    158c:	3b a1       	ldd	r19, Y+35	; 0x23
    158e:	27 30       	cpi	r18, 0x07	; 7
    1590:	31 05       	cpc	r19, r1
    1592:	09 f4       	brne	.+2      	; 0x1596 <H_SSD_Void_SSDDisplay+0x492>
    1594:	ea c0       	rjmp	.+468    	; 0x176a <H_SSD_Void_SSDDisplay+0x666>
    1596:	8a a1       	ldd	r24, Y+34	; 0x22
    1598:	9b a1       	ldd	r25, Y+35	; 0x23
    159a:	88 30       	cpi	r24, 0x08	; 8
    159c:	91 05       	cpc	r25, r1
    159e:	6c f4       	brge	.+26     	; 0x15ba <H_SSD_Void_SSDDisplay+0x4b6>
    15a0:	2a a1       	ldd	r18, Y+34	; 0x22
    15a2:	3b a1       	ldd	r19, Y+35	; 0x23
    15a4:	25 30       	cpi	r18, 0x05	; 5
    15a6:	31 05       	cpc	r19, r1
    15a8:	09 f4       	brne	.+2      	; 0x15ac <H_SSD_Void_SSDDisplay+0x4a8>
    15aa:	a5 c0       	rjmp	.+330    	; 0x16f6 <H_SSD_Void_SSDDisplay+0x5f2>
    15ac:	8a a1       	ldd	r24, Y+34	; 0x22
    15ae:	9b a1       	ldd	r25, Y+35	; 0x23
    15b0:	86 30       	cpi	r24, 0x06	; 6
    15b2:	91 05       	cpc	r25, r1
    15b4:	09 f4       	brne	.+2      	; 0x15b8 <H_SSD_Void_SSDDisplay+0x4b4>
    15b6:	bc c0       	rjmp	.+376    	; 0x1730 <H_SSD_Void_SSDDisplay+0x62c>
    15b8:	2e c1       	rjmp	.+604    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
    15ba:	2a a1       	ldd	r18, Y+34	; 0x22
    15bc:	3b a1       	ldd	r19, Y+35	; 0x23
    15be:	28 30       	cpi	r18, 0x08	; 8
    15c0:	31 05       	cpc	r19, r1
    15c2:	09 f4       	brne	.+2      	; 0x15c6 <H_SSD_Void_SSDDisplay+0x4c2>
    15c4:	ef c0       	rjmp	.+478    	; 0x17a4 <H_SSD_Void_SSDDisplay+0x6a0>
    15c6:	8a a1       	ldd	r24, Y+34	; 0x22
    15c8:	9b a1       	ldd	r25, Y+35	; 0x23
    15ca:	89 30       	cpi	r24, 0x09	; 9
    15cc:	91 05       	cpc	r25, r1
    15ce:	09 f4       	brne	.+2      	; 0x15d2 <H_SSD_Void_SSDDisplay+0x4ce>
    15d0:	06 c1       	rjmp	.+524    	; 0x17de <H_SSD_Void_SSDDisplay+0x6da>
    15d2:	21 c1       	rjmp	.+578    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
		{
		case 0:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    15d4:	8b e0       	ldi	r24, 0x0B	; 11
    15d6:	61 e0       	ldi	r22, 0x01	; 1
    15d8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    15dc:	8c e0       	ldi	r24, 0x0C	; 12
    15de:	61 e0       	ldi	r22, 0x01	; 1
    15e0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    15e4:	8d e0       	ldi	r24, 0x0D	; 13
    15e6:	61 e0       	ldi	r22, 0x01	; 1
    15e8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    15ec:	8e e0       	ldi	r24, 0x0E	; 14
    15ee:	61 e0       	ldi	r22, 0x01	; 1
    15f0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    15f4:	8f e0       	ldi	r24, 0x0F	; 15
    15f6:	61 e0       	ldi	r22, 0x01	; 1
    15f8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    15fc:	80 e1       	ldi	r24, 0x10	; 16
    15fe:	61 e0       	ldi	r22, 0x01	; 1
    1600:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,LOW);
    1604:	81 e1       	ldi	r24, 0x11	; 17
    1606:	60 e0       	ldi	r22, 0x00	; 0
    1608:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    160c:	04 c1       	rjmp	.+520    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 1:
			M_Dio_Void_PinWrite(SSD_LED_A,LOW);
    160e:	8b e0       	ldi	r24, 0x0B	; 11
    1610:	60 e0       	ldi	r22, 0x00	; 0
    1612:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    1616:	8c e0       	ldi	r24, 0x0C	; 12
    1618:	61 e0       	ldi	r22, 0x01	; 1
    161a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    161e:	8d e0       	ldi	r24, 0x0D	; 13
    1620:	61 e0       	ldi	r22, 0x01	; 1
    1622:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,LOW);
    1626:	8e e0       	ldi	r24, 0x0E	; 14
    1628:	60 e0       	ldi	r22, 0x00	; 0
    162a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    162e:	80 e1       	ldi	r24, 0x10	; 16
    1630:	60 e0       	ldi	r22, 0x00	; 0
    1632:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    1636:	8f e0       	ldi	r24, 0x0F	; 15
    1638:	60 e0       	ldi	r22, 0x00	; 0
    163a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,LOW);
    163e:	81 e1       	ldi	r24, 0x11	; 17
    1640:	60 e0       	ldi	r22, 0x00	; 0
    1642:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1646:	e7 c0       	rjmp	.+462    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 2:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    1648:	8b e0       	ldi	r24, 0x0B	; 11
    164a:	61 e0       	ldi	r22, 0x01	; 1
    164c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    1650:	8c e0       	ldi	r24, 0x0C	; 12
    1652:	61 e0       	ldi	r22, 0x01	; 1
    1654:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,LOW);
    1658:	8d e0       	ldi	r24, 0x0D	; 13
    165a:	60 e0       	ldi	r22, 0x00	; 0
    165c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    1660:	8e e0       	ldi	r24, 0x0E	; 14
    1662:	61 e0       	ldi	r22, 0x01	; 1
    1664:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    1668:	8f e0       	ldi	r24, 0x0F	; 15
    166a:	61 e0       	ldi	r22, 0x01	; 1
    166c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    1670:	80 e1       	ldi	r24, 0x10	; 16
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    1678:	81 e1       	ldi	r24, 0x11	; 17
    167a:	61 e0       	ldi	r22, 0x01	; 1
    167c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1680:	ca c0       	rjmp	.+404    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 3:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    1682:	8b e0       	ldi	r24, 0x0B	; 11
    1684:	61 e0       	ldi	r22, 0x01	; 1
    1686:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    168a:	8c e0       	ldi	r24, 0x0C	; 12
    168c:	61 e0       	ldi	r22, 0x01	; 1
    168e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    1692:	8d e0       	ldi	r24, 0x0D	; 13
    1694:	61 e0       	ldi	r22, 0x01	; 1
    1696:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    169a:	8e e0       	ldi	r24, 0x0E	; 14
    169c:	61 e0       	ldi	r22, 0x01	; 1
    169e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    16a2:	8f e0       	ldi	r24, 0x0F	; 15
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    16aa:	80 e1       	ldi	r24, 0x10	; 16
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    16b2:	81 e1       	ldi	r24, 0x11	; 17
    16b4:	61 e0       	ldi	r22, 0x01	; 1
    16b6:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    16ba:	ad c0       	rjmp	.+346    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 4:
			M_Dio_Void_PinWrite(SSD_LED_A,LOW);
    16bc:	8b e0       	ldi	r24, 0x0B	; 11
    16be:	60 e0       	ldi	r22, 0x00	; 0
    16c0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    16c4:	8c e0       	ldi	r24, 0x0C	; 12
    16c6:	61 e0       	ldi	r22, 0x01	; 1
    16c8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    16cc:	8d e0       	ldi	r24, 0x0D	; 13
    16ce:	61 e0       	ldi	r22, 0x01	; 1
    16d0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,LOW);
    16d4:	8e e0       	ldi	r24, 0x0E	; 14
    16d6:	60 e0       	ldi	r22, 0x00	; 0
    16d8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    16dc:	8f e0       	ldi	r24, 0x0F	; 15
    16de:	60 e0       	ldi	r22, 0x00	; 0
    16e0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    16e4:	80 e1       	ldi	r24, 0x10	; 16
    16e6:	61 e0       	ldi	r22, 0x01	; 1
    16e8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    16ec:	81 e1       	ldi	r24, 0x11	; 17
    16ee:	61 e0       	ldi	r22, 0x01	; 1
    16f0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    16f4:	90 c0       	rjmp	.+288    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 5:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    16f6:	8b e0       	ldi	r24, 0x0B	; 11
    16f8:	61 e0       	ldi	r22, 0x01	; 1
    16fa:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,LOW);
    16fe:	8c e0       	ldi	r24, 0x0C	; 12
    1700:	60 e0       	ldi	r22, 0x00	; 0
    1702:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    1706:	8d e0       	ldi	r24, 0x0D	; 13
    1708:	61 e0       	ldi	r22, 0x01	; 1
    170a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    170e:	8e e0       	ldi	r24, 0x0E	; 14
    1710:	61 e0       	ldi	r22, 0x01	; 1
    1712:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    1716:	8f e0       	ldi	r24, 0x0F	; 15
    1718:	60 e0       	ldi	r22, 0x00	; 0
    171a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    171e:	80 e1       	ldi	r24, 0x10	; 16
    1720:	61 e0       	ldi	r22, 0x01	; 1
    1722:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    1726:	81 e1       	ldi	r24, 0x11	; 17
    1728:	61 e0       	ldi	r22, 0x01	; 1
    172a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    172e:	73 c0       	rjmp	.+230    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 6:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    1730:	8b e0       	ldi	r24, 0x0B	; 11
    1732:	61 e0       	ldi	r22, 0x01	; 1
    1734:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,LOW);
    1738:	8c e0       	ldi	r24, 0x0C	; 12
    173a:	60 e0       	ldi	r22, 0x00	; 0
    173c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    1740:	8d e0       	ldi	r24, 0x0D	; 13
    1742:	61 e0       	ldi	r22, 0x01	; 1
    1744:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    1748:	8e e0       	ldi	r24, 0x0E	; 14
    174a:	61 e0       	ldi	r22, 0x01	; 1
    174c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    1750:	8f e0       	ldi	r24, 0x0F	; 15
    1752:	61 e0       	ldi	r22, 0x01	; 1
    1754:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    1758:	80 e1       	ldi	r24, 0x10	; 16
    175a:	61 e0       	ldi	r22, 0x01	; 1
    175c:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    1760:	81 e1       	ldi	r24, 0x11	; 17
    1762:	61 e0       	ldi	r22, 0x01	; 1
    1764:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1768:	56 c0       	rjmp	.+172    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 7:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    176a:	8b e0       	ldi	r24, 0x0B	; 11
    176c:	61 e0       	ldi	r22, 0x01	; 1
    176e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    1772:	8c e0       	ldi	r24, 0x0C	; 12
    1774:	61 e0       	ldi	r22, 0x01	; 1
    1776:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    177a:	8d e0       	ldi	r24, 0x0D	; 13
    177c:	61 e0       	ldi	r22, 0x01	; 1
    177e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,LOW);
    1782:	8e e0       	ldi	r24, 0x0E	; 14
    1784:	60 e0       	ldi	r22, 0x00	; 0
    1786:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    178a:	8f e0       	ldi	r24, 0x0F	; 15
    178c:	60 e0       	ldi	r22, 0x00	; 0
    178e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,LOW);
    1792:	80 e1       	ldi	r24, 0x10	; 16
    1794:	60 e0       	ldi	r22, 0x00	; 0
    1796:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,LOW);
    179a:	81 e1       	ldi	r24, 0x11	; 17
    179c:	60 e0       	ldi	r22, 0x00	; 0
    179e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    17a2:	39 c0       	rjmp	.+114    	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 8:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    17a4:	8b e0       	ldi	r24, 0x0B	; 11
    17a6:	61 e0       	ldi	r22, 0x01	; 1
    17a8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    17ac:	8c e0       	ldi	r24, 0x0C	; 12
    17ae:	61 e0       	ldi	r22, 0x01	; 1
    17b0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    17b4:	8d e0       	ldi	r24, 0x0D	; 13
    17b6:	61 e0       	ldi	r22, 0x01	; 1
    17b8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    17bc:	8e e0       	ldi	r24, 0x0E	; 14
    17be:	61 e0       	ldi	r22, 0x01	; 1
    17c0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,HIGH);
    17c4:	8f e0       	ldi	r24, 0x0F	; 15
    17c6:	61 e0       	ldi	r22, 0x01	; 1
    17c8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    17cc:	80 e1       	ldi	r24, 0x10	; 16
    17ce:	61 e0       	ldi	r22, 0x01	; 1
    17d0:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    17d4:	81 e1       	ldi	r24, 0x11	; 17
    17d6:	61 e0       	ldi	r22, 0x01	; 1
    17d8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    17dc:	1c c0       	rjmp	.+56     	; 0x1816 <H_SSD_Void_SSDDisplay+0x712>
			break;
		case 9:
			M_Dio_Void_PinWrite(SSD_LED_A,HIGH);
    17de:	8b e0       	ldi	r24, 0x0B	; 11
    17e0:	61 e0       	ldi	r22, 0x01	; 1
    17e2:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_B,HIGH);
    17e6:	8c e0       	ldi	r24, 0x0C	; 12
    17e8:	61 e0       	ldi	r22, 0x01	; 1
    17ea:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_C,HIGH);
    17ee:	8d e0       	ldi	r24, 0x0D	; 13
    17f0:	61 e0       	ldi	r22, 0x01	; 1
    17f2:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_D,HIGH);
    17f6:	8e e0       	ldi	r24, 0x0E	; 14
    17f8:	61 e0       	ldi	r22, 0x01	; 1
    17fa:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_E,LOW);
    17fe:	8f e0       	ldi	r24, 0x0F	; 15
    1800:	60 e0       	ldi	r22, 0x00	; 0
    1802:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_F,HIGH);
    1806:	80 e1       	ldi	r24, 0x10	; 16
    1808:	61 e0       	ldi	r22, 0x01	; 1
    180a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			M_Dio_Void_PinWrite(SSD_LED_G,HIGH);
    180e:	81 e1       	ldi	r24, 0x11	; 17
    1810:	61 e0       	ldi	r22, 0x01	; 1
    1812:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
			break;
		default: break;
		}

		M_Dio_Void_PinWrite(SSD_EN_1,LOW);
    1816:	84 e2       	ldi	r24, 0x24	; 36
    1818:	60 e0       	ldi	r22, 0x00	; 0
    181a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
		M_Dio_Void_PinWrite(SSD_EN_2,HIGH);
    181e:	85 e2       	ldi	r24, 0x25	; 37
    1820:	61 e0       	ldi	r22, 0x01	; 1
    1822:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1826:	80 e0       	ldi	r24, 0x00	; 0
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	a0 e8       	ldi	r26, 0x80	; 128
    182c:	bf e3       	ldi	r27, 0x3F	; 63
    182e:	8b 87       	std	Y+11, r24	; 0x0b
    1830:	9c 87       	std	Y+12, r25	; 0x0c
    1832:	ad 87       	std	Y+13, r26	; 0x0d
    1834:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1836:	6b 85       	ldd	r22, Y+11	; 0x0b
    1838:	7c 85       	ldd	r23, Y+12	; 0x0c
    183a:	8d 85       	ldd	r24, Y+13	; 0x0d
    183c:	9e 85       	ldd	r25, Y+14	; 0x0e
    183e:	20 e0       	ldi	r18, 0x00	; 0
    1840:	30 e0       	ldi	r19, 0x00	; 0
    1842:	4a e7       	ldi	r20, 0x7A	; 122
    1844:	55 e4       	ldi	r21, 0x45	; 69
    1846:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    184a:	dc 01       	movw	r26, r24
    184c:	cb 01       	movw	r24, r22
    184e:	8f 83       	std	Y+7, r24	; 0x07
    1850:	98 87       	std	Y+8, r25	; 0x08
    1852:	a9 87       	std	Y+9, r26	; 0x09
    1854:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1856:	6f 81       	ldd	r22, Y+7	; 0x07
    1858:	78 85       	ldd	r23, Y+8	; 0x08
    185a:	89 85       	ldd	r24, Y+9	; 0x09
    185c:	9a 85       	ldd	r25, Y+10	; 0x0a
    185e:	20 e0       	ldi	r18, 0x00	; 0
    1860:	30 e0       	ldi	r19, 0x00	; 0
    1862:	40 e8       	ldi	r20, 0x80	; 128
    1864:	5f e3       	ldi	r21, 0x3F	; 63
    1866:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    186a:	88 23       	and	r24, r24
    186c:	2c f4       	brge	.+10     	; 0x1878 <H_SSD_Void_SSDDisplay+0x774>
		__ticks = 1;
    186e:	81 e0       	ldi	r24, 0x01	; 1
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	9e 83       	std	Y+6, r25	; 0x06
    1874:	8d 83       	std	Y+5, r24	; 0x05
    1876:	3f c0       	rjmp	.+126    	; 0x18f6 <H_SSD_Void_SSDDisplay+0x7f2>
	else if (__tmp > 65535)
    1878:	6f 81       	ldd	r22, Y+7	; 0x07
    187a:	78 85       	ldd	r23, Y+8	; 0x08
    187c:	89 85       	ldd	r24, Y+9	; 0x09
    187e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1880:	20 e0       	ldi	r18, 0x00	; 0
    1882:	3f ef       	ldi	r19, 0xFF	; 255
    1884:	4f e7       	ldi	r20, 0x7F	; 127
    1886:	57 e4       	ldi	r21, 0x47	; 71
    1888:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    188c:	18 16       	cp	r1, r24
    188e:	4c f5       	brge	.+82     	; 0x18e2 <H_SSD_Void_SSDDisplay+0x7de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1890:	6b 85       	ldd	r22, Y+11	; 0x0b
    1892:	7c 85       	ldd	r23, Y+12	; 0x0c
    1894:	8d 85       	ldd	r24, Y+13	; 0x0d
    1896:	9e 85       	ldd	r25, Y+14	; 0x0e
    1898:	20 e0       	ldi	r18, 0x00	; 0
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	40 e2       	ldi	r20, 0x20	; 32
    189e:	51 e4       	ldi	r21, 0x41	; 65
    18a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18a4:	dc 01       	movw	r26, r24
    18a6:	cb 01       	movw	r24, r22
    18a8:	bc 01       	movw	r22, r24
    18aa:	cd 01       	movw	r24, r26
    18ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18b0:	dc 01       	movw	r26, r24
    18b2:	cb 01       	movw	r24, r22
    18b4:	9e 83       	std	Y+6, r25	; 0x06
    18b6:	8d 83       	std	Y+5, r24	; 0x05
    18b8:	0f c0       	rjmp	.+30     	; 0x18d8 <H_SSD_Void_SSDDisplay+0x7d4>
    18ba:	80 e9       	ldi	r24, 0x90	; 144
    18bc:	91 e0       	ldi	r25, 0x01	; 1
    18be:	9c 83       	std	Y+4, r25	; 0x04
    18c0:	8b 83       	std	Y+3, r24	; 0x03
    18c2:	8b 81       	ldd	r24, Y+3	; 0x03
    18c4:	9c 81       	ldd	r25, Y+4	; 0x04
    18c6:	01 97       	sbiw	r24, 0x01	; 1
    18c8:	f1 f7       	brne	.-4      	; 0x18c6 <H_SSD_Void_SSDDisplay+0x7c2>
    18ca:	9c 83       	std	Y+4, r25	; 0x04
    18cc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18ce:	8d 81       	ldd	r24, Y+5	; 0x05
    18d0:	9e 81       	ldd	r25, Y+6	; 0x06
    18d2:	01 97       	sbiw	r24, 0x01	; 1
    18d4:	9e 83       	std	Y+6, r25	; 0x06
    18d6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18d8:	8d 81       	ldd	r24, Y+5	; 0x05
    18da:	9e 81       	ldd	r25, Y+6	; 0x06
    18dc:	00 97       	sbiw	r24, 0x00	; 0
    18de:	69 f7       	brne	.-38     	; 0x18ba <H_SSD_Void_SSDDisplay+0x7b6>
    18e0:	14 c0       	rjmp	.+40     	; 0x190a <H_SSD_Void_SSDDisplay+0x806>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18e2:	6f 81       	ldd	r22, Y+7	; 0x07
    18e4:	78 85       	ldd	r23, Y+8	; 0x08
    18e6:	89 85       	ldd	r24, Y+9	; 0x09
    18e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    18ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18ee:	dc 01       	movw	r26, r24
    18f0:	cb 01       	movw	r24, r22
    18f2:	9e 83       	std	Y+6, r25	; 0x06
    18f4:	8d 83       	std	Y+5, r24	; 0x05
    18f6:	8d 81       	ldd	r24, Y+5	; 0x05
    18f8:	9e 81       	ldd	r25, Y+6	; 0x06
    18fa:	9a 83       	std	Y+2, r25	; 0x02
    18fc:	89 83       	std	Y+1, r24	; 0x01
    18fe:	89 81       	ldd	r24, Y+1	; 0x01
    1900:	9a 81       	ldd	r25, Y+2	; 0x02
    1902:	01 97       	sbiw	r24, 0x01	; 1
    1904:	f1 f7       	brne	.-4      	; 0x1902 <H_SSD_Void_SSDDisplay+0x7fe>
    1906:	9a 83       	std	Y+2, r25	; 0x02
    1908:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);
		M_Dio_Void_PinWrite(SSD_EN_2,LOW);
    190a:	85 e2       	ldi	r24, 0x25	; 37
    190c:	60 e0       	ldi	r22, 0x00	; 0
    190e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
	u16 Local_u16_Counter=0;
	M_Dio_Void_PinWrite(SSD_EN_1,LOW);
	M_Dio_Void_PinWrite(SSD_EN_2,LOW);


	for(Local_u16_Counter=0;Local_u16_Counter < DISPLAY_TIME_INTERNAL;Local_u16_Counter++)
    1912:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1914:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	9e 8f       	std	Y+30, r25	; 0x1e
    191a:	8d 8f       	std	Y+29, r24	; 0x1d
    191c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    191e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1920:	21 e0       	ldi	r18, 0x01	; 1
    1922:	8c 32       	cpi	r24, 0x2C	; 44
    1924:	92 07       	cpc	r25, r18
    1926:	08 f4       	brcc	.+2      	; 0x192a <H_SSD_Void_SSDDisplay+0x826>
    1928:	12 cc       	rjmp	.-2012   	; 0x114e <H_SSD_Void_SSDDisplay+0x4a>
		M_Dio_Void_PinWrite(SSD_EN_1,LOW);
		M_Dio_Void_PinWrite(SSD_EN_2,HIGH);
		_delay_ms(1);
		M_Dio_Void_PinWrite(SSD_EN_2,LOW);
	}
}
    192a:	a5 96       	adiw	r28, 0x25	; 37
    192c:	0f b6       	in	r0, 0x3f	; 63
    192e:	f8 94       	cli
    1930:	de bf       	out	0x3e, r29	; 62
    1932:	0f be       	out	0x3f, r0	; 63
    1934:	cd bf       	out	0x3d, r28	; 61
    1936:	cf 91       	pop	r28
    1938:	df 91       	pop	r29
    193a:	08 95       	ret

0000193c <H_SSD_Void_SSDCounterUp>:

void H_SSD_Void_SSDCounterUp(u8 Local_Num)
{
    193c:	df 93       	push	r29
    193e:	cf 93       	push	r28
    1940:	00 d0       	rcall	.+0      	; 0x1942 <H_SSD_Void_SSDCounterUp+0x6>
    1942:	cd b7       	in	r28, 0x3d	; 61
    1944:	de b7       	in	r29, 0x3e	; 62
    1946:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Counter=0;
    1948:	19 82       	std	Y+1, r1	; 0x01
	for(Local_u8_Counter=0 ; Local_u8_Counter <= Local_Num ; Local_u8_Counter++)
    194a:	19 82       	std	Y+1, r1	; 0x01
    194c:	06 c0       	rjmp	.+12     	; 0x195a <H_SSD_Void_SSDCounterUp+0x1e>
	{
		H_SSD_Void_SSDDisplay(Local_u8_Counter);
    194e:	89 81       	ldd	r24, Y+1	; 0x01
    1950:	0e 94 82 08 	call	0x1104	; 0x1104 <H_SSD_Void_SSDDisplay>
}

void H_SSD_Void_SSDCounterUp(u8 Local_Num)
{
	u8 Local_u8_Counter=0;
	for(Local_u8_Counter=0 ; Local_u8_Counter <= Local_Num ; Local_u8_Counter++)
    1954:	89 81       	ldd	r24, Y+1	; 0x01
    1956:	8f 5f       	subi	r24, 0xFF	; 255
    1958:	89 83       	std	Y+1, r24	; 0x01
    195a:	99 81       	ldd	r25, Y+1	; 0x01
    195c:	8a 81       	ldd	r24, Y+2	; 0x02
    195e:	89 17       	cp	r24, r25
    1960:	b0 f7       	brcc	.-20     	; 0x194e <H_SSD_Void_SSDCounterUp+0x12>
	{
		H_SSD_Void_SSDDisplay(Local_u8_Counter);
	}
}
    1962:	0f 90       	pop	r0
    1964:	0f 90       	pop	r0
    1966:	cf 91       	pop	r28
    1968:	df 91       	pop	r29
    196a:	08 95       	ret

0000196c <H_SSD_Void_SSDCounterDown>:

void H_SSD_Void_SSDCounterDown(u8 Local_Num)
{
    196c:	df 93       	push	r29
    196e:	cf 93       	push	r28
    1970:	00 d0       	rcall	.+0      	; 0x1972 <H_SSD_Void_SSDCounterDown+0x6>
    1972:	cd b7       	in	r28, 0x3d	; 61
    1974:	de b7       	in	r29, 0x3e	; 62
    1976:	8a 83       	std	Y+2, r24	; 0x02
	s8 Local_u8_Counter=0;
    1978:	19 82       	std	Y+1, r1	; 0x01
	for(Local_u8_Counter=Local_Num ; Local_u8_Counter >= 0 ; Local_u8_Counter--)
    197a:	8a 81       	ldd	r24, Y+2	; 0x02
    197c:	89 83       	std	Y+1, r24	; 0x01
    197e:	06 c0       	rjmp	.+12     	; 0x198c <H_SSD_Void_SSDCounterDown+0x20>
	{
		H_SSD_Void_SSDDisplay(Local_u8_Counter);
    1980:	89 81       	ldd	r24, Y+1	; 0x01
    1982:	0e 94 82 08 	call	0x1104	; 0x1104 <H_SSD_Void_SSDDisplay>
}

void H_SSD_Void_SSDCounterDown(u8 Local_Num)
{
	s8 Local_u8_Counter=0;
	for(Local_u8_Counter=Local_Num ; Local_u8_Counter >= 0 ; Local_u8_Counter--)
    1986:	89 81       	ldd	r24, Y+1	; 0x01
    1988:	81 50       	subi	r24, 0x01	; 1
    198a:	89 83       	std	Y+1, r24	; 0x01
    198c:	89 81       	ldd	r24, Y+1	; 0x01
    198e:	88 23       	and	r24, r24
    1990:	bc f7       	brge	.-18     	; 0x1980 <H_SSD_Void_SSDCounterDown+0x14>
	{
		H_SSD_Void_SSDDisplay(Local_u8_Counter);
	}
}
    1992:	0f 90       	pop	r0
    1994:	0f 90       	pop	r0
    1996:	cf 91       	pop	r28
    1998:	df 91       	pop	r29
    199a:	08 95       	ret

0000199c <H_Relay_Void_RelayInit>:
 */

#include"Relay.h"

void H_Relay_Void_RelayInit(u8 Local_u8_RelayNum)
{
    199c:	df 93       	push	r29
    199e:	cf 93       	push	r28
    19a0:	00 d0       	rcall	.+0      	; 0x19a2 <H_Relay_Void_RelayInit+0x6>
    19a2:	0f 92       	push	r0
    19a4:	cd b7       	in	r28, 0x3d	; 61
    19a6:	de b7       	in	r29, 0x3e	; 62
    19a8:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_RelayNum)
    19aa:	89 81       	ldd	r24, Y+1	; 0x01
    19ac:	28 2f       	mov	r18, r24
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	3b 83       	std	Y+3, r19	; 0x03
    19b2:	2a 83       	std	Y+2, r18	; 0x02
    19b4:	8a 81       	ldd	r24, Y+2	; 0x02
    19b6:	9b 81       	ldd	r25, Y+3	; 0x03
    19b8:	81 30       	cpi	r24, 0x01	; 1
    19ba:	91 05       	cpc	r25, r1
    19bc:	31 f0       	breq	.+12     	; 0x19ca <H_Relay_Void_RelayInit+0x2e>
    19be:	2a 81       	ldd	r18, Y+2	; 0x02
    19c0:	3b 81       	ldd	r19, Y+3	; 0x03
    19c2:	22 30       	cpi	r18, 0x02	; 2
    19c4:	31 05       	cpc	r19, r1
    19c6:	31 f0       	breq	.+12     	; 0x19d4 <H_Relay_Void_RelayInit+0x38>
    19c8:	09 c0       	rjmp	.+18     	; 0x19dc <H_Relay_Void_RelayInit+0x40>
	{
		case RELAY1:
			M_Dio_Void_PinMode(Relay1_Pin,OUTPUT);		break;
    19ca:	82 e2       	ldi	r24, 0x22	; 34
    19cc:	61 e0       	ldi	r22, 0x01	; 1
    19ce:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
    19d2:	04 c0       	rjmp	.+8      	; 0x19dc <H_Relay_Void_RelayInit+0x40>
		case RELAY2:
			M_Dio_Void_PinMode(Relay2_Pin,OUTPUT);		break;
    19d4:	81 e2       	ldi	r24, 0x21	; 33
    19d6:	61 e0       	ldi	r22, 0x01	; 1
    19d8:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
		default:									break;
	}
}
    19dc:	0f 90       	pop	r0
    19de:	0f 90       	pop	r0
    19e0:	0f 90       	pop	r0
    19e2:	cf 91       	pop	r28
    19e4:	df 91       	pop	r29
    19e6:	08 95       	ret

000019e8 <H_Relay_Void_RelayOn>:
void H_Relay_Void_RelayOn(u8 Local_u8_RelayNum)
{
    19e8:	df 93       	push	r29
    19ea:	cf 93       	push	r28
    19ec:	00 d0       	rcall	.+0      	; 0x19ee <H_Relay_Void_RelayOn+0x6>
    19ee:	0f 92       	push	r0
    19f0:	cd b7       	in	r28, 0x3d	; 61
    19f2:	de b7       	in	r29, 0x3e	; 62
    19f4:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_RelayNum)
    19f6:	89 81       	ldd	r24, Y+1	; 0x01
    19f8:	28 2f       	mov	r18, r24
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	3b 83       	std	Y+3, r19	; 0x03
    19fe:	2a 83       	std	Y+2, r18	; 0x02
    1a00:	8a 81       	ldd	r24, Y+2	; 0x02
    1a02:	9b 81       	ldd	r25, Y+3	; 0x03
    1a04:	81 30       	cpi	r24, 0x01	; 1
    1a06:	91 05       	cpc	r25, r1
    1a08:	31 f0       	breq	.+12     	; 0x1a16 <H_Relay_Void_RelayOn+0x2e>
    1a0a:	2a 81       	ldd	r18, Y+2	; 0x02
    1a0c:	3b 81       	ldd	r19, Y+3	; 0x03
    1a0e:	22 30       	cpi	r18, 0x02	; 2
    1a10:	31 05       	cpc	r19, r1
    1a12:	31 f0       	breq	.+12     	; 0x1a20 <H_Relay_Void_RelayOn+0x38>
    1a14:	09 c0       	rjmp	.+18     	; 0x1a28 <H_Relay_Void_RelayOn+0x40>
	{
		case RELAY1:
			M_Dio_Void_PinWrite(Relay1_Pin,HIGH);		break;
    1a16:	82 e2       	ldi	r24, 0x22	; 34
    1a18:	61 e0       	ldi	r22, 0x01	; 1
    1a1a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1a1e:	04 c0       	rjmp	.+8      	; 0x1a28 <H_Relay_Void_RelayOn+0x40>
		case RELAY2:
			M_Dio_Void_PinWrite(Relay2_Pin,HIGH);		break;
    1a20:	81 e2       	ldi	r24, 0x21	; 33
    1a22:	61 e0       	ldi	r22, 0x01	; 1
    1a24:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
		default:									break;
	}
}
    1a28:	0f 90       	pop	r0
    1a2a:	0f 90       	pop	r0
    1a2c:	0f 90       	pop	r0
    1a2e:	cf 91       	pop	r28
    1a30:	df 91       	pop	r29
    1a32:	08 95       	ret

00001a34 <H_Relay_Void_RelayOff>:
void H_Relay_Void_RelayOff(u8 Local_u8_RelayNum)
{
    1a34:	df 93       	push	r29
    1a36:	cf 93       	push	r28
    1a38:	00 d0       	rcall	.+0      	; 0x1a3a <H_Relay_Void_RelayOff+0x6>
    1a3a:	0f 92       	push	r0
    1a3c:	cd b7       	in	r28, 0x3d	; 61
    1a3e:	de b7       	in	r29, 0x3e	; 62
    1a40:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_RelayNum)
    1a42:	89 81       	ldd	r24, Y+1	; 0x01
    1a44:	28 2f       	mov	r18, r24
    1a46:	30 e0       	ldi	r19, 0x00	; 0
    1a48:	3b 83       	std	Y+3, r19	; 0x03
    1a4a:	2a 83       	std	Y+2, r18	; 0x02
    1a4c:	8a 81       	ldd	r24, Y+2	; 0x02
    1a4e:	9b 81       	ldd	r25, Y+3	; 0x03
    1a50:	81 30       	cpi	r24, 0x01	; 1
    1a52:	91 05       	cpc	r25, r1
    1a54:	31 f0       	breq	.+12     	; 0x1a62 <H_Relay_Void_RelayOff+0x2e>
    1a56:	2a 81       	ldd	r18, Y+2	; 0x02
    1a58:	3b 81       	ldd	r19, Y+3	; 0x03
    1a5a:	22 30       	cpi	r18, 0x02	; 2
    1a5c:	31 05       	cpc	r19, r1
    1a5e:	31 f0       	breq	.+12     	; 0x1a6c <H_Relay_Void_RelayOff+0x38>
    1a60:	09 c0       	rjmp	.+18     	; 0x1a74 <H_Relay_Void_RelayOff+0x40>
	{
		case RELAY1:
			M_Dio_Void_PinWrite(Relay1_Pin,LOW);		break;
    1a62:	82 e2       	ldi	r24, 0x22	; 34
    1a64:	60 e0       	ldi	r22, 0x00	; 0
    1a66:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1a6a:	04 c0       	rjmp	.+8      	; 0x1a74 <H_Relay_Void_RelayOff+0x40>
		case RELAY2:
			M_Dio_Void_PinWrite(Relay2_Pin,LOW);		break;
    1a6c:	81 e2       	ldi	r24, 0x21	; 33
    1a6e:	60 e0       	ldi	r22, 0x00	; 0
    1a70:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
		default:									break;
	}
}
    1a74:	0f 90       	pop	r0
    1a76:	0f 90       	pop	r0
    1a78:	0f 90       	pop	r0
    1a7a:	cf 91       	pop	r28
    1a7c:	df 91       	pop	r29
    1a7e:	08 95       	ret

00001a80 <H_Relay_Void_RelayTog>:
void H_Relay_Void_RelayTog(u8 Local_u8_RelayNum)
{
    1a80:	df 93       	push	r29
    1a82:	cf 93       	push	r28
    1a84:	00 d0       	rcall	.+0      	; 0x1a86 <H_Relay_Void_RelayTog+0x6>
    1a86:	0f 92       	push	r0
    1a88:	cd b7       	in	r28, 0x3d	; 61
    1a8a:	de b7       	in	r29, 0x3e	; 62
    1a8c:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_u8_RelayNum)
    1a8e:	89 81       	ldd	r24, Y+1	; 0x01
    1a90:	28 2f       	mov	r18, r24
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	3b 83       	std	Y+3, r19	; 0x03
    1a96:	2a 83       	std	Y+2, r18	; 0x02
    1a98:	8a 81       	ldd	r24, Y+2	; 0x02
    1a9a:	9b 81       	ldd	r25, Y+3	; 0x03
    1a9c:	81 30       	cpi	r24, 0x01	; 1
    1a9e:	91 05       	cpc	r25, r1
    1aa0:	31 f0       	breq	.+12     	; 0x1aae <H_Relay_Void_RelayTog+0x2e>
    1aa2:	2a 81       	ldd	r18, Y+2	; 0x02
    1aa4:	3b 81       	ldd	r19, Y+3	; 0x03
    1aa6:	22 30       	cpi	r18, 0x02	; 2
    1aa8:	31 05       	cpc	r19, r1
    1aaa:	29 f0       	breq	.+10     	; 0x1ab6 <H_Relay_Void_RelayTog+0x36>
    1aac:	07 c0       	rjmp	.+14     	; 0x1abc <H_Relay_Void_RelayTog+0x3c>
	{
		case RELAY1:
			M_Dio_Void_PinTog(Relay1_Pin);		break;
    1aae:	82 e2       	ldi	r24, 0x22	; 34
    1ab0:	0e 94 c7 07 	call	0xf8e	; 0xf8e <M_Dio_Void_PinTog>
    1ab4:	03 c0       	rjmp	.+6      	; 0x1abc <H_Relay_Void_RelayTog+0x3c>
		case RELAY2:
			M_Dio_Void_PinTog(Relay2_Pin );		break;
    1ab6:	81 e2       	ldi	r24, 0x21	; 33
    1ab8:	0e 94 c7 07 	call	0xf8e	; 0xf8e <M_Dio_Void_PinTog>
		default:							break;
	}
}
    1abc:	0f 90       	pop	r0
    1abe:	0f 90       	pop	r0
    1ac0:	0f 90       	pop	r0
    1ac2:	cf 91       	pop	r28
    1ac4:	df 91       	pop	r29
    1ac6:	08 95       	ret

00001ac8 <H_Led_Void_LedInit>:

#include"Led.h"


void H_Led_Void_LedInit(u8 Local_Led_Pin)
{
    1ac8:	df 93       	push	r29
    1aca:	cf 93       	push	r28
    1acc:	00 d0       	rcall	.+0      	; 0x1ace <H_Led_Void_LedInit+0x6>
    1ace:	0f 92       	push	r0
    1ad0:	cd b7       	in	r28, 0x3d	; 61
    1ad2:	de b7       	in	r29, 0x3e	; 62
    1ad4:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_Led_Pin)
    1ad6:	89 81       	ldd	r24, Y+1	; 0x01
    1ad8:	28 2f       	mov	r18, r24
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	3b 83       	std	Y+3, r19	; 0x03
    1ade:	2a 83       	std	Y+2, r18	; 0x02
    1ae0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ae4:	82 30       	cpi	r24, 0x02	; 2
    1ae6:	91 05       	cpc	r25, r1
    1ae8:	79 f0       	breq	.+30     	; 0x1b08 <H_Led_Void_LedInit+0x40>
    1aea:	2a 81       	ldd	r18, Y+2	; 0x02
    1aec:	3b 81       	ldd	r19, Y+3	; 0x03
    1aee:	23 30       	cpi	r18, 0x03	; 3
    1af0:	31 05       	cpc	r19, r1
    1af2:	79 f0       	breq	.+30     	; 0x1b12 <H_Led_Void_LedInit+0x4a>
    1af4:	8a 81       	ldd	r24, Y+2	; 0x02
    1af6:	9b 81       	ldd	r25, Y+3	; 0x03
    1af8:	81 30       	cpi	r24, 0x01	; 1
    1afa:	91 05       	cpc	r25, r1
    1afc:	71 f4       	brne	.+28     	; 0x1b1a <H_Led_Void_LedInit+0x52>
	{
	case BLU_LED:M_Dio_Void_PinMode(Blu_Led_Pin,OUTPUT);	break;
    1afe:	80 e2       	ldi	r24, 0x20	; 32
    1b00:	61 e0       	ldi	r22, 0x01	; 1
    1b02:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
    1b06:	09 c0       	rjmp	.+18     	; 0x1b1a <H_Led_Void_LedInit+0x52>
	case GRN_LED:M_Dio_Void_PinMode(Grn_Led_Pin,OUTPUT); 	break;
    1b08:	8f e1       	ldi	r24, 0x1F	; 31
    1b0a:	61 e0       	ldi	r22, 0x01	; 1
    1b0c:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
    1b10:	04 c0       	rjmp	.+8      	; 0x1b1a <H_Led_Void_LedInit+0x52>
	case RED_LED:M_Dio_Void_PinMode(Red_Led_Pin,OUTPUT);	break;
    1b12:	8e e1       	ldi	r24, 0x1E	; 30
    1b14:	61 e0       	ldi	r22, 0x01	; 1
    1b16:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
	default:												break;
	}
}
    1b1a:	0f 90       	pop	r0
    1b1c:	0f 90       	pop	r0
    1b1e:	0f 90       	pop	r0
    1b20:	cf 91       	pop	r28
    1b22:	df 91       	pop	r29
    1b24:	08 95       	ret

00001b26 <H_Led_Void_LedOn>:

void H_Led_Void_LedOn(u8 Local_Led_Pin)
{
    1b26:	df 93       	push	r29
    1b28:	cf 93       	push	r28
    1b2a:	00 d0       	rcall	.+0      	; 0x1b2c <H_Led_Void_LedOn+0x6>
    1b2c:	0f 92       	push	r0
    1b2e:	cd b7       	in	r28, 0x3d	; 61
    1b30:	de b7       	in	r29, 0x3e	; 62
    1b32:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_Led_Pin)
    1b34:	89 81       	ldd	r24, Y+1	; 0x01
    1b36:	28 2f       	mov	r18, r24
    1b38:	30 e0       	ldi	r19, 0x00	; 0
    1b3a:	3b 83       	std	Y+3, r19	; 0x03
    1b3c:	2a 83       	std	Y+2, r18	; 0x02
    1b3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b40:	9b 81       	ldd	r25, Y+3	; 0x03
    1b42:	82 30       	cpi	r24, 0x02	; 2
    1b44:	91 05       	cpc	r25, r1
    1b46:	79 f0       	breq	.+30     	; 0x1b66 <H_Led_Void_LedOn+0x40>
    1b48:	2a 81       	ldd	r18, Y+2	; 0x02
    1b4a:	3b 81       	ldd	r19, Y+3	; 0x03
    1b4c:	23 30       	cpi	r18, 0x03	; 3
    1b4e:	31 05       	cpc	r19, r1
    1b50:	79 f0       	breq	.+30     	; 0x1b70 <H_Led_Void_LedOn+0x4a>
    1b52:	8a 81       	ldd	r24, Y+2	; 0x02
    1b54:	9b 81       	ldd	r25, Y+3	; 0x03
    1b56:	81 30       	cpi	r24, 0x01	; 1
    1b58:	91 05       	cpc	r25, r1
    1b5a:	71 f4       	brne	.+28     	; 0x1b78 <H_Led_Void_LedOn+0x52>
	{
	case BLU_LED:M_Dio_Void_PinWrite(Blu_Led_Pin,HIGH);	break;
    1b5c:	80 e2       	ldi	r24, 0x20	; 32
    1b5e:	61 e0       	ldi	r22, 0x01	; 1
    1b60:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1b64:	09 c0       	rjmp	.+18     	; 0x1b78 <H_Led_Void_LedOn+0x52>
	case GRN_LED:M_Dio_Void_PinWrite(Grn_Led_Pin,HIGH);	break;
    1b66:	8f e1       	ldi	r24, 0x1F	; 31
    1b68:	61 e0       	ldi	r22, 0x01	; 1
    1b6a:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1b6e:	04 c0       	rjmp	.+8      	; 0x1b78 <H_Led_Void_LedOn+0x52>
	case RED_LED:M_Dio_Void_PinWrite(Red_Led_Pin,HIGH);	break;
    1b70:	8e e1       	ldi	r24, 0x1E	; 30
    1b72:	61 e0       	ldi	r22, 0x01	; 1
    1b74:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
	default:											break;
	}
}
    1b78:	0f 90       	pop	r0
    1b7a:	0f 90       	pop	r0
    1b7c:	0f 90       	pop	r0
    1b7e:	cf 91       	pop	r28
    1b80:	df 91       	pop	r29
    1b82:	08 95       	ret

00001b84 <H_Led_Void_LedOff>:
void H_Led_Void_LedOff(u8 Local_Led_Pin)
{
    1b84:	df 93       	push	r29
    1b86:	cf 93       	push	r28
    1b88:	00 d0       	rcall	.+0      	; 0x1b8a <H_Led_Void_LedOff+0x6>
    1b8a:	0f 92       	push	r0
    1b8c:	cd b7       	in	r28, 0x3d	; 61
    1b8e:	de b7       	in	r29, 0x3e	; 62
    1b90:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_Led_Pin)
    1b92:	89 81       	ldd	r24, Y+1	; 0x01
    1b94:	28 2f       	mov	r18, r24
    1b96:	30 e0       	ldi	r19, 0x00	; 0
    1b98:	3b 83       	std	Y+3, r19	; 0x03
    1b9a:	2a 83       	std	Y+2, r18	; 0x02
    1b9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1ba0:	82 30       	cpi	r24, 0x02	; 2
    1ba2:	91 05       	cpc	r25, r1
    1ba4:	79 f0       	breq	.+30     	; 0x1bc4 <H_Led_Void_LedOff+0x40>
    1ba6:	2a 81       	ldd	r18, Y+2	; 0x02
    1ba8:	3b 81       	ldd	r19, Y+3	; 0x03
    1baa:	23 30       	cpi	r18, 0x03	; 3
    1bac:	31 05       	cpc	r19, r1
    1bae:	79 f0       	breq	.+30     	; 0x1bce <H_Led_Void_LedOff+0x4a>
    1bb0:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb2:	9b 81       	ldd	r25, Y+3	; 0x03
    1bb4:	81 30       	cpi	r24, 0x01	; 1
    1bb6:	91 05       	cpc	r25, r1
    1bb8:	71 f4       	brne	.+28     	; 0x1bd6 <H_Led_Void_LedOff+0x52>
	{
	case BLU_LED:M_Dio_Void_PinWrite(Blu_Led_Pin,LOW);	break;
    1bba:	80 e2       	ldi	r24, 0x20	; 32
    1bbc:	60 e0       	ldi	r22, 0x00	; 0
    1bbe:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1bc2:	09 c0       	rjmp	.+18     	; 0x1bd6 <H_Led_Void_LedOff+0x52>
	case GRN_LED:M_Dio_Void_PinWrite(Grn_Led_Pin,LOW); 	break;
    1bc4:	8f e1       	ldi	r24, 0x1F	; 31
    1bc6:	60 e0       	ldi	r22, 0x00	; 0
    1bc8:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
    1bcc:	04 c0       	rjmp	.+8      	; 0x1bd6 <H_Led_Void_LedOff+0x52>
	case RED_LED:M_Dio_Void_PinWrite(Red_Led_Pin,LOW);	break;
    1bce:	8e e1       	ldi	r24, 0x1E	; 30
    1bd0:	60 e0       	ldi	r22, 0x00	; 0
    1bd2:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
	default:											break;
	}
}
    1bd6:	0f 90       	pop	r0
    1bd8:	0f 90       	pop	r0
    1bda:	0f 90       	pop	r0
    1bdc:	cf 91       	pop	r28
    1bde:	df 91       	pop	r29
    1be0:	08 95       	ret

00001be2 <H_Led_Void_LedBlink>:

void H_Led_Void_LedBlink(u8 Local_Led_Pin)
{
    1be2:	df 93       	push	r29
    1be4:	cf 93       	push	r28
    1be6:	cd b7       	in	r28, 0x3d	; 61
    1be8:	de b7       	in	r29, 0x3e	; 62
    1bea:	6d 97       	sbiw	r28, 0x1d	; 29
    1bec:	0f b6       	in	r0, 0x3f	; 63
    1bee:	f8 94       	cli
    1bf0:	de bf       	out	0x3e, r29	; 62
    1bf2:	0f be       	out	0x3f, r0	; 63
    1bf4:	cd bf       	out	0x3d, r28	; 61
    1bf6:	8d 8f       	std	Y+29, r24	; 0x1d
    1bf8:	80 e0       	ldi	r24, 0x00	; 0
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	aa ef       	ldi	r26, 0xFA	; 250
    1bfe:	b3 e4       	ldi	r27, 0x43	; 67
    1c00:	89 8f       	std	Y+25, r24	; 0x19
    1c02:	9a 8f       	std	Y+26, r25	; 0x1a
    1c04:	ab 8f       	std	Y+27, r26	; 0x1b
    1c06:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c08:	69 8d       	ldd	r22, Y+25	; 0x19
    1c0a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c0c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c0e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c10:	20 e0       	ldi	r18, 0x00	; 0
    1c12:	30 e0       	ldi	r19, 0x00	; 0
    1c14:	4a e7       	ldi	r20, 0x7A	; 122
    1c16:	55 e4       	ldi	r21, 0x45	; 69
    1c18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c1c:	dc 01       	movw	r26, r24
    1c1e:	cb 01       	movw	r24, r22
    1c20:	8d 8b       	std	Y+21, r24	; 0x15
    1c22:	9e 8b       	std	Y+22, r25	; 0x16
    1c24:	af 8b       	std	Y+23, r26	; 0x17
    1c26:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c28:	6d 89       	ldd	r22, Y+21	; 0x15
    1c2a:	7e 89       	ldd	r23, Y+22	; 0x16
    1c2c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c2e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c30:	20 e0       	ldi	r18, 0x00	; 0
    1c32:	30 e0       	ldi	r19, 0x00	; 0
    1c34:	40 e8       	ldi	r20, 0x80	; 128
    1c36:	5f e3       	ldi	r21, 0x3F	; 63
    1c38:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c3c:	88 23       	and	r24, r24
    1c3e:	2c f4       	brge	.+10     	; 0x1c4a <H_Led_Void_LedBlink+0x68>
		__ticks = 1;
    1c40:	81 e0       	ldi	r24, 0x01	; 1
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	9c 8b       	std	Y+20, r25	; 0x14
    1c46:	8b 8b       	std	Y+19, r24	; 0x13
    1c48:	3f c0       	rjmp	.+126    	; 0x1cc8 <H_Led_Void_LedBlink+0xe6>
	else if (__tmp > 65535)
    1c4a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c4c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c4e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c50:	98 8d       	ldd	r25, Y+24	; 0x18
    1c52:	20 e0       	ldi	r18, 0x00	; 0
    1c54:	3f ef       	ldi	r19, 0xFF	; 255
    1c56:	4f e7       	ldi	r20, 0x7F	; 127
    1c58:	57 e4       	ldi	r21, 0x47	; 71
    1c5a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c5e:	18 16       	cp	r1, r24
    1c60:	4c f5       	brge	.+82     	; 0x1cb4 <H_Led_Void_LedBlink+0xd2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c62:	69 8d       	ldd	r22, Y+25	; 0x19
    1c64:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c66:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c68:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c6a:	20 e0       	ldi	r18, 0x00	; 0
    1c6c:	30 e0       	ldi	r19, 0x00	; 0
    1c6e:	40 e2       	ldi	r20, 0x20	; 32
    1c70:	51 e4       	ldi	r21, 0x41	; 65
    1c72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c76:	dc 01       	movw	r26, r24
    1c78:	cb 01       	movw	r24, r22
    1c7a:	bc 01       	movw	r22, r24
    1c7c:	cd 01       	movw	r24, r26
    1c7e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c82:	dc 01       	movw	r26, r24
    1c84:	cb 01       	movw	r24, r22
    1c86:	9c 8b       	std	Y+20, r25	; 0x14
    1c88:	8b 8b       	std	Y+19, r24	; 0x13
    1c8a:	0f c0       	rjmp	.+30     	; 0x1caa <H_Led_Void_LedBlink+0xc8>
    1c8c:	80 e9       	ldi	r24, 0x90	; 144
    1c8e:	91 e0       	ldi	r25, 0x01	; 1
    1c90:	9a 8b       	std	Y+18, r25	; 0x12
    1c92:	89 8b       	std	Y+17, r24	; 0x11
    1c94:	89 89       	ldd	r24, Y+17	; 0x11
    1c96:	9a 89       	ldd	r25, Y+18	; 0x12
    1c98:	01 97       	sbiw	r24, 0x01	; 1
    1c9a:	f1 f7       	brne	.-4      	; 0x1c98 <H_Led_Void_LedBlink+0xb6>
    1c9c:	9a 8b       	std	Y+18, r25	; 0x12
    1c9e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ca0:	8b 89       	ldd	r24, Y+19	; 0x13
    1ca2:	9c 89       	ldd	r25, Y+20	; 0x14
    1ca4:	01 97       	sbiw	r24, 0x01	; 1
    1ca6:	9c 8b       	std	Y+20, r25	; 0x14
    1ca8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1caa:	8b 89       	ldd	r24, Y+19	; 0x13
    1cac:	9c 89       	ldd	r25, Y+20	; 0x14
    1cae:	00 97       	sbiw	r24, 0x00	; 0
    1cb0:	69 f7       	brne	.-38     	; 0x1c8c <H_Led_Void_LedBlink+0xaa>
    1cb2:	14 c0       	rjmp	.+40     	; 0x1cdc <H_Led_Void_LedBlink+0xfa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cb4:	6d 89       	ldd	r22, Y+21	; 0x15
    1cb6:	7e 89       	ldd	r23, Y+22	; 0x16
    1cb8:	8f 89       	ldd	r24, Y+23	; 0x17
    1cba:	98 8d       	ldd	r25, Y+24	; 0x18
    1cbc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cc0:	dc 01       	movw	r26, r24
    1cc2:	cb 01       	movw	r24, r22
    1cc4:	9c 8b       	std	Y+20, r25	; 0x14
    1cc6:	8b 8b       	std	Y+19, r24	; 0x13
    1cc8:	8b 89       	ldd	r24, Y+19	; 0x13
    1cca:	9c 89       	ldd	r25, Y+20	; 0x14
    1ccc:	98 8b       	std	Y+16, r25	; 0x10
    1cce:	8f 87       	std	Y+15, r24	; 0x0f
    1cd0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cd2:	98 89       	ldd	r25, Y+16	; 0x10
    1cd4:	01 97       	sbiw	r24, 0x01	; 1
    1cd6:	f1 f7       	brne	.-4      	; 0x1cd4 <H_Led_Void_LedBlink+0xf2>
    1cd8:	98 8b       	std	Y+16, r25	; 0x10
    1cda:	8f 87       	std	Y+15, r24	; 0x0f
		 _delay_ms(LED_DELAY_TIME);
		H_Led_Void_LedOn(Local_Led_Pin);
    1cdc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1cde:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <H_Led_Void_LedOn>
    1ce2:	80 e0       	ldi	r24, 0x00	; 0
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	aa ef       	ldi	r26, 0xFA	; 250
    1ce8:	b3 e4       	ldi	r27, 0x43	; 67
    1cea:	8b 87       	std	Y+11, r24	; 0x0b
    1cec:	9c 87       	std	Y+12, r25	; 0x0c
    1cee:	ad 87       	std	Y+13, r26	; 0x0d
    1cf0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cf2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cf4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1cf6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1cf8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cfa:	20 e0       	ldi	r18, 0x00	; 0
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	4a e7       	ldi	r20, 0x7A	; 122
    1d00:	55 e4       	ldi	r21, 0x45	; 69
    1d02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d06:	dc 01       	movw	r26, r24
    1d08:	cb 01       	movw	r24, r22
    1d0a:	8f 83       	std	Y+7, r24	; 0x07
    1d0c:	98 87       	std	Y+8, r25	; 0x08
    1d0e:	a9 87       	std	Y+9, r26	; 0x09
    1d10:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d12:	6f 81       	ldd	r22, Y+7	; 0x07
    1d14:	78 85       	ldd	r23, Y+8	; 0x08
    1d16:	89 85       	ldd	r24, Y+9	; 0x09
    1d18:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d1a:	20 e0       	ldi	r18, 0x00	; 0
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	40 e8       	ldi	r20, 0x80	; 128
    1d20:	5f e3       	ldi	r21, 0x3F	; 63
    1d22:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d26:	88 23       	and	r24, r24
    1d28:	2c f4       	brge	.+10     	; 0x1d34 <H_Led_Void_LedBlink+0x152>
		__ticks = 1;
    1d2a:	81 e0       	ldi	r24, 0x01	; 1
    1d2c:	90 e0       	ldi	r25, 0x00	; 0
    1d2e:	9e 83       	std	Y+6, r25	; 0x06
    1d30:	8d 83       	std	Y+5, r24	; 0x05
    1d32:	3f c0       	rjmp	.+126    	; 0x1db2 <H_Led_Void_LedBlink+0x1d0>
	else if (__tmp > 65535)
    1d34:	6f 81       	ldd	r22, Y+7	; 0x07
    1d36:	78 85       	ldd	r23, Y+8	; 0x08
    1d38:	89 85       	ldd	r24, Y+9	; 0x09
    1d3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d3c:	20 e0       	ldi	r18, 0x00	; 0
    1d3e:	3f ef       	ldi	r19, 0xFF	; 255
    1d40:	4f e7       	ldi	r20, 0x7F	; 127
    1d42:	57 e4       	ldi	r21, 0x47	; 71
    1d44:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d48:	18 16       	cp	r1, r24
    1d4a:	4c f5       	brge	.+82     	; 0x1d9e <H_Led_Void_LedBlink+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d50:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d52:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d54:	20 e0       	ldi	r18, 0x00	; 0
    1d56:	30 e0       	ldi	r19, 0x00	; 0
    1d58:	40 e2       	ldi	r20, 0x20	; 32
    1d5a:	51 e4       	ldi	r21, 0x41	; 65
    1d5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d60:	dc 01       	movw	r26, r24
    1d62:	cb 01       	movw	r24, r22
    1d64:	bc 01       	movw	r22, r24
    1d66:	cd 01       	movw	r24, r26
    1d68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d6c:	dc 01       	movw	r26, r24
    1d6e:	cb 01       	movw	r24, r22
    1d70:	9e 83       	std	Y+6, r25	; 0x06
    1d72:	8d 83       	std	Y+5, r24	; 0x05
    1d74:	0f c0       	rjmp	.+30     	; 0x1d94 <H_Led_Void_LedBlink+0x1b2>
    1d76:	80 e9       	ldi	r24, 0x90	; 144
    1d78:	91 e0       	ldi	r25, 0x01	; 1
    1d7a:	9c 83       	std	Y+4, r25	; 0x04
    1d7c:	8b 83       	std	Y+3, r24	; 0x03
    1d7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d80:	9c 81       	ldd	r25, Y+4	; 0x04
    1d82:	01 97       	sbiw	r24, 0x01	; 1
    1d84:	f1 f7       	brne	.-4      	; 0x1d82 <H_Led_Void_LedBlink+0x1a0>
    1d86:	9c 83       	std	Y+4, r25	; 0x04
    1d88:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d8a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d8c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d8e:	01 97       	sbiw	r24, 0x01	; 1
    1d90:	9e 83       	std	Y+6, r25	; 0x06
    1d92:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d94:	8d 81       	ldd	r24, Y+5	; 0x05
    1d96:	9e 81       	ldd	r25, Y+6	; 0x06
    1d98:	00 97       	sbiw	r24, 0x00	; 0
    1d9a:	69 f7       	brne	.-38     	; 0x1d76 <H_Led_Void_LedBlink+0x194>
    1d9c:	14 c0       	rjmp	.+40     	; 0x1dc6 <H_Led_Void_LedBlink+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d9e:	6f 81       	ldd	r22, Y+7	; 0x07
    1da0:	78 85       	ldd	r23, Y+8	; 0x08
    1da2:	89 85       	ldd	r24, Y+9	; 0x09
    1da4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1da6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1daa:	dc 01       	movw	r26, r24
    1dac:	cb 01       	movw	r24, r22
    1dae:	9e 83       	std	Y+6, r25	; 0x06
    1db0:	8d 83       	std	Y+5, r24	; 0x05
    1db2:	8d 81       	ldd	r24, Y+5	; 0x05
    1db4:	9e 81       	ldd	r25, Y+6	; 0x06
    1db6:	9a 83       	std	Y+2, r25	; 0x02
    1db8:	89 83       	std	Y+1, r24	; 0x01
    1dba:	89 81       	ldd	r24, Y+1	; 0x01
    1dbc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dbe:	01 97       	sbiw	r24, 0x01	; 1
    1dc0:	f1 f7       	brne	.-4      	; 0x1dbe <H_Led_Void_LedBlink+0x1dc>
    1dc2:	9a 83       	std	Y+2, r25	; 0x02
    1dc4:	89 83       	std	Y+1, r24	; 0x01
		 _delay_ms(LED_DELAY_TIME);
		H_Led_Void_LedOff(Local_Led_Pin);
    1dc6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1dc8:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <H_Led_Void_LedOff>
}
    1dcc:	6d 96       	adiw	r28, 0x1d	; 29
    1dce:	0f b6       	in	r0, 0x3f	; 63
    1dd0:	f8 94       	cli
    1dd2:	de bf       	out	0x3e, r29	; 62
    1dd4:	0f be       	out	0x3f, r0	; 63
    1dd6:	cd bf       	out	0x3d, r28	; 61
    1dd8:	cf 91       	pop	r28
    1dda:	df 91       	pop	r29
    1ddc:	08 95       	ret

00001dde <H_Led_Void_LedTog>:


void H_Led_Void_LedTog(u8 Local_Led_Pin)
{
    1dde:	df 93       	push	r29
    1de0:	cf 93       	push	r28
    1de2:	00 d0       	rcall	.+0      	; 0x1de4 <H_Led_Void_LedTog+0x6>
    1de4:	0f 92       	push	r0
    1de6:	cd b7       	in	r28, 0x3d	; 61
    1de8:	de b7       	in	r29, 0x3e	; 62
    1dea:	89 83       	std	Y+1, r24	; 0x01
	switch(Local_Led_Pin)
    1dec:	89 81       	ldd	r24, Y+1	; 0x01
    1dee:	28 2f       	mov	r18, r24
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	3b 83       	std	Y+3, r19	; 0x03
    1df4:	2a 83       	std	Y+2, r18	; 0x02
    1df6:	8a 81       	ldd	r24, Y+2	; 0x02
    1df8:	9b 81       	ldd	r25, Y+3	; 0x03
    1dfa:	82 30       	cpi	r24, 0x02	; 2
    1dfc:	91 05       	cpc	r25, r1
    1dfe:	91 f0       	breq	.+36     	; 0x1e24 <H_Led_Void_LedTog+0x46>
    1e00:	2a 81       	ldd	r18, Y+2	; 0x02
    1e02:	3b 81       	ldd	r19, Y+3	; 0x03
    1e04:	23 30       	cpi	r18, 0x03	; 3
    1e06:	31 05       	cpc	r19, r1
    1e08:	49 f0       	breq	.+18     	; 0x1e1c <H_Led_Void_LedTog+0x3e>
    1e0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e0c:	9b 81       	ldd	r25, Y+3	; 0x03
    1e0e:	81 30       	cpi	r24, 0x01	; 1
    1e10:	91 05       	cpc	r25, r1
    1e12:	59 f4       	brne	.+22     	; 0x1e2a <H_Led_Void_LedTog+0x4c>
	{
	case BLU_LED:M_Dio_Void_PinTog(Blu_Led_Pin);	break;
    1e14:	80 e2       	ldi	r24, 0x20	; 32
    1e16:	0e 94 c7 07 	call	0xf8e	; 0xf8e <M_Dio_Void_PinTog>
    1e1a:	07 c0       	rjmp	.+14     	; 0x1e2a <H_Led_Void_LedTog+0x4c>
	case RED_LED:M_Dio_Void_PinTog(Red_Led_Pin);	break;
    1e1c:	8e e1       	ldi	r24, 0x1E	; 30
    1e1e:	0e 94 c7 07 	call	0xf8e	; 0xf8e <M_Dio_Void_PinTog>
    1e22:	03 c0       	rjmp	.+6      	; 0x1e2a <H_Led_Void_LedTog+0x4c>
	case GRN_LED:M_Dio_Void_PinTog(Grn_Led_Pin);	break;
    1e24:	8f e1       	ldi	r24, 0x1F	; 31
    1e26:	0e 94 c7 07 	call	0xf8e	; 0xf8e <M_Dio_Void_PinTog>
	default:										break;
	}
}
    1e2a:	0f 90       	pop	r0
    1e2c:	0f 90       	pop	r0
    1e2e:	0f 90       	pop	r0
    1e30:	cf 91       	pop	r28
    1e32:	df 91       	pop	r29
    1e34:	08 95       	ret

00001e36 <H_Buzzer_Void_BuzzerInit>:
 */

#include"Buzzer.h"

 void H_Buzzer_Void_BuzzerInit(void)
 {
    1e36:	df 93       	push	r29
    1e38:	cf 93       	push	r28
    1e3a:	cd b7       	in	r28, 0x3d	; 61
    1e3c:	de b7       	in	r29, 0x3e	; 62
	 M_Dio_Void_PinMode(Buzzer_Pin,OUTPUT);
    1e3e:	83 e2       	ldi	r24, 0x23	; 35
    1e40:	61 e0       	ldi	r22, 0x01	; 1
    1e42:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_Dio_Void_PinMode>
 }
    1e46:	cf 91       	pop	r28
    1e48:	df 91       	pop	r29
    1e4a:	08 95       	ret

00001e4c <H_Buzzer_Void_BuzzerOn>:


 void H_Buzzer_Void_BuzzerOn(void)
 {
    1e4c:	df 93       	push	r29
    1e4e:	cf 93       	push	r28
    1e50:	cd b7       	in	r28, 0x3d	; 61
    1e52:	de b7       	in	r29, 0x3e	; 62
	M_Dio_Void_PinWrite(Buzzer_Pin,HIGH);
    1e54:	83 e2       	ldi	r24, 0x23	; 35
    1e56:	61 e0       	ldi	r22, 0x01	; 1
    1e58:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
 }
    1e5c:	cf 91       	pop	r28
    1e5e:	df 91       	pop	r29
    1e60:	08 95       	ret

00001e62 <H_Buzzer_Void_BuzzerOff>:

 void H_Buzzer_Void_BuzzerOff(void)
 {
    1e62:	df 93       	push	r29
    1e64:	cf 93       	push	r28
    1e66:	cd b7       	in	r28, 0x3d	; 61
    1e68:	de b7       	in	r29, 0x3e	; 62
	M_Dio_Void_PinWrite(Buzzer_Pin,LOW);
    1e6a:	83 e2       	ldi	r24, 0x23	; 35
    1e6c:	60 e0       	ldi	r22, 0x00	; 0
    1e6e:	0e 94 b1 06 	call	0xd62	; 0xd62 <M_Dio_Void_PinWrite>
 }
    1e72:	cf 91       	pop	r28
    1e74:	df 91       	pop	r29
    1e76:	08 95       	ret

00001e78 <H_Buzzer_Void_BuzzerOnce>:
 void H_Buzzer_Void_BuzzerOnce(void)
 {
    1e78:	df 93       	push	r29
    1e7a:	cf 93       	push	r28
    1e7c:	cd b7       	in	r28, 0x3d	; 61
    1e7e:	de b7       	in	r29, 0x3e	; 62
    1e80:	2e 97       	sbiw	r28, 0x0e	; 14
    1e82:	0f b6       	in	r0, 0x3f	; 63
    1e84:	f8 94       	cli
    1e86:	de bf       	out	0x3e, r29	; 62
    1e88:	0f be       	out	0x3f, r0	; 63
    1e8a:	cd bf       	out	0x3d, r28	; 61
	 H_Buzzer_Void_BuzzerOn();
    1e8c:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <H_Buzzer_Void_BuzzerOn>
    1e90:	80 e0       	ldi	r24, 0x00	; 0
    1e92:	90 e0       	ldi	r25, 0x00	; 0
    1e94:	aa ef       	ldi	r26, 0xFA	; 250
    1e96:	b3 e4       	ldi	r27, 0x43	; 67
    1e98:	8b 87       	std	Y+11, r24	; 0x0b
    1e9a:	9c 87       	std	Y+12, r25	; 0x0c
    1e9c:	ad 87       	std	Y+13, r26	; 0x0d
    1e9e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ea0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ea2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ea4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ea6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ea8:	20 e0       	ldi	r18, 0x00	; 0
    1eaa:	30 e0       	ldi	r19, 0x00	; 0
    1eac:	4a e7       	ldi	r20, 0x7A	; 122
    1eae:	55 e4       	ldi	r21, 0x45	; 69
    1eb0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eb4:	dc 01       	movw	r26, r24
    1eb6:	cb 01       	movw	r24, r22
    1eb8:	8f 83       	std	Y+7, r24	; 0x07
    1eba:	98 87       	std	Y+8, r25	; 0x08
    1ebc:	a9 87       	std	Y+9, r26	; 0x09
    1ebe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ec0:	6f 81       	ldd	r22, Y+7	; 0x07
    1ec2:	78 85       	ldd	r23, Y+8	; 0x08
    1ec4:	89 85       	ldd	r24, Y+9	; 0x09
    1ec6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ec8:	20 e0       	ldi	r18, 0x00	; 0
    1eca:	30 e0       	ldi	r19, 0x00	; 0
    1ecc:	40 e8       	ldi	r20, 0x80	; 128
    1ece:	5f e3       	ldi	r21, 0x3F	; 63
    1ed0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ed4:	88 23       	and	r24, r24
    1ed6:	2c f4       	brge	.+10     	; 0x1ee2 <H_Buzzer_Void_BuzzerOnce+0x6a>
		__ticks = 1;
    1ed8:	81 e0       	ldi	r24, 0x01	; 1
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	9e 83       	std	Y+6, r25	; 0x06
    1ede:	8d 83       	std	Y+5, r24	; 0x05
    1ee0:	3f c0       	rjmp	.+126    	; 0x1f60 <H_Buzzer_Void_BuzzerOnce+0xe8>
	else if (__tmp > 65535)
    1ee2:	6f 81       	ldd	r22, Y+7	; 0x07
    1ee4:	78 85       	ldd	r23, Y+8	; 0x08
    1ee6:	89 85       	ldd	r24, Y+9	; 0x09
    1ee8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eea:	20 e0       	ldi	r18, 0x00	; 0
    1eec:	3f ef       	ldi	r19, 0xFF	; 255
    1eee:	4f e7       	ldi	r20, 0x7F	; 127
    1ef0:	57 e4       	ldi	r21, 0x47	; 71
    1ef2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ef6:	18 16       	cp	r1, r24
    1ef8:	4c f5       	brge	.+82     	; 0x1f4c <H_Buzzer_Void_BuzzerOnce+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1efa:	6b 85       	ldd	r22, Y+11	; 0x0b
    1efc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1efe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f00:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f02:	20 e0       	ldi	r18, 0x00	; 0
    1f04:	30 e0       	ldi	r19, 0x00	; 0
    1f06:	40 e2       	ldi	r20, 0x20	; 32
    1f08:	51 e4       	ldi	r21, 0x41	; 65
    1f0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f0e:	dc 01       	movw	r26, r24
    1f10:	cb 01       	movw	r24, r22
    1f12:	bc 01       	movw	r22, r24
    1f14:	cd 01       	movw	r24, r26
    1f16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f1a:	dc 01       	movw	r26, r24
    1f1c:	cb 01       	movw	r24, r22
    1f1e:	9e 83       	std	Y+6, r25	; 0x06
    1f20:	8d 83       	std	Y+5, r24	; 0x05
    1f22:	0f c0       	rjmp	.+30     	; 0x1f42 <H_Buzzer_Void_BuzzerOnce+0xca>
    1f24:	80 e9       	ldi	r24, 0x90	; 144
    1f26:	91 e0       	ldi	r25, 0x01	; 1
    1f28:	9c 83       	std	Y+4, r25	; 0x04
    1f2a:	8b 83       	std	Y+3, r24	; 0x03
    1f2c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f2e:	9c 81       	ldd	r25, Y+4	; 0x04
    1f30:	01 97       	sbiw	r24, 0x01	; 1
    1f32:	f1 f7       	brne	.-4      	; 0x1f30 <H_Buzzer_Void_BuzzerOnce+0xb8>
    1f34:	9c 83       	std	Y+4, r25	; 0x04
    1f36:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f38:	8d 81       	ldd	r24, Y+5	; 0x05
    1f3a:	9e 81       	ldd	r25, Y+6	; 0x06
    1f3c:	01 97       	sbiw	r24, 0x01	; 1
    1f3e:	9e 83       	std	Y+6, r25	; 0x06
    1f40:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f42:	8d 81       	ldd	r24, Y+5	; 0x05
    1f44:	9e 81       	ldd	r25, Y+6	; 0x06
    1f46:	00 97       	sbiw	r24, 0x00	; 0
    1f48:	69 f7       	brne	.-38     	; 0x1f24 <H_Buzzer_Void_BuzzerOnce+0xac>
    1f4a:	14 c0       	rjmp	.+40     	; 0x1f74 <H_Buzzer_Void_BuzzerOnce+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f4c:	6f 81       	ldd	r22, Y+7	; 0x07
    1f4e:	78 85       	ldd	r23, Y+8	; 0x08
    1f50:	89 85       	ldd	r24, Y+9	; 0x09
    1f52:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f54:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f58:	dc 01       	movw	r26, r24
    1f5a:	cb 01       	movw	r24, r22
    1f5c:	9e 83       	std	Y+6, r25	; 0x06
    1f5e:	8d 83       	std	Y+5, r24	; 0x05
    1f60:	8d 81       	ldd	r24, Y+5	; 0x05
    1f62:	9e 81       	ldd	r25, Y+6	; 0x06
    1f64:	9a 83       	std	Y+2, r25	; 0x02
    1f66:	89 83       	std	Y+1, r24	; 0x01
    1f68:	89 81       	ldd	r24, Y+1	; 0x01
    1f6a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f6c:	01 97       	sbiw	r24, 0x01	; 1
    1f6e:	f1 f7       	brne	.-4      	; 0x1f6c <H_Buzzer_Void_BuzzerOnce+0xf4>
    1f70:	9a 83       	std	Y+2, r25	; 0x02
    1f72:	89 83       	std	Y+1, r24	; 0x01
	 _delay_ms(BUZZER_ONDELAY_TIME);
	 H_Buzzer_Void_BuzzerOff();
    1f74:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <H_Buzzer_Void_BuzzerOff>
 }
    1f78:	2e 96       	adiw	r28, 0x0e	; 14
    1f7a:	0f b6       	in	r0, 0x3f	; 63
    1f7c:	f8 94       	cli
    1f7e:	de bf       	out	0x3e, r29	; 62
    1f80:	0f be       	out	0x3f, r0	; 63
    1f82:	cd bf       	out	0x3d, r28	; 61
    1f84:	cf 91       	pop	r28
    1f86:	df 91       	pop	r29
    1f88:	08 95       	ret

00001f8a <H_Buzzer_Void_BuzzerTwice>:
 void H_Buzzer_Void_BuzzerTwice(void)
 {
    1f8a:	df 93       	push	r29
    1f8c:	cf 93       	push	r28
    1f8e:	cd b7       	in	r28, 0x3d	; 61
    1f90:	de b7       	in	r29, 0x3e	; 62
    1f92:	aa 97       	sbiw	r28, 0x2a	; 42
    1f94:	0f b6       	in	r0, 0x3f	; 63
    1f96:	f8 94       	cli
    1f98:	de bf       	out	0x3e, r29	; 62
    1f9a:	0f be       	out	0x3f, r0	; 63
    1f9c:	cd bf       	out	0x3d, r28	; 61
	 H_Buzzer_Void_BuzzerOn();
    1f9e:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <H_Buzzer_Void_BuzzerOn>
    1fa2:	80 e0       	ldi	r24, 0x00	; 0
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	aa ef       	ldi	r26, 0xFA	; 250
    1fa8:	b3 e4       	ldi	r27, 0x43	; 67
    1faa:	8f a3       	std	Y+39, r24	; 0x27
    1fac:	98 a7       	std	Y+40, r25	; 0x28
    1fae:	a9 a7       	std	Y+41, r26	; 0x29
    1fb0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fb2:	6f a1       	ldd	r22, Y+39	; 0x27
    1fb4:	78 a5       	ldd	r23, Y+40	; 0x28
    1fb6:	89 a5       	ldd	r24, Y+41	; 0x29
    1fb8:	9a a5       	ldd	r25, Y+42	; 0x2a
    1fba:	20 e0       	ldi	r18, 0x00	; 0
    1fbc:	30 e0       	ldi	r19, 0x00	; 0
    1fbe:	4a e7       	ldi	r20, 0x7A	; 122
    1fc0:	55 e4       	ldi	r21, 0x45	; 69
    1fc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fc6:	dc 01       	movw	r26, r24
    1fc8:	cb 01       	movw	r24, r22
    1fca:	8b a3       	std	Y+35, r24	; 0x23
    1fcc:	9c a3       	std	Y+36, r25	; 0x24
    1fce:	ad a3       	std	Y+37, r26	; 0x25
    1fd0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1fd2:	6b a1       	ldd	r22, Y+35	; 0x23
    1fd4:	7c a1       	ldd	r23, Y+36	; 0x24
    1fd6:	8d a1       	ldd	r24, Y+37	; 0x25
    1fd8:	9e a1       	ldd	r25, Y+38	; 0x26
    1fda:	20 e0       	ldi	r18, 0x00	; 0
    1fdc:	30 e0       	ldi	r19, 0x00	; 0
    1fde:	40 e8       	ldi	r20, 0x80	; 128
    1fe0:	5f e3       	ldi	r21, 0x3F	; 63
    1fe2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fe6:	88 23       	and	r24, r24
    1fe8:	2c f4       	brge	.+10     	; 0x1ff4 <H_Buzzer_Void_BuzzerTwice+0x6a>
		__ticks = 1;
    1fea:	81 e0       	ldi	r24, 0x01	; 1
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	9a a3       	std	Y+34, r25	; 0x22
    1ff0:	89 a3       	std	Y+33, r24	; 0x21
    1ff2:	3f c0       	rjmp	.+126    	; 0x2072 <H_Buzzer_Void_BuzzerTwice+0xe8>
	else if (__tmp > 65535)
    1ff4:	6b a1       	ldd	r22, Y+35	; 0x23
    1ff6:	7c a1       	ldd	r23, Y+36	; 0x24
    1ff8:	8d a1       	ldd	r24, Y+37	; 0x25
    1ffa:	9e a1       	ldd	r25, Y+38	; 0x26
    1ffc:	20 e0       	ldi	r18, 0x00	; 0
    1ffe:	3f ef       	ldi	r19, 0xFF	; 255
    2000:	4f e7       	ldi	r20, 0x7F	; 127
    2002:	57 e4       	ldi	r21, 0x47	; 71
    2004:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2008:	18 16       	cp	r1, r24
    200a:	4c f5       	brge	.+82     	; 0x205e <H_Buzzer_Void_BuzzerTwice+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    200c:	6f a1       	ldd	r22, Y+39	; 0x27
    200e:	78 a5       	ldd	r23, Y+40	; 0x28
    2010:	89 a5       	ldd	r24, Y+41	; 0x29
    2012:	9a a5       	ldd	r25, Y+42	; 0x2a
    2014:	20 e0       	ldi	r18, 0x00	; 0
    2016:	30 e0       	ldi	r19, 0x00	; 0
    2018:	40 e2       	ldi	r20, 0x20	; 32
    201a:	51 e4       	ldi	r21, 0x41	; 65
    201c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2020:	dc 01       	movw	r26, r24
    2022:	cb 01       	movw	r24, r22
    2024:	bc 01       	movw	r22, r24
    2026:	cd 01       	movw	r24, r26
    2028:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    202c:	dc 01       	movw	r26, r24
    202e:	cb 01       	movw	r24, r22
    2030:	9a a3       	std	Y+34, r25	; 0x22
    2032:	89 a3       	std	Y+33, r24	; 0x21
    2034:	0f c0       	rjmp	.+30     	; 0x2054 <H_Buzzer_Void_BuzzerTwice+0xca>
    2036:	80 e9       	ldi	r24, 0x90	; 144
    2038:	91 e0       	ldi	r25, 0x01	; 1
    203a:	98 a3       	std	Y+32, r25	; 0x20
    203c:	8f 8f       	std	Y+31, r24	; 0x1f
    203e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2040:	98 a1       	ldd	r25, Y+32	; 0x20
    2042:	01 97       	sbiw	r24, 0x01	; 1
    2044:	f1 f7       	brne	.-4      	; 0x2042 <H_Buzzer_Void_BuzzerTwice+0xb8>
    2046:	98 a3       	std	Y+32, r25	; 0x20
    2048:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    204a:	89 a1       	ldd	r24, Y+33	; 0x21
    204c:	9a a1       	ldd	r25, Y+34	; 0x22
    204e:	01 97       	sbiw	r24, 0x01	; 1
    2050:	9a a3       	std	Y+34, r25	; 0x22
    2052:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2054:	89 a1       	ldd	r24, Y+33	; 0x21
    2056:	9a a1       	ldd	r25, Y+34	; 0x22
    2058:	00 97       	sbiw	r24, 0x00	; 0
    205a:	69 f7       	brne	.-38     	; 0x2036 <H_Buzzer_Void_BuzzerTwice+0xac>
    205c:	14 c0       	rjmp	.+40     	; 0x2086 <H_Buzzer_Void_BuzzerTwice+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    205e:	6b a1       	ldd	r22, Y+35	; 0x23
    2060:	7c a1       	ldd	r23, Y+36	; 0x24
    2062:	8d a1       	ldd	r24, Y+37	; 0x25
    2064:	9e a1       	ldd	r25, Y+38	; 0x26
    2066:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    206a:	dc 01       	movw	r26, r24
    206c:	cb 01       	movw	r24, r22
    206e:	9a a3       	std	Y+34, r25	; 0x22
    2070:	89 a3       	std	Y+33, r24	; 0x21
    2072:	89 a1       	ldd	r24, Y+33	; 0x21
    2074:	9a a1       	ldd	r25, Y+34	; 0x22
    2076:	9e 8f       	std	Y+30, r25	; 0x1e
    2078:	8d 8f       	std	Y+29, r24	; 0x1d
    207a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    207c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    207e:	01 97       	sbiw	r24, 0x01	; 1
    2080:	f1 f7       	brne	.-4      	; 0x207e <H_Buzzer_Void_BuzzerTwice+0xf4>
    2082:	9e 8f       	std	Y+30, r25	; 0x1e
    2084:	8d 8f       	std	Y+29, r24	; 0x1d
	 _delay_ms(BUZZER_ONDELAY_TIME);
	 H_Buzzer_Void_BuzzerOff();
    2086:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <H_Buzzer_Void_BuzzerOff>
    208a:	80 e0       	ldi	r24, 0x00	; 0
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	aa e7       	ldi	r26, 0x7A	; 122
    2090:	b3 e4       	ldi	r27, 0x43	; 67
    2092:	89 8f       	std	Y+25, r24	; 0x19
    2094:	9a 8f       	std	Y+26, r25	; 0x1a
    2096:	ab 8f       	std	Y+27, r26	; 0x1b
    2098:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    209a:	69 8d       	ldd	r22, Y+25	; 0x19
    209c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    209e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	30 e0       	ldi	r19, 0x00	; 0
    20a6:	4a e7       	ldi	r20, 0x7A	; 122
    20a8:	55 e4       	ldi	r21, 0x45	; 69
    20aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ae:	dc 01       	movw	r26, r24
    20b0:	cb 01       	movw	r24, r22
    20b2:	8d 8b       	std	Y+21, r24	; 0x15
    20b4:	9e 8b       	std	Y+22, r25	; 0x16
    20b6:	af 8b       	std	Y+23, r26	; 0x17
    20b8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    20ba:	6d 89       	ldd	r22, Y+21	; 0x15
    20bc:	7e 89       	ldd	r23, Y+22	; 0x16
    20be:	8f 89       	ldd	r24, Y+23	; 0x17
    20c0:	98 8d       	ldd	r25, Y+24	; 0x18
    20c2:	20 e0       	ldi	r18, 0x00	; 0
    20c4:	30 e0       	ldi	r19, 0x00	; 0
    20c6:	40 e8       	ldi	r20, 0x80	; 128
    20c8:	5f e3       	ldi	r21, 0x3F	; 63
    20ca:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20ce:	88 23       	and	r24, r24
    20d0:	2c f4       	brge	.+10     	; 0x20dc <H_Buzzer_Void_BuzzerTwice+0x152>
		__ticks = 1;
    20d2:	81 e0       	ldi	r24, 0x01	; 1
    20d4:	90 e0       	ldi	r25, 0x00	; 0
    20d6:	9c 8b       	std	Y+20, r25	; 0x14
    20d8:	8b 8b       	std	Y+19, r24	; 0x13
    20da:	3f c0       	rjmp	.+126    	; 0x215a <H_Buzzer_Void_BuzzerTwice+0x1d0>
	else if (__tmp > 65535)
    20dc:	6d 89       	ldd	r22, Y+21	; 0x15
    20de:	7e 89       	ldd	r23, Y+22	; 0x16
    20e0:	8f 89       	ldd	r24, Y+23	; 0x17
    20e2:	98 8d       	ldd	r25, Y+24	; 0x18
    20e4:	20 e0       	ldi	r18, 0x00	; 0
    20e6:	3f ef       	ldi	r19, 0xFF	; 255
    20e8:	4f e7       	ldi	r20, 0x7F	; 127
    20ea:	57 e4       	ldi	r21, 0x47	; 71
    20ec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20f0:	18 16       	cp	r1, r24
    20f2:	4c f5       	brge	.+82     	; 0x2146 <H_Buzzer_Void_BuzzerTwice+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20f4:	69 8d       	ldd	r22, Y+25	; 0x19
    20f6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    20f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	40 e2       	ldi	r20, 0x20	; 32
    2102:	51 e4       	ldi	r21, 0x41	; 65
    2104:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2108:	dc 01       	movw	r26, r24
    210a:	cb 01       	movw	r24, r22
    210c:	bc 01       	movw	r22, r24
    210e:	cd 01       	movw	r24, r26
    2110:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2114:	dc 01       	movw	r26, r24
    2116:	cb 01       	movw	r24, r22
    2118:	9c 8b       	std	Y+20, r25	; 0x14
    211a:	8b 8b       	std	Y+19, r24	; 0x13
    211c:	0f c0       	rjmp	.+30     	; 0x213c <H_Buzzer_Void_BuzzerTwice+0x1b2>
    211e:	80 e9       	ldi	r24, 0x90	; 144
    2120:	91 e0       	ldi	r25, 0x01	; 1
    2122:	9a 8b       	std	Y+18, r25	; 0x12
    2124:	89 8b       	std	Y+17, r24	; 0x11
    2126:	89 89       	ldd	r24, Y+17	; 0x11
    2128:	9a 89       	ldd	r25, Y+18	; 0x12
    212a:	01 97       	sbiw	r24, 0x01	; 1
    212c:	f1 f7       	brne	.-4      	; 0x212a <H_Buzzer_Void_BuzzerTwice+0x1a0>
    212e:	9a 8b       	std	Y+18, r25	; 0x12
    2130:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2132:	8b 89       	ldd	r24, Y+19	; 0x13
    2134:	9c 89       	ldd	r25, Y+20	; 0x14
    2136:	01 97       	sbiw	r24, 0x01	; 1
    2138:	9c 8b       	std	Y+20, r25	; 0x14
    213a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    213c:	8b 89       	ldd	r24, Y+19	; 0x13
    213e:	9c 89       	ldd	r25, Y+20	; 0x14
    2140:	00 97       	sbiw	r24, 0x00	; 0
    2142:	69 f7       	brne	.-38     	; 0x211e <H_Buzzer_Void_BuzzerTwice+0x194>
    2144:	14 c0       	rjmp	.+40     	; 0x216e <H_Buzzer_Void_BuzzerTwice+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2146:	6d 89       	ldd	r22, Y+21	; 0x15
    2148:	7e 89       	ldd	r23, Y+22	; 0x16
    214a:	8f 89       	ldd	r24, Y+23	; 0x17
    214c:	98 8d       	ldd	r25, Y+24	; 0x18
    214e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2152:	dc 01       	movw	r26, r24
    2154:	cb 01       	movw	r24, r22
    2156:	9c 8b       	std	Y+20, r25	; 0x14
    2158:	8b 8b       	std	Y+19, r24	; 0x13
    215a:	8b 89       	ldd	r24, Y+19	; 0x13
    215c:	9c 89       	ldd	r25, Y+20	; 0x14
    215e:	98 8b       	std	Y+16, r25	; 0x10
    2160:	8f 87       	std	Y+15, r24	; 0x0f
    2162:	8f 85       	ldd	r24, Y+15	; 0x0f
    2164:	98 89       	ldd	r25, Y+16	; 0x10
    2166:	01 97       	sbiw	r24, 0x01	; 1
    2168:	f1 f7       	brne	.-4      	; 0x2166 <H_Buzzer_Void_BuzzerTwice+0x1dc>
    216a:	98 8b       	std	Y+16, r25	; 0x10
    216c:	8f 87       	std	Y+15, r24	; 0x0f
	 _delay_ms(BUZZER_OFFDELAY_TIME);
	 H_Buzzer_Void_BuzzerOn();
    216e:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <H_Buzzer_Void_BuzzerOn>
    2172:	80 e0       	ldi	r24, 0x00	; 0
    2174:	90 e0       	ldi	r25, 0x00	; 0
    2176:	aa ef       	ldi	r26, 0xFA	; 250
    2178:	b3 e4       	ldi	r27, 0x43	; 67
    217a:	8b 87       	std	Y+11, r24	; 0x0b
    217c:	9c 87       	std	Y+12, r25	; 0x0c
    217e:	ad 87       	std	Y+13, r26	; 0x0d
    2180:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2182:	6b 85       	ldd	r22, Y+11	; 0x0b
    2184:	7c 85       	ldd	r23, Y+12	; 0x0c
    2186:	8d 85       	ldd	r24, Y+13	; 0x0d
    2188:	9e 85       	ldd	r25, Y+14	; 0x0e
    218a:	20 e0       	ldi	r18, 0x00	; 0
    218c:	30 e0       	ldi	r19, 0x00	; 0
    218e:	4a e7       	ldi	r20, 0x7A	; 122
    2190:	55 e4       	ldi	r21, 0x45	; 69
    2192:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2196:	dc 01       	movw	r26, r24
    2198:	cb 01       	movw	r24, r22
    219a:	8f 83       	std	Y+7, r24	; 0x07
    219c:	98 87       	std	Y+8, r25	; 0x08
    219e:	a9 87       	std	Y+9, r26	; 0x09
    21a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    21a2:	6f 81       	ldd	r22, Y+7	; 0x07
    21a4:	78 85       	ldd	r23, Y+8	; 0x08
    21a6:	89 85       	ldd	r24, Y+9	; 0x09
    21a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	30 e0       	ldi	r19, 0x00	; 0
    21ae:	40 e8       	ldi	r20, 0x80	; 128
    21b0:	5f e3       	ldi	r21, 0x3F	; 63
    21b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21b6:	88 23       	and	r24, r24
    21b8:	2c f4       	brge	.+10     	; 0x21c4 <H_Buzzer_Void_BuzzerTwice+0x23a>
		__ticks = 1;
    21ba:	81 e0       	ldi	r24, 0x01	; 1
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	9e 83       	std	Y+6, r25	; 0x06
    21c0:	8d 83       	std	Y+5, r24	; 0x05
    21c2:	3f c0       	rjmp	.+126    	; 0x2242 <H_Buzzer_Void_BuzzerTwice+0x2b8>
	else if (__tmp > 65535)
    21c4:	6f 81       	ldd	r22, Y+7	; 0x07
    21c6:	78 85       	ldd	r23, Y+8	; 0x08
    21c8:	89 85       	ldd	r24, Y+9	; 0x09
    21ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    21cc:	20 e0       	ldi	r18, 0x00	; 0
    21ce:	3f ef       	ldi	r19, 0xFF	; 255
    21d0:	4f e7       	ldi	r20, 0x7F	; 127
    21d2:	57 e4       	ldi	r21, 0x47	; 71
    21d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21d8:	18 16       	cp	r1, r24
    21da:	4c f5       	brge	.+82     	; 0x222e <H_Buzzer_Void_BuzzerTwice+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    21de:	7c 85       	ldd	r23, Y+12	; 0x0c
    21e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    21e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    21e4:	20 e0       	ldi	r18, 0x00	; 0
    21e6:	30 e0       	ldi	r19, 0x00	; 0
    21e8:	40 e2       	ldi	r20, 0x20	; 32
    21ea:	51 e4       	ldi	r21, 0x41	; 65
    21ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21f0:	dc 01       	movw	r26, r24
    21f2:	cb 01       	movw	r24, r22
    21f4:	bc 01       	movw	r22, r24
    21f6:	cd 01       	movw	r24, r26
    21f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21fc:	dc 01       	movw	r26, r24
    21fe:	cb 01       	movw	r24, r22
    2200:	9e 83       	std	Y+6, r25	; 0x06
    2202:	8d 83       	std	Y+5, r24	; 0x05
    2204:	0f c0       	rjmp	.+30     	; 0x2224 <H_Buzzer_Void_BuzzerTwice+0x29a>
    2206:	80 e9       	ldi	r24, 0x90	; 144
    2208:	91 e0       	ldi	r25, 0x01	; 1
    220a:	9c 83       	std	Y+4, r25	; 0x04
    220c:	8b 83       	std	Y+3, r24	; 0x03
    220e:	8b 81       	ldd	r24, Y+3	; 0x03
    2210:	9c 81       	ldd	r25, Y+4	; 0x04
    2212:	01 97       	sbiw	r24, 0x01	; 1
    2214:	f1 f7       	brne	.-4      	; 0x2212 <H_Buzzer_Void_BuzzerTwice+0x288>
    2216:	9c 83       	std	Y+4, r25	; 0x04
    2218:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    221a:	8d 81       	ldd	r24, Y+5	; 0x05
    221c:	9e 81       	ldd	r25, Y+6	; 0x06
    221e:	01 97       	sbiw	r24, 0x01	; 1
    2220:	9e 83       	std	Y+6, r25	; 0x06
    2222:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2224:	8d 81       	ldd	r24, Y+5	; 0x05
    2226:	9e 81       	ldd	r25, Y+6	; 0x06
    2228:	00 97       	sbiw	r24, 0x00	; 0
    222a:	69 f7       	brne	.-38     	; 0x2206 <H_Buzzer_Void_BuzzerTwice+0x27c>
    222c:	14 c0       	rjmp	.+40     	; 0x2256 <H_Buzzer_Void_BuzzerTwice+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    222e:	6f 81       	ldd	r22, Y+7	; 0x07
    2230:	78 85       	ldd	r23, Y+8	; 0x08
    2232:	89 85       	ldd	r24, Y+9	; 0x09
    2234:	9a 85       	ldd	r25, Y+10	; 0x0a
    2236:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    223a:	dc 01       	movw	r26, r24
    223c:	cb 01       	movw	r24, r22
    223e:	9e 83       	std	Y+6, r25	; 0x06
    2240:	8d 83       	std	Y+5, r24	; 0x05
    2242:	8d 81       	ldd	r24, Y+5	; 0x05
    2244:	9e 81       	ldd	r25, Y+6	; 0x06
    2246:	9a 83       	std	Y+2, r25	; 0x02
    2248:	89 83       	std	Y+1, r24	; 0x01
    224a:	89 81       	ldd	r24, Y+1	; 0x01
    224c:	9a 81       	ldd	r25, Y+2	; 0x02
    224e:	01 97       	sbiw	r24, 0x01	; 1
    2250:	f1 f7       	brne	.-4      	; 0x224e <H_Buzzer_Void_BuzzerTwice+0x2c4>
    2252:	9a 83       	std	Y+2, r25	; 0x02
    2254:	89 83       	std	Y+1, r24	; 0x01
	 _delay_ms(BUZZER_ONDELAY_TIME);
	 H_Buzzer_Void_BuzzerOff();
    2256:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <H_Buzzer_Void_BuzzerOff>
 }
    225a:	aa 96       	adiw	r28, 0x2a	; 42
    225c:	0f b6       	in	r0, 0x3f	; 63
    225e:	f8 94       	cli
    2260:	de bf       	out	0x3e, r29	; 62
    2262:	0f be       	out	0x3f, r0	; 63
    2264:	cd bf       	out	0x3d, r28	; 61
    2266:	cf 91       	pop	r28
    2268:	df 91       	pop	r29
    226a:	08 95       	ret

0000226c <H_Buzzer_Void_BuzzerTriple>:
 void H_Buzzer_Void_BuzzerTriple(void)
 {
    226c:	0f 93       	push	r16
    226e:	1f 93       	push	r17
    2270:	df 93       	push	r29
    2272:	cf 93       	push	r28
    2274:	cd b7       	in	r28, 0x3d	; 61
    2276:	de b7       	in	r29, 0x3e	; 62
    2278:	c6 54       	subi	r28, 0x46	; 70
    227a:	d0 40       	sbci	r29, 0x00	; 0
    227c:	0f b6       	in	r0, 0x3f	; 63
    227e:	f8 94       	cli
    2280:	de bf       	out	0x3e, r29	; 62
    2282:	0f be       	out	0x3f, r0	; 63
    2284:	cd bf       	out	0x3d, r28	; 61
	 H_Buzzer_Void_BuzzerOn();
    2286:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <H_Buzzer_Void_BuzzerOn>
    228a:	fe 01       	movw	r30, r28
    228c:	ed 5b       	subi	r30, 0xBD	; 189
    228e:	ff 4f       	sbci	r31, 0xFF	; 255
    2290:	80 e0       	ldi	r24, 0x00	; 0
    2292:	90 e0       	ldi	r25, 0x00	; 0
    2294:	aa ef       	ldi	r26, 0xFA	; 250
    2296:	b3 e4       	ldi	r27, 0x43	; 67
    2298:	80 83       	st	Z, r24
    229a:	91 83       	std	Z+1, r25	; 0x01
    229c:	a2 83       	std	Z+2, r26	; 0x02
    229e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22a0:	8e 01       	movw	r16, r28
    22a2:	01 5c       	subi	r16, 0xC1	; 193
    22a4:	1f 4f       	sbci	r17, 0xFF	; 255
    22a6:	fe 01       	movw	r30, r28
    22a8:	ed 5b       	subi	r30, 0xBD	; 189
    22aa:	ff 4f       	sbci	r31, 0xFF	; 255
    22ac:	60 81       	ld	r22, Z
    22ae:	71 81       	ldd	r23, Z+1	; 0x01
    22b0:	82 81       	ldd	r24, Z+2	; 0x02
    22b2:	93 81       	ldd	r25, Z+3	; 0x03
    22b4:	20 e0       	ldi	r18, 0x00	; 0
    22b6:	30 e0       	ldi	r19, 0x00	; 0
    22b8:	4a e7       	ldi	r20, 0x7A	; 122
    22ba:	55 e4       	ldi	r21, 0x45	; 69
    22bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22c0:	dc 01       	movw	r26, r24
    22c2:	cb 01       	movw	r24, r22
    22c4:	f8 01       	movw	r30, r16
    22c6:	80 83       	st	Z, r24
    22c8:	91 83       	std	Z+1, r25	; 0x01
    22ca:	a2 83       	std	Z+2, r26	; 0x02
    22cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22ce:	fe 01       	movw	r30, r28
    22d0:	ff 96       	adiw	r30, 0x3f	; 63
    22d2:	60 81       	ld	r22, Z
    22d4:	71 81       	ldd	r23, Z+1	; 0x01
    22d6:	82 81       	ldd	r24, Z+2	; 0x02
    22d8:	93 81       	ldd	r25, Z+3	; 0x03
    22da:	20 e0       	ldi	r18, 0x00	; 0
    22dc:	30 e0       	ldi	r19, 0x00	; 0
    22de:	40 e8       	ldi	r20, 0x80	; 128
    22e0:	5f e3       	ldi	r21, 0x3F	; 63
    22e2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22e6:	88 23       	and	r24, r24
    22e8:	2c f4       	brge	.+10     	; 0x22f4 <H_Buzzer_Void_BuzzerTriple+0x88>
		__ticks = 1;
    22ea:	81 e0       	ldi	r24, 0x01	; 1
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	9e af       	std	Y+62, r25	; 0x3e
    22f0:	8d af       	std	Y+61, r24	; 0x3d
    22f2:	46 c0       	rjmp	.+140    	; 0x2380 <H_Buzzer_Void_BuzzerTriple+0x114>
	else if (__tmp > 65535)
    22f4:	fe 01       	movw	r30, r28
    22f6:	ff 96       	adiw	r30, 0x3f	; 63
    22f8:	60 81       	ld	r22, Z
    22fa:	71 81       	ldd	r23, Z+1	; 0x01
    22fc:	82 81       	ldd	r24, Z+2	; 0x02
    22fe:	93 81       	ldd	r25, Z+3	; 0x03
    2300:	20 e0       	ldi	r18, 0x00	; 0
    2302:	3f ef       	ldi	r19, 0xFF	; 255
    2304:	4f e7       	ldi	r20, 0x7F	; 127
    2306:	57 e4       	ldi	r21, 0x47	; 71
    2308:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    230c:	18 16       	cp	r1, r24
    230e:	64 f5       	brge	.+88     	; 0x2368 <H_Buzzer_Void_BuzzerTriple+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2310:	fe 01       	movw	r30, r28
    2312:	ed 5b       	subi	r30, 0xBD	; 189
    2314:	ff 4f       	sbci	r31, 0xFF	; 255
    2316:	60 81       	ld	r22, Z
    2318:	71 81       	ldd	r23, Z+1	; 0x01
    231a:	82 81       	ldd	r24, Z+2	; 0x02
    231c:	93 81       	ldd	r25, Z+3	; 0x03
    231e:	20 e0       	ldi	r18, 0x00	; 0
    2320:	30 e0       	ldi	r19, 0x00	; 0
    2322:	40 e2       	ldi	r20, 0x20	; 32
    2324:	51 e4       	ldi	r21, 0x41	; 65
    2326:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    232a:	dc 01       	movw	r26, r24
    232c:	cb 01       	movw	r24, r22
    232e:	bc 01       	movw	r22, r24
    2330:	cd 01       	movw	r24, r26
    2332:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2336:	dc 01       	movw	r26, r24
    2338:	cb 01       	movw	r24, r22
    233a:	9e af       	std	Y+62, r25	; 0x3e
    233c:	8d af       	std	Y+61, r24	; 0x3d
    233e:	0f c0       	rjmp	.+30     	; 0x235e <H_Buzzer_Void_BuzzerTriple+0xf2>
    2340:	80 e9       	ldi	r24, 0x90	; 144
    2342:	91 e0       	ldi	r25, 0x01	; 1
    2344:	9c af       	std	Y+60, r25	; 0x3c
    2346:	8b af       	std	Y+59, r24	; 0x3b
    2348:	8b ad       	ldd	r24, Y+59	; 0x3b
    234a:	9c ad       	ldd	r25, Y+60	; 0x3c
    234c:	01 97       	sbiw	r24, 0x01	; 1
    234e:	f1 f7       	brne	.-4      	; 0x234c <H_Buzzer_Void_BuzzerTriple+0xe0>
    2350:	9c af       	std	Y+60, r25	; 0x3c
    2352:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2354:	8d ad       	ldd	r24, Y+61	; 0x3d
    2356:	9e ad       	ldd	r25, Y+62	; 0x3e
    2358:	01 97       	sbiw	r24, 0x01	; 1
    235a:	9e af       	std	Y+62, r25	; 0x3e
    235c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    235e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2360:	9e ad       	ldd	r25, Y+62	; 0x3e
    2362:	00 97       	sbiw	r24, 0x00	; 0
    2364:	69 f7       	brne	.-38     	; 0x2340 <H_Buzzer_Void_BuzzerTriple+0xd4>
    2366:	16 c0       	rjmp	.+44     	; 0x2394 <H_Buzzer_Void_BuzzerTriple+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2368:	fe 01       	movw	r30, r28
    236a:	ff 96       	adiw	r30, 0x3f	; 63
    236c:	60 81       	ld	r22, Z
    236e:	71 81       	ldd	r23, Z+1	; 0x01
    2370:	82 81       	ldd	r24, Z+2	; 0x02
    2372:	93 81       	ldd	r25, Z+3	; 0x03
    2374:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2378:	dc 01       	movw	r26, r24
    237a:	cb 01       	movw	r24, r22
    237c:	9e af       	std	Y+62, r25	; 0x3e
    237e:	8d af       	std	Y+61, r24	; 0x3d
    2380:	8d ad       	ldd	r24, Y+61	; 0x3d
    2382:	9e ad       	ldd	r25, Y+62	; 0x3e
    2384:	9a af       	std	Y+58, r25	; 0x3a
    2386:	89 af       	std	Y+57, r24	; 0x39
    2388:	89 ad       	ldd	r24, Y+57	; 0x39
    238a:	9a ad       	ldd	r25, Y+58	; 0x3a
    238c:	01 97       	sbiw	r24, 0x01	; 1
    238e:	f1 f7       	brne	.-4      	; 0x238c <H_Buzzer_Void_BuzzerTriple+0x120>
    2390:	9a af       	std	Y+58, r25	; 0x3a
    2392:	89 af       	std	Y+57, r24	; 0x39
	 _delay_ms(BUZZER_ONDELAY_TIME);
	 H_Buzzer_Void_BuzzerOff();
    2394:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <H_Buzzer_Void_BuzzerOff>
    2398:	80 e0       	ldi	r24, 0x00	; 0
    239a:	90 e0       	ldi	r25, 0x00	; 0
    239c:	aa e7       	ldi	r26, 0x7A	; 122
    239e:	b3 e4       	ldi	r27, 0x43	; 67
    23a0:	8d ab       	std	Y+53, r24	; 0x35
    23a2:	9e ab       	std	Y+54, r25	; 0x36
    23a4:	af ab       	std	Y+55, r26	; 0x37
    23a6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23a8:	6d a9       	ldd	r22, Y+53	; 0x35
    23aa:	7e a9       	ldd	r23, Y+54	; 0x36
    23ac:	8f a9       	ldd	r24, Y+55	; 0x37
    23ae:	98 ad       	ldd	r25, Y+56	; 0x38
    23b0:	20 e0       	ldi	r18, 0x00	; 0
    23b2:	30 e0       	ldi	r19, 0x00	; 0
    23b4:	4a e7       	ldi	r20, 0x7A	; 122
    23b6:	55 e4       	ldi	r21, 0x45	; 69
    23b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23bc:	dc 01       	movw	r26, r24
    23be:	cb 01       	movw	r24, r22
    23c0:	89 ab       	std	Y+49, r24	; 0x31
    23c2:	9a ab       	std	Y+50, r25	; 0x32
    23c4:	ab ab       	std	Y+51, r26	; 0x33
    23c6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    23c8:	69 a9       	ldd	r22, Y+49	; 0x31
    23ca:	7a a9       	ldd	r23, Y+50	; 0x32
    23cc:	8b a9       	ldd	r24, Y+51	; 0x33
    23ce:	9c a9       	ldd	r25, Y+52	; 0x34
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	30 e0       	ldi	r19, 0x00	; 0
    23d4:	40 e8       	ldi	r20, 0x80	; 128
    23d6:	5f e3       	ldi	r21, 0x3F	; 63
    23d8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23dc:	88 23       	and	r24, r24
    23de:	2c f4       	brge	.+10     	; 0x23ea <H_Buzzer_Void_BuzzerTriple+0x17e>
		__ticks = 1;
    23e0:	81 e0       	ldi	r24, 0x01	; 1
    23e2:	90 e0       	ldi	r25, 0x00	; 0
    23e4:	98 ab       	std	Y+48, r25	; 0x30
    23e6:	8f a7       	std	Y+47, r24	; 0x2f
    23e8:	3f c0       	rjmp	.+126    	; 0x2468 <H_Buzzer_Void_BuzzerTriple+0x1fc>
	else if (__tmp > 65535)
    23ea:	69 a9       	ldd	r22, Y+49	; 0x31
    23ec:	7a a9       	ldd	r23, Y+50	; 0x32
    23ee:	8b a9       	ldd	r24, Y+51	; 0x33
    23f0:	9c a9       	ldd	r25, Y+52	; 0x34
    23f2:	20 e0       	ldi	r18, 0x00	; 0
    23f4:	3f ef       	ldi	r19, 0xFF	; 255
    23f6:	4f e7       	ldi	r20, 0x7F	; 127
    23f8:	57 e4       	ldi	r21, 0x47	; 71
    23fa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23fe:	18 16       	cp	r1, r24
    2400:	4c f5       	brge	.+82     	; 0x2454 <H_Buzzer_Void_BuzzerTriple+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2402:	6d a9       	ldd	r22, Y+53	; 0x35
    2404:	7e a9       	ldd	r23, Y+54	; 0x36
    2406:	8f a9       	ldd	r24, Y+55	; 0x37
    2408:	98 ad       	ldd	r25, Y+56	; 0x38
    240a:	20 e0       	ldi	r18, 0x00	; 0
    240c:	30 e0       	ldi	r19, 0x00	; 0
    240e:	40 e2       	ldi	r20, 0x20	; 32
    2410:	51 e4       	ldi	r21, 0x41	; 65
    2412:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2416:	dc 01       	movw	r26, r24
    2418:	cb 01       	movw	r24, r22
    241a:	bc 01       	movw	r22, r24
    241c:	cd 01       	movw	r24, r26
    241e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2422:	dc 01       	movw	r26, r24
    2424:	cb 01       	movw	r24, r22
    2426:	98 ab       	std	Y+48, r25	; 0x30
    2428:	8f a7       	std	Y+47, r24	; 0x2f
    242a:	0f c0       	rjmp	.+30     	; 0x244a <H_Buzzer_Void_BuzzerTriple+0x1de>
    242c:	80 e9       	ldi	r24, 0x90	; 144
    242e:	91 e0       	ldi	r25, 0x01	; 1
    2430:	9e a7       	std	Y+46, r25	; 0x2e
    2432:	8d a7       	std	Y+45, r24	; 0x2d
    2434:	8d a5       	ldd	r24, Y+45	; 0x2d
    2436:	9e a5       	ldd	r25, Y+46	; 0x2e
    2438:	01 97       	sbiw	r24, 0x01	; 1
    243a:	f1 f7       	brne	.-4      	; 0x2438 <H_Buzzer_Void_BuzzerTriple+0x1cc>
    243c:	9e a7       	std	Y+46, r25	; 0x2e
    243e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2440:	8f a5       	ldd	r24, Y+47	; 0x2f
    2442:	98 a9       	ldd	r25, Y+48	; 0x30
    2444:	01 97       	sbiw	r24, 0x01	; 1
    2446:	98 ab       	std	Y+48, r25	; 0x30
    2448:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    244a:	8f a5       	ldd	r24, Y+47	; 0x2f
    244c:	98 a9       	ldd	r25, Y+48	; 0x30
    244e:	00 97       	sbiw	r24, 0x00	; 0
    2450:	69 f7       	brne	.-38     	; 0x242c <H_Buzzer_Void_BuzzerTriple+0x1c0>
    2452:	14 c0       	rjmp	.+40     	; 0x247c <H_Buzzer_Void_BuzzerTriple+0x210>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2454:	69 a9       	ldd	r22, Y+49	; 0x31
    2456:	7a a9       	ldd	r23, Y+50	; 0x32
    2458:	8b a9       	ldd	r24, Y+51	; 0x33
    245a:	9c a9       	ldd	r25, Y+52	; 0x34
    245c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2460:	dc 01       	movw	r26, r24
    2462:	cb 01       	movw	r24, r22
    2464:	98 ab       	std	Y+48, r25	; 0x30
    2466:	8f a7       	std	Y+47, r24	; 0x2f
    2468:	8f a5       	ldd	r24, Y+47	; 0x2f
    246a:	98 a9       	ldd	r25, Y+48	; 0x30
    246c:	9c a7       	std	Y+44, r25	; 0x2c
    246e:	8b a7       	std	Y+43, r24	; 0x2b
    2470:	8b a5       	ldd	r24, Y+43	; 0x2b
    2472:	9c a5       	ldd	r25, Y+44	; 0x2c
    2474:	01 97       	sbiw	r24, 0x01	; 1
    2476:	f1 f7       	brne	.-4      	; 0x2474 <H_Buzzer_Void_BuzzerTriple+0x208>
    2478:	9c a7       	std	Y+44, r25	; 0x2c
    247a:	8b a7       	std	Y+43, r24	; 0x2b
	 _delay_ms(BUZZER_OFFDELAY_TIME);
	 H_Buzzer_Void_BuzzerOn();
    247c:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <H_Buzzer_Void_BuzzerOn>
    2480:	80 e0       	ldi	r24, 0x00	; 0
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	aa ef       	ldi	r26, 0xFA	; 250
    2486:	b3 e4       	ldi	r27, 0x43	; 67
    2488:	8f a3       	std	Y+39, r24	; 0x27
    248a:	98 a7       	std	Y+40, r25	; 0x28
    248c:	a9 a7       	std	Y+41, r26	; 0x29
    248e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2490:	6f a1       	ldd	r22, Y+39	; 0x27
    2492:	78 a5       	ldd	r23, Y+40	; 0x28
    2494:	89 a5       	ldd	r24, Y+41	; 0x29
    2496:	9a a5       	ldd	r25, Y+42	; 0x2a
    2498:	20 e0       	ldi	r18, 0x00	; 0
    249a:	30 e0       	ldi	r19, 0x00	; 0
    249c:	4a e7       	ldi	r20, 0x7A	; 122
    249e:	55 e4       	ldi	r21, 0x45	; 69
    24a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24a4:	dc 01       	movw	r26, r24
    24a6:	cb 01       	movw	r24, r22
    24a8:	8b a3       	std	Y+35, r24	; 0x23
    24aa:	9c a3       	std	Y+36, r25	; 0x24
    24ac:	ad a3       	std	Y+37, r26	; 0x25
    24ae:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    24b0:	6b a1       	ldd	r22, Y+35	; 0x23
    24b2:	7c a1       	ldd	r23, Y+36	; 0x24
    24b4:	8d a1       	ldd	r24, Y+37	; 0x25
    24b6:	9e a1       	ldd	r25, Y+38	; 0x26
    24b8:	20 e0       	ldi	r18, 0x00	; 0
    24ba:	30 e0       	ldi	r19, 0x00	; 0
    24bc:	40 e8       	ldi	r20, 0x80	; 128
    24be:	5f e3       	ldi	r21, 0x3F	; 63
    24c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24c4:	88 23       	and	r24, r24
    24c6:	2c f4       	brge	.+10     	; 0x24d2 <H_Buzzer_Void_BuzzerTriple+0x266>
		__ticks = 1;
    24c8:	81 e0       	ldi	r24, 0x01	; 1
    24ca:	90 e0       	ldi	r25, 0x00	; 0
    24cc:	9a a3       	std	Y+34, r25	; 0x22
    24ce:	89 a3       	std	Y+33, r24	; 0x21
    24d0:	3f c0       	rjmp	.+126    	; 0x2550 <H_Buzzer_Void_BuzzerTriple+0x2e4>
	else if (__tmp > 65535)
    24d2:	6b a1       	ldd	r22, Y+35	; 0x23
    24d4:	7c a1       	ldd	r23, Y+36	; 0x24
    24d6:	8d a1       	ldd	r24, Y+37	; 0x25
    24d8:	9e a1       	ldd	r25, Y+38	; 0x26
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	3f ef       	ldi	r19, 0xFF	; 255
    24de:	4f e7       	ldi	r20, 0x7F	; 127
    24e0:	57 e4       	ldi	r21, 0x47	; 71
    24e2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24e6:	18 16       	cp	r1, r24
    24e8:	4c f5       	brge	.+82     	; 0x253c <H_Buzzer_Void_BuzzerTriple+0x2d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24ea:	6f a1       	ldd	r22, Y+39	; 0x27
    24ec:	78 a5       	ldd	r23, Y+40	; 0x28
    24ee:	89 a5       	ldd	r24, Y+41	; 0x29
    24f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    24f2:	20 e0       	ldi	r18, 0x00	; 0
    24f4:	30 e0       	ldi	r19, 0x00	; 0
    24f6:	40 e2       	ldi	r20, 0x20	; 32
    24f8:	51 e4       	ldi	r21, 0x41	; 65
    24fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24fe:	dc 01       	movw	r26, r24
    2500:	cb 01       	movw	r24, r22
    2502:	bc 01       	movw	r22, r24
    2504:	cd 01       	movw	r24, r26
    2506:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    250a:	dc 01       	movw	r26, r24
    250c:	cb 01       	movw	r24, r22
    250e:	9a a3       	std	Y+34, r25	; 0x22
    2510:	89 a3       	std	Y+33, r24	; 0x21
    2512:	0f c0       	rjmp	.+30     	; 0x2532 <H_Buzzer_Void_BuzzerTriple+0x2c6>
    2514:	80 e9       	ldi	r24, 0x90	; 144
    2516:	91 e0       	ldi	r25, 0x01	; 1
    2518:	98 a3       	std	Y+32, r25	; 0x20
    251a:	8f 8f       	std	Y+31, r24	; 0x1f
    251c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    251e:	98 a1       	ldd	r25, Y+32	; 0x20
    2520:	01 97       	sbiw	r24, 0x01	; 1
    2522:	f1 f7       	brne	.-4      	; 0x2520 <H_Buzzer_Void_BuzzerTriple+0x2b4>
    2524:	98 a3       	std	Y+32, r25	; 0x20
    2526:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2528:	89 a1       	ldd	r24, Y+33	; 0x21
    252a:	9a a1       	ldd	r25, Y+34	; 0x22
    252c:	01 97       	sbiw	r24, 0x01	; 1
    252e:	9a a3       	std	Y+34, r25	; 0x22
    2530:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2532:	89 a1       	ldd	r24, Y+33	; 0x21
    2534:	9a a1       	ldd	r25, Y+34	; 0x22
    2536:	00 97       	sbiw	r24, 0x00	; 0
    2538:	69 f7       	brne	.-38     	; 0x2514 <H_Buzzer_Void_BuzzerTriple+0x2a8>
    253a:	14 c0       	rjmp	.+40     	; 0x2564 <H_Buzzer_Void_BuzzerTriple+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    253c:	6b a1       	ldd	r22, Y+35	; 0x23
    253e:	7c a1       	ldd	r23, Y+36	; 0x24
    2540:	8d a1       	ldd	r24, Y+37	; 0x25
    2542:	9e a1       	ldd	r25, Y+38	; 0x26
    2544:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2548:	dc 01       	movw	r26, r24
    254a:	cb 01       	movw	r24, r22
    254c:	9a a3       	std	Y+34, r25	; 0x22
    254e:	89 a3       	std	Y+33, r24	; 0x21
    2550:	89 a1       	ldd	r24, Y+33	; 0x21
    2552:	9a a1       	ldd	r25, Y+34	; 0x22
    2554:	9e 8f       	std	Y+30, r25	; 0x1e
    2556:	8d 8f       	std	Y+29, r24	; 0x1d
    2558:	8d 8d       	ldd	r24, Y+29	; 0x1d
    255a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    255c:	01 97       	sbiw	r24, 0x01	; 1
    255e:	f1 f7       	brne	.-4      	; 0x255c <H_Buzzer_Void_BuzzerTriple+0x2f0>
    2560:	9e 8f       	std	Y+30, r25	; 0x1e
    2562:	8d 8f       	std	Y+29, r24	; 0x1d
	 _delay_ms(BUZZER_ONDELAY_TIME);
	 H_Buzzer_Void_BuzzerOff();
    2564:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <H_Buzzer_Void_BuzzerOff>
    2568:	80 e0       	ldi	r24, 0x00	; 0
    256a:	90 e0       	ldi	r25, 0x00	; 0
    256c:	aa e7       	ldi	r26, 0x7A	; 122
    256e:	b3 e4       	ldi	r27, 0x43	; 67
    2570:	89 8f       	std	Y+25, r24	; 0x19
    2572:	9a 8f       	std	Y+26, r25	; 0x1a
    2574:	ab 8f       	std	Y+27, r26	; 0x1b
    2576:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2578:	69 8d       	ldd	r22, Y+25	; 0x19
    257a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    257c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    257e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2580:	20 e0       	ldi	r18, 0x00	; 0
    2582:	30 e0       	ldi	r19, 0x00	; 0
    2584:	4a e7       	ldi	r20, 0x7A	; 122
    2586:	55 e4       	ldi	r21, 0x45	; 69
    2588:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    258c:	dc 01       	movw	r26, r24
    258e:	cb 01       	movw	r24, r22
    2590:	8d 8b       	std	Y+21, r24	; 0x15
    2592:	9e 8b       	std	Y+22, r25	; 0x16
    2594:	af 8b       	std	Y+23, r26	; 0x17
    2596:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2598:	6d 89       	ldd	r22, Y+21	; 0x15
    259a:	7e 89       	ldd	r23, Y+22	; 0x16
    259c:	8f 89       	ldd	r24, Y+23	; 0x17
    259e:	98 8d       	ldd	r25, Y+24	; 0x18
    25a0:	20 e0       	ldi	r18, 0x00	; 0
    25a2:	30 e0       	ldi	r19, 0x00	; 0
    25a4:	40 e8       	ldi	r20, 0x80	; 128
    25a6:	5f e3       	ldi	r21, 0x3F	; 63
    25a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25ac:	88 23       	and	r24, r24
    25ae:	2c f4       	brge	.+10     	; 0x25ba <H_Buzzer_Void_BuzzerTriple+0x34e>
		__ticks = 1;
    25b0:	81 e0       	ldi	r24, 0x01	; 1
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	9c 8b       	std	Y+20, r25	; 0x14
    25b6:	8b 8b       	std	Y+19, r24	; 0x13
    25b8:	3f c0       	rjmp	.+126    	; 0x2638 <H_Buzzer_Void_BuzzerTriple+0x3cc>
	else if (__tmp > 65535)
    25ba:	6d 89       	ldd	r22, Y+21	; 0x15
    25bc:	7e 89       	ldd	r23, Y+22	; 0x16
    25be:	8f 89       	ldd	r24, Y+23	; 0x17
    25c0:	98 8d       	ldd	r25, Y+24	; 0x18
    25c2:	20 e0       	ldi	r18, 0x00	; 0
    25c4:	3f ef       	ldi	r19, 0xFF	; 255
    25c6:	4f e7       	ldi	r20, 0x7F	; 127
    25c8:	57 e4       	ldi	r21, 0x47	; 71
    25ca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25ce:	18 16       	cp	r1, r24
    25d0:	4c f5       	brge	.+82     	; 0x2624 <H_Buzzer_Void_BuzzerTriple+0x3b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25d2:	69 8d       	ldd	r22, Y+25	; 0x19
    25d4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    25d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    25d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    25da:	20 e0       	ldi	r18, 0x00	; 0
    25dc:	30 e0       	ldi	r19, 0x00	; 0
    25de:	40 e2       	ldi	r20, 0x20	; 32
    25e0:	51 e4       	ldi	r21, 0x41	; 65
    25e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25e6:	dc 01       	movw	r26, r24
    25e8:	cb 01       	movw	r24, r22
    25ea:	bc 01       	movw	r22, r24
    25ec:	cd 01       	movw	r24, r26
    25ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f2:	dc 01       	movw	r26, r24
    25f4:	cb 01       	movw	r24, r22
    25f6:	9c 8b       	std	Y+20, r25	; 0x14
    25f8:	8b 8b       	std	Y+19, r24	; 0x13
    25fa:	0f c0       	rjmp	.+30     	; 0x261a <H_Buzzer_Void_BuzzerTriple+0x3ae>
    25fc:	80 e9       	ldi	r24, 0x90	; 144
    25fe:	91 e0       	ldi	r25, 0x01	; 1
    2600:	9a 8b       	std	Y+18, r25	; 0x12
    2602:	89 8b       	std	Y+17, r24	; 0x11
    2604:	89 89       	ldd	r24, Y+17	; 0x11
    2606:	9a 89       	ldd	r25, Y+18	; 0x12
    2608:	01 97       	sbiw	r24, 0x01	; 1
    260a:	f1 f7       	brne	.-4      	; 0x2608 <H_Buzzer_Void_BuzzerTriple+0x39c>
    260c:	9a 8b       	std	Y+18, r25	; 0x12
    260e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2610:	8b 89       	ldd	r24, Y+19	; 0x13
    2612:	9c 89       	ldd	r25, Y+20	; 0x14
    2614:	01 97       	sbiw	r24, 0x01	; 1
    2616:	9c 8b       	std	Y+20, r25	; 0x14
    2618:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    261a:	8b 89       	ldd	r24, Y+19	; 0x13
    261c:	9c 89       	ldd	r25, Y+20	; 0x14
    261e:	00 97       	sbiw	r24, 0x00	; 0
    2620:	69 f7       	brne	.-38     	; 0x25fc <H_Buzzer_Void_BuzzerTriple+0x390>
    2622:	14 c0       	rjmp	.+40     	; 0x264c <H_Buzzer_Void_BuzzerTriple+0x3e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2624:	6d 89       	ldd	r22, Y+21	; 0x15
    2626:	7e 89       	ldd	r23, Y+22	; 0x16
    2628:	8f 89       	ldd	r24, Y+23	; 0x17
    262a:	98 8d       	ldd	r25, Y+24	; 0x18
    262c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2630:	dc 01       	movw	r26, r24
    2632:	cb 01       	movw	r24, r22
    2634:	9c 8b       	std	Y+20, r25	; 0x14
    2636:	8b 8b       	std	Y+19, r24	; 0x13
    2638:	8b 89       	ldd	r24, Y+19	; 0x13
    263a:	9c 89       	ldd	r25, Y+20	; 0x14
    263c:	98 8b       	std	Y+16, r25	; 0x10
    263e:	8f 87       	std	Y+15, r24	; 0x0f
    2640:	8f 85       	ldd	r24, Y+15	; 0x0f
    2642:	98 89       	ldd	r25, Y+16	; 0x10
    2644:	01 97       	sbiw	r24, 0x01	; 1
    2646:	f1 f7       	brne	.-4      	; 0x2644 <H_Buzzer_Void_BuzzerTriple+0x3d8>
    2648:	98 8b       	std	Y+16, r25	; 0x10
    264a:	8f 87       	std	Y+15, r24	; 0x0f
	 _delay_ms(BUZZER_OFFDELAY_TIME);
	 H_Buzzer_Void_BuzzerOn();
    264c:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <H_Buzzer_Void_BuzzerOn>
    2650:	80 e0       	ldi	r24, 0x00	; 0
    2652:	90 e0       	ldi	r25, 0x00	; 0
    2654:	aa ef       	ldi	r26, 0xFA	; 250
    2656:	b3 e4       	ldi	r27, 0x43	; 67
    2658:	8b 87       	std	Y+11, r24	; 0x0b
    265a:	9c 87       	std	Y+12, r25	; 0x0c
    265c:	ad 87       	std	Y+13, r26	; 0x0d
    265e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2660:	6b 85       	ldd	r22, Y+11	; 0x0b
    2662:	7c 85       	ldd	r23, Y+12	; 0x0c
    2664:	8d 85       	ldd	r24, Y+13	; 0x0d
    2666:	9e 85       	ldd	r25, Y+14	; 0x0e
    2668:	20 e0       	ldi	r18, 0x00	; 0
    266a:	30 e0       	ldi	r19, 0x00	; 0
    266c:	4a e7       	ldi	r20, 0x7A	; 122
    266e:	55 e4       	ldi	r21, 0x45	; 69
    2670:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2674:	dc 01       	movw	r26, r24
    2676:	cb 01       	movw	r24, r22
    2678:	8f 83       	std	Y+7, r24	; 0x07
    267a:	98 87       	std	Y+8, r25	; 0x08
    267c:	a9 87       	std	Y+9, r26	; 0x09
    267e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2680:	6f 81       	ldd	r22, Y+7	; 0x07
    2682:	78 85       	ldd	r23, Y+8	; 0x08
    2684:	89 85       	ldd	r24, Y+9	; 0x09
    2686:	9a 85       	ldd	r25, Y+10	; 0x0a
    2688:	20 e0       	ldi	r18, 0x00	; 0
    268a:	30 e0       	ldi	r19, 0x00	; 0
    268c:	40 e8       	ldi	r20, 0x80	; 128
    268e:	5f e3       	ldi	r21, 0x3F	; 63
    2690:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2694:	88 23       	and	r24, r24
    2696:	2c f4       	brge	.+10     	; 0x26a2 <H_Buzzer_Void_BuzzerTriple+0x436>
		__ticks = 1;
    2698:	81 e0       	ldi	r24, 0x01	; 1
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	9e 83       	std	Y+6, r25	; 0x06
    269e:	8d 83       	std	Y+5, r24	; 0x05
    26a0:	3f c0       	rjmp	.+126    	; 0x2720 <H_Buzzer_Void_BuzzerTriple+0x4b4>
	else if (__tmp > 65535)
    26a2:	6f 81       	ldd	r22, Y+7	; 0x07
    26a4:	78 85       	ldd	r23, Y+8	; 0x08
    26a6:	89 85       	ldd	r24, Y+9	; 0x09
    26a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    26aa:	20 e0       	ldi	r18, 0x00	; 0
    26ac:	3f ef       	ldi	r19, 0xFF	; 255
    26ae:	4f e7       	ldi	r20, 0x7F	; 127
    26b0:	57 e4       	ldi	r21, 0x47	; 71
    26b2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26b6:	18 16       	cp	r1, r24
    26b8:	4c f5       	brge	.+82     	; 0x270c <H_Buzzer_Void_BuzzerTriple+0x4a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    26bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    26be:	8d 85       	ldd	r24, Y+13	; 0x0d
    26c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    26c2:	20 e0       	ldi	r18, 0x00	; 0
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	40 e2       	ldi	r20, 0x20	; 32
    26c8:	51 e4       	ldi	r21, 0x41	; 65
    26ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26ce:	dc 01       	movw	r26, r24
    26d0:	cb 01       	movw	r24, r22
    26d2:	bc 01       	movw	r22, r24
    26d4:	cd 01       	movw	r24, r26
    26d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26da:	dc 01       	movw	r26, r24
    26dc:	cb 01       	movw	r24, r22
    26de:	9e 83       	std	Y+6, r25	; 0x06
    26e0:	8d 83       	std	Y+5, r24	; 0x05
    26e2:	0f c0       	rjmp	.+30     	; 0x2702 <H_Buzzer_Void_BuzzerTriple+0x496>
    26e4:	80 e9       	ldi	r24, 0x90	; 144
    26e6:	91 e0       	ldi	r25, 0x01	; 1
    26e8:	9c 83       	std	Y+4, r25	; 0x04
    26ea:	8b 83       	std	Y+3, r24	; 0x03
    26ec:	8b 81       	ldd	r24, Y+3	; 0x03
    26ee:	9c 81       	ldd	r25, Y+4	; 0x04
    26f0:	01 97       	sbiw	r24, 0x01	; 1
    26f2:	f1 f7       	brne	.-4      	; 0x26f0 <H_Buzzer_Void_BuzzerTriple+0x484>
    26f4:	9c 83       	std	Y+4, r25	; 0x04
    26f6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26f8:	8d 81       	ldd	r24, Y+5	; 0x05
    26fa:	9e 81       	ldd	r25, Y+6	; 0x06
    26fc:	01 97       	sbiw	r24, 0x01	; 1
    26fe:	9e 83       	std	Y+6, r25	; 0x06
    2700:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2702:	8d 81       	ldd	r24, Y+5	; 0x05
    2704:	9e 81       	ldd	r25, Y+6	; 0x06
    2706:	00 97       	sbiw	r24, 0x00	; 0
    2708:	69 f7       	brne	.-38     	; 0x26e4 <H_Buzzer_Void_BuzzerTriple+0x478>
    270a:	14 c0       	rjmp	.+40     	; 0x2734 <H_Buzzer_Void_BuzzerTriple+0x4c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    270c:	6f 81       	ldd	r22, Y+7	; 0x07
    270e:	78 85       	ldd	r23, Y+8	; 0x08
    2710:	89 85       	ldd	r24, Y+9	; 0x09
    2712:	9a 85       	ldd	r25, Y+10	; 0x0a
    2714:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2718:	dc 01       	movw	r26, r24
    271a:	cb 01       	movw	r24, r22
    271c:	9e 83       	std	Y+6, r25	; 0x06
    271e:	8d 83       	std	Y+5, r24	; 0x05
    2720:	8d 81       	ldd	r24, Y+5	; 0x05
    2722:	9e 81       	ldd	r25, Y+6	; 0x06
    2724:	9a 83       	std	Y+2, r25	; 0x02
    2726:	89 83       	std	Y+1, r24	; 0x01
    2728:	89 81       	ldd	r24, Y+1	; 0x01
    272a:	9a 81       	ldd	r25, Y+2	; 0x02
    272c:	01 97       	sbiw	r24, 0x01	; 1
    272e:	f1 f7       	brne	.-4      	; 0x272c <H_Buzzer_Void_BuzzerTriple+0x4c0>
    2730:	9a 83       	std	Y+2, r25	; 0x02
    2732:	89 83       	std	Y+1, r24	; 0x01
	 _delay_ms(BUZZER_ONDELAY_TIME);
	 H_Buzzer_Void_BuzzerOff();
    2734:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <H_Buzzer_Void_BuzzerOff>
 }
    2738:	ca 5b       	subi	r28, 0xBA	; 186
    273a:	df 4f       	sbci	r29, 0xFF	; 255
    273c:	0f b6       	in	r0, 0x3f	; 63
    273e:	f8 94       	cli
    2740:	de bf       	out	0x3e, r29	; 62
    2742:	0f be       	out	0x3f, r0	; 63
    2744:	cd bf       	out	0x3d, r28	; 61
    2746:	cf 91       	pop	r28
    2748:	df 91       	pop	r29
    274a:	1f 91       	pop	r17
    274c:	0f 91       	pop	r16
    274e:	08 95       	ret

00002750 <H_Buzzer_Void_BuzzerLong>:
 void H_Buzzer_Void_BuzzerLong(void)
 {
    2750:	df 93       	push	r29
    2752:	cf 93       	push	r28
    2754:	cd b7       	in	r28, 0x3d	; 61
    2756:	de b7       	in	r29, 0x3e	; 62
    2758:	2e 97       	sbiw	r28, 0x0e	; 14
    275a:	0f b6       	in	r0, 0x3f	; 63
    275c:	f8 94       	cli
    275e:	de bf       	out	0x3e, r29	; 62
    2760:	0f be       	out	0x3f, r0	; 63
    2762:	cd bf       	out	0x3d, r28	; 61
	 H_Buzzer_Void_BuzzerOn();
    2764:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <H_Buzzer_Void_BuzzerOn>
    2768:	80 e0       	ldi	r24, 0x00	; 0
    276a:	90 e4       	ldi	r25, 0x40	; 64
    276c:	ac e9       	ldi	r26, 0x9C	; 156
    276e:	b5 e4       	ldi	r27, 0x45	; 69
    2770:	8b 87       	std	Y+11, r24	; 0x0b
    2772:	9c 87       	std	Y+12, r25	; 0x0c
    2774:	ad 87       	std	Y+13, r26	; 0x0d
    2776:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2778:	6b 85       	ldd	r22, Y+11	; 0x0b
    277a:	7c 85       	ldd	r23, Y+12	; 0x0c
    277c:	8d 85       	ldd	r24, Y+13	; 0x0d
    277e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2780:	20 e0       	ldi	r18, 0x00	; 0
    2782:	30 e0       	ldi	r19, 0x00	; 0
    2784:	4a e7       	ldi	r20, 0x7A	; 122
    2786:	55 e4       	ldi	r21, 0x45	; 69
    2788:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    278c:	dc 01       	movw	r26, r24
    278e:	cb 01       	movw	r24, r22
    2790:	8f 83       	std	Y+7, r24	; 0x07
    2792:	98 87       	std	Y+8, r25	; 0x08
    2794:	a9 87       	std	Y+9, r26	; 0x09
    2796:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2798:	6f 81       	ldd	r22, Y+7	; 0x07
    279a:	78 85       	ldd	r23, Y+8	; 0x08
    279c:	89 85       	ldd	r24, Y+9	; 0x09
    279e:	9a 85       	ldd	r25, Y+10	; 0x0a
    27a0:	20 e0       	ldi	r18, 0x00	; 0
    27a2:	30 e0       	ldi	r19, 0x00	; 0
    27a4:	40 e8       	ldi	r20, 0x80	; 128
    27a6:	5f e3       	ldi	r21, 0x3F	; 63
    27a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27ac:	88 23       	and	r24, r24
    27ae:	2c f4       	brge	.+10     	; 0x27ba <H_Buzzer_Void_BuzzerLong+0x6a>
		__ticks = 1;
    27b0:	81 e0       	ldi	r24, 0x01	; 1
    27b2:	90 e0       	ldi	r25, 0x00	; 0
    27b4:	9e 83       	std	Y+6, r25	; 0x06
    27b6:	8d 83       	std	Y+5, r24	; 0x05
    27b8:	3f c0       	rjmp	.+126    	; 0x2838 <H_Buzzer_Void_BuzzerLong+0xe8>
	else if (__tmp > 65535)
    27ba:	6f 81       	ldd	r22, Y+7	; 0x07
    27bc:	78 85       	ldd	r23, Y+8	; 0x08
    27be:	89 85       	ldd	r24, Y+9	; 0x09
    27c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    27c2:	20 e0       	ldi	r18, 0x00	; 0
    27c4:	3f ef       	ldi	r19, 0xFF	; 255
    27c6:	4f e7       	ldi	r20, 0x7F	; 127
    27c8:	57 e4       	ldi	r21, 0x47	; 71
    27ca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27ce:	18 16       	cp	r1, r24
    27d0:	4c f5       	brge	.+82     	; 0x2824 <H_Buzzer_Void_BuzzerLong+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    27d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    27d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    27d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    27da:	20 e0       	ldi	r18, 0x00	; 0
    27dc:	30 e0       	ldi	r19, 0x00	; 0
    27de:	40 e2       	ldi	r20, 0x20	; 32
    27e0:	51 e4       	ldi	r21, 0x41	; 65
    27e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27e6:	dc 01       	movw	r26, r24
    27e8:	cb 01       	movw	r24, r22
    27ea:	bc 01       	movw	r22, r24
    27ec:	cd 01       	movw	r24, r26
    27ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27f2:	dc 01       	movw	r26, r24
    27f4:	cb 01       	movw	r24, r22
    27f6:	9e 83       	std	Y+6, r25	; 0x06
    27f8:	8d 83       	std	Y+5, r24	; 0x05
    27fa:	0f c0       	rjmp	.+30     	; 0x281a <H_Buzzer_Void_BuzzerLong+0xca>
    27fc:	80 e9       	ldi	r24, 0x90	; 144
    27fe:	91 e0       	ldi	r25, 0x01	; 1
    2800:	9c 83       	std	Y+4, r25	; 0x04
    2802:	8b 83       	std	Y+3, r24	; 0x03
    2804:	8b 81       	ldd	r24, Y+3	; 0x03
    2806:	9c 81       	ldd	r25, Y+4	; 0x04
    2808:	01 97       	sbiw	r24, 0x01	; 1
    280a:	f1 f7       	brne	.-4      	; 0x2808 <H_Buzzer_Void_BuzzerLong+0xb8>
    280c:	9c 83       	std	Y+4, r25	; 0x04
    280e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2810:	8d 81       	ldd	r24, Y+5	; 0x05
    2812:	9e 81       	ldd	r25, Y+6	; 0x06
    2814:	01 97       	sbiw	r24, 0x01	; 1
    2816:	9e 83       	std	Y+6, r25	; 0x06
    2818:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    281a:	8d 81       	ldd	r24, Y+5	; 0x05
    281c:	9e 81       	ldd	r25, Y+6	; 0x06
    281e:	00 97       	sbiw	r24, 0x00	; 0
    2820:	69 f7       	brne	.-38     	; 0x27fc <H_Buzzer_Void_BuzzerLong+0xac>
    2822:	14 c0       	rjmp	.+40     	; 0x284c <H_Buzzer_Void_BuzzerLong+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2824:	6f 81       	ldd	r22, Y+7	; 0x07
    2826:	78 85       	ldd	r23, Y+8	; 0x08
    2828:	89 85       	ldd	r24, Y+9	; 0x09
    282a:	9a 85       	ldd	r25, Y+10	; 0x0a
    282c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2830:	dc 01       	movw	r26, r24
    2832:	cb 01       	movw	r24, r22
    2834:	9e 83       	std	Y+6, r25	; 0x06
    2836:	8d 83       	std	Y+5, r24	; 0x05
    2838:	8d 81       	ldd	r24, Y+5	; 0x05
    283a:	9e 81       	ldd	r25, Y+6	; 0x06
    283c:	9a 83       	std	Y+2, r25	; 0x02
    283e:	89 83       	std	Y+1, r24	; 0x01
    2840:	89 81       	ldd	r24, Y+1	; 0x01
    2842:	9a 81       	ldd	r25, Y+2	; 0x02
    2844:	01 97       	sbiw	r24, 0x01	; 1
    2846:	f1 f7       	brne	.-4      	; 0x2844 <H_Buzzer_Void_BuzzerLong+0xf4>
    2848:	9a 83       	std	Y+2, r25	; 0x02
    284a:	89 83       	std	Y+1, r24	; 0x01
	 _delay_ms(10*BUZZER_ONDELAY_TIME);
	 H_Buzzer_Void_BuzzerOff();
    284c:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <H_Buzzer_Void_BuzzerOff>
 }
    2850:	2e 96       	adiw	r28, 0x0e	; 14
    2852:	0f b6       	in	r0, 0x3f	; 63
    2854:	f8 94       	cli
    2856:	de bf       	out	0x3e, r29	; 62
    2858:	0f be       	out	0x3f, r0	; 63
    285a:	cd bf       	out	0x3d, r28	; 61
    285c:	cf 91       	pop	r28
    285e:	df 91       	pop	r29
    2860:	08 95       	ret

00002862 <main>:
#include"Relay.h"
#include"util/delay.h"


int main()
{
    2862:	df 93       	push	r29
    2864:	cf 93       	push	r28
    2866:	cd b7       	in	r28, 0x3d	; 61
    2868:	de b7       	in	r29, 0x3e	; 62
    286a:	2e 97       	sbiw	r28, 0x0e	; 14
    286c:	0f b6       	in	r0, 0x3f	; 63
    286e:	f8 94       	cli
    2870:	de bf       	out	0x3e, r29	; 62
    2872:	0f be       	out	0x3f, r0	; 63
    2874:	cd bf       	out	0x3d, r28	; 61
	H_Relay_Void_RelayInit(RELAY2);
    2876:	82 e0       	ldi	r24, 0x02	; 2
    2878:	0e 94 ce 0c 	call	0x199c	; 0x199c <H_Relay_Void_RelayInit>
	while(1)
	{
		H_Relay_Void_RelayOff(RELAY2);
    287c:	82 e0       	ldi	r24, 0x02	; 2
    287e:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <H_Relay_Void_RelayOff>
    2882:	80 e0       	ldi	r24, 0x00	; 0
    2884:	90 e0       	ldi	r25, 0x00	; 0
    2886:	aa ef       	ldi	r26, 0xFA	; 250
    2888:	b3 e4       	ldi	r27, 0x43	; 67
    288a:	8b 87       	std	Y+11, r24	; 0x0b
    288c:	9c 87       	std	Y+12, r25	; 0x0c
    288e:	ad 87       	std	Y+13, r26	; 0x0d
    2890:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2892:	6b 85       	ldd	r22, Y+11	; 0x0b
    2894:	7c 85       	ldd	r23, Y+12	; 0x0c
    2896:	8d 85       	ldd	r24, Y+13	; 0x0d
    2898:	9e 85       	ldd	r25, Y+14	; 0x0e
    289a:	20 e0       	ldi	r18, 0x00	; 0
    289c:	30 e0       	ldi	r19, 0x00	; 0
    289e:	4a e7       	ldi	r20, 0x7A	; 122
    28a0:	55 e4       	ldi	r21, 0x45	; 69
    28a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28a6:	dc 01       	movw	r26, r24
    28a8:	cb 01       	movw	r24, r22
    28aa:	8f 83       	std	Y+7, r24	; 0x07
    28ac:	98 87       	std	Y+8, r25	; 0x08
    28ae:	a9 87       	std	Y+9, r26	; 0x09
    28b0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    28b2:	6f 81       	ldd	r22, Y+7	; 0x07
    28b4:	78 85       	ldd	r23, Y+8	; 0x08
    28b6:	89 85       	ldd	r24, Y+9	; 0x09
    28b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    28ba:	20 e0       	ldi	r18, 0x00	; 0
    28bc:	30 e0       	ldi	r19, 0x00	; 0
    28be:	40 e8       	ldi	r20, 0x80	; 128
    28c0:	5f e3       	ldi	r21, 0x3F	; 63
    28c2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    28c6:	88 23       	and	r24, r24
    28c8:	2c f4       	brge	.+10     	; 0x28d4 <main+0x72>
		__ticks = 1;
    28ca:	81 e0       	ldi	r24, 0x01	; 1
    28cc:	90 e0       	ldi	r25, 0x00	; 0
    28ce:	9e 83       	std	Y+6, r25	; 0x06
    28d0:	8d 83       	std	Y+5, r24	; 0x05
    28d2:	3f c0       	rjmp	.+126    	; 0x2952 <main+0xf0>
	else if (__tmp > 65535)
    28d4:	6f 81       	ldd	r22, Y+7	; 0x07
    28d6:	78 85       	ldd	r23, Y+8	; 0x08
    28d8:	89 85       	ldd	r24, Y+9	; 0x09
    28da:	9a 85       	ldd	r25, Y+10	; 0x0a
    28dc:	20 e0       	ldi	r18, 0x00	; 0
    28de:	3f ef       	ldi	r19, 0xFF	; 255
    28e0:	4f e7       	ldi	r20, 0x7F	; 127
    28e2:	57 e4       	ldi	r21, 0x47	; 71
    28e4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28e8:	18 16       	cp	r1, r24
    28ea:	4c f5       	brge	.+82     	; 0x293e <main+0xdc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    28ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    28f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    28f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    28f4:	20 e0       	ldi	r18, 0x00	; 0
    28f6:	30 e0       	ldi	r19, 0x00	; 0
    28f8:	40 e2       	ldi	r20, 0x20	; 32
    28fa:	51 e4       	ldi	r21, 0x41	; 65
    28fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2900:	dc 01       	movw	r26, r24
    2902:	cb 01       	movw	r24, r22
    2904:	bc 01       	movw	r22, r24
    2906:	cd 01       	movw	r24, r26
    2908:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    290c:	dc 01       	movw	r26, r24
    290e:	cb 01       	movw	r24, r22
    2910:	9e 83       	std	Y+6, r25	; 0x06
    2912:	8d 83       	std	Y+5, r24	; 0x05
    2914:	0f c0       	rjmp	.+30     	; 0x2934 <main+0xd2>
    2916:	80 e9       	ldi	r24, 0x90	; 144
    2918:	91 e0       	ldi	r25, 0x01	; 1
    291a:	9c 83       	std	Y+4, r25	; 0x04
    291c:	8b 83       	std	Y+3, r24	; 0x03
    291e:	8b 81       	ldd	r24, Y+3	; 0x03
    2920:	9c 81       	ldd	r25, Y+4	; 0x04
    2922:	01 97       	sbiw	r24, 0x01	; 1
    2924:	f1 f7       	brne	.-4      	; 0x2922 <main+0xc0>
    2926:	9c 83       	std	Y+4, r25	; 0x04
    2928:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    292a:	8d 81       	ldd	r24, Y+5	; 0x05
    292c:	9e 81       	ldd	r25, Y+6	; 0x06
    292e:	01 97       	sbiw	r24, 0x01	; 1
    2930:	9e 83       	std	Y+6, r25	; 0x06
    2932:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2934:	8d 81       	ldd	r24, Y+5	; 0x05
    2936:	9e 81       	ldd	r25, Y+6	; 0x06
    2938:	00 97       	sbiw	r24, 0x00	; 0
    293a:	69 f7       	brne	.-38     	; 0x2916 <main+0xb4>
    293c:	9f cf       	rjmp	.-194    	; 0x287c <main+0x1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    293e:	6f 81       	ldd	r22, Y+7	; 0x07
    2940:	78 85       	ldd	r23, Y+8	; 0x08
    2942:	89 85       	ldd	r24, Y+9	; 0x09
    2944:	9a 85       	ldd	r25, Y+10	; 0x0a
    2946:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    294a:	dc 01       	movw	r26, r24
    294c:	cb 01       	movw	r24, r22
    294e:	9e 83       	std	Y+6, r25	; 0x06
    2950:	8d 83       	std	Y+5, r24	; 0x05
    2952:	8d 81       	ldd	r24, Y+5	; 0x05
    2954:	9e 81       	ldd	r25, Y+6	; 0x06
    2956:	9a 83       	std	Y+2, r25	; 0x02
    2958:	89 83       	std	Y+1, r24	; 0x01
    295a:	89 81       	ldd	r24, Y+1	; 0x01
    295c:	9a 81       	ldd	r25, Y+2	; 0x02
    295e:	01 97       	sbiw	r24, 0x01	; 1
    2960:	f1 f7       	brne	.-4      	; 0x295e <main+0xfc>
    2962:	9a 83       	std	Y+2, r25	; 0x02
    2964:	89 83       	std	Y+1, r24	; 0x01
    2966:	8a cf       	rjmp	.-236    	; 0x287c <main+0x1a>

00002968 <__udivmodqi4>:
    2968:	99 1b       	sub	r25, r25
    296a:	79 e0       	ldi	r23, 0x09	; 9
    296c:	04 c0       	rjmp	.+8      	; 0x2976 <__udivmodqi4_ep>

0000296e <__udivmodqi4_loop>:
    296e:	99 1f       	adc	r25, r25
    2970:	96 17       	cp	r25, r22
    2972:	08 f0       	brcs	.+2      	; 0x2976 <__udivmodqi4_ep>
    2974:	96 1b       	sub	r25, r22

00002976 <__udivmodqi4_ep>:
    2976:	88 1f       	adc	r24, r24
    2978:	7a 95       	dec	r23
    297a:	c9 f7       	brne	.-14     	; 0x296e <__udivmodqi4_loop>
    297c:	80 95       	com	r24
    297e:	08 95       	ret

00002980 <__prologue_saves__>:
    2980:	2f 92       	push	r2
    2982:	3f 92       	push	r3
    2984:	4f 92       	push	r4
    2986:	5f 92       	push	r5
    2988:	6f 92       	push	r6
    298a:	7f 92       	push	r7
    298c:	8f 92       	push	r8
    298e:	9f 92       	push	r9
    2990:	af 92       	push	r10
    2992:	bf 92       	push	r11
    2994:	cf 92       	push	r12
    2996:	df 92       	push	r13
    2998:	ef 92       	push	r14
    299a:	ff 92       	push	r15
    299c:	0f 93       	push	r16
    299e:	1f 93       	push	r17
    29a0:	cf 93       	push	r28
    29a2:	df 93       	push	r29
    29a4:	cd b7       	in	r28, 0x3d	; 61
    29a6:	de b7       	in	r29, 0x3e	; 62
    29a8:	ca 1b       	sub	r28, r26
    29aa:	db 0b       	sbc	r29, r27
    29ac:	0f b6       	in	r0, 0x3f	; 63
    29ae:	f8 94       	cli
    29b0:	de bf       	out	0x3e, r29	; 62
    29b2:	0f be       	out	0x3f, r0	; 63
    29b4:	cd bf       	out	0x3d, r28	; 61
    29b6:	09 94       	ijmp

000029b8 <__epilogue_restores__>:
    29b8:	2a 88       	ldd	r2, Y+18	; 0x12
    29ba:	39 88       	ldd	r3, Y+17	; 0x11
    29bc:	48 88       	ldd	r4, Y+16	; 0x10
    29be:	5f 84       	ldd	r5, Y+15	; 0x0f
    29c0:	6e 84       	ldd	r6, Y+14	; 0x0e
    29c2:	7d 84       	ldd	r7, Y+13	; 0x0d
    29c4:	8c 84       	ldd	r8, Y+12	; 0x0c
    29c6:	9b 84       	ldd	r9, Y+11	; 0x0b
    29c8:	aa 84       	ldd	r10, Y+10	; 0x0a
    29ca:	b9 84       	ldd	r11, Y+9	; 0x09
    29cc:	c8 84       	ldd	r12, Y+8	; 0x08
    29ce:	df 80       	ldd	r13, Y+7	; 0x07
    29d0:	ee 80       	ldd	r14, Y+6	; 0x06
    29d2:	fd 80       	ldd	r15, Y+5	; 0x05
    29d4:	0c 81       	ldd	r16, Y+4	; 0x04
    29d6:	1b 81       	ldd	r17, Y+3	; 0x03
    29d8:	aa 81       	ldd	r26, Y+2	; 0x02
    29da:	b9 81       	ldd	r27, Y+1	; 0x01
    29dc:	ce 0f       	add	r28, r30
    29de:	d1 1d       	adc	r29, r1
    29e0:	0f b6       	in	r0, 0x3f	; 63
    29e2:	f8 94       	cli
    29e4:	de bf       	out	0x3e, r29	; 62
    29e6:	0f be       	out	0x3f, r0	; 63
    29e8:	cd bf       	out	0x3d, r28	; 61
    29ea:	ed 01       	movw	r28, r26
    29ec:	08 95       	ret

000029ee <_exit>:
    29ee:	f8 94       	cli

000029f0 <__stop_program>:
    29f0:	ff cf       	rjmp	.-2      	; 0x29f0 <__stop_program>
